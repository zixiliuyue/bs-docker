// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clustermanager.proto

package clustermanager

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cluster struct {
	ClusterID            string            `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string            `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,3,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Provider             string            `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string            `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string            `protobuf:"bytes,6,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID            string            `protobuf:"bytes,7,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,8,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string            `protobuf:"bytes,9,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string            `protobuf:"bytes,10,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive          bool              `protobuf:"varint,11,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType          string            `protobuf:"bytes,12,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	Labels               map[string]string `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Operators            []string          `protobuf:"bytes,14,rep,name=operators,proto3" json:"operators,omitempty"`
	CreateTime           string            `protobuf:"bytes,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string            `protobuf:"bytes,16,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{0}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *Cluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Cluster) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *Cluster) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Cluster) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Cluster) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *Cluster) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Cluster) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Cluster) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Cluster) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *Cluster) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *Cluster) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *Cluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Cluster) GetOperators() []string {
	if m != nil {
		return m.Operators
	}
	return nil
}

func (m *Cluster) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Cluster) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type ClusterCredential struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientModule         string   `protobuf:"bytes,3,opt,name=clientModule,proto3" json:"clientModule,omitempty"`
	ServerAddress        string   `protobuf:"bytes,4,opt,name=serverAddress,proto3" json:"serverAddress,omitempty"`
	CaCertData           string   `protobuf:"bytes,5,opt,name=caCertData,proto3" json:"caCertData,omitempty"`
	UserToken            string   `protobuf:"bytes,6,opt,name=userToken,proto3" json:"userToken,omitempty"`
	ClusterDomain        string   `protobuf:"bytes,7,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	ConnectMode          string   `protobuf:"bytes,8,opt,name=connectMode,proto3" json:"connectMode,omitempty"`
	CreateTime           string   `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterCredential) Reset()         { *m = ClusterCredential{} }
func (m *ClusterCredential) String() string { return proto.CompactTextString(m) }
func (*ClusterCredential) ProtoMessage()    {}
func (*ClusterCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{1}
}

func (m *ClusterCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCredential.Unmarshal(m, b)
}
func (m *ClusterCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCredential.Marshal(b, m, deterministic)
}
func (m *ClusterCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCredential.Merge(m, src)
}
func (m *ClusterCredential) XXX_Size() int {
	return xxx_messageInfo_ClusterCredential.Size(m)
}
func (m *ClusterCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCredential.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCredential proto.InternalMessageInfo

func (m *ClusterCredential) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *ClusterCredential) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterCredential) GetClientModule() string {
	if m != nil {
		return m.ClientModule
	}
	return ""
}

func (m *ClusterCredential) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *ClusterCredential) GetCaCertData() string {
	if m != nil {
		return m.CaCertData
	}
	return ""
}

func (m *ClusterCredential) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *ClusterCredential) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *ClusterCredential) GetConnectMode() string {
	if m != nil {
		return m.ConnectMode
	}
	return ""
}

func (m *ClusterCredential) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ClusterCredential) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type Namespace struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,6,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	CreateTime           string            `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string            `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	QuotaList            []*ResourceQuota  `protobuf:"bytes,9,rep,name=quotaList,proto3" json:"quotaList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{2}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Namespace) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *Namespace) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Namespace) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *Namespace) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Namespace) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

func (m *Namespace) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Namespace) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Namespace) GetQuotaList() []*ResourceQuota {
	if m != nil {
		return m.QuotaList
	}
	return nil
}

type ResourceQuota struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,4,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	CreateTime           string   `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceQuota) Reset()         { *m = ResourceQuota{} }
func (m *ResourceQuota) String() string { return proto.CompactTextString(m) }
func (*ResourceQuota) ProtoMessage()    {}
func (*ResourceQuota) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{3}
}

func (m *ResourceQuota) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceQuota.Unmarshal(m, b)
}
func (m *ResourceQuota) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceQuota.Marshal(b, m, deterministic)
}
func (m *ResourceQuota) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceQuota.Merge(m, src)
}
func (m *ResourceQuota) XXX_Size() int {
	return xxx_messageInfo_ResourceQuota.Size(m)
}
func (m *ResourceQuota) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceQuota.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceQuota proto.InternalMessageInfo

func (m *ResourceQuota) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ResourceQuota) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ResourceQuota) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ResourceQuota) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

func (m *ResourceQuota) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *ResourceQuota) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type CreateClusterReq struct {
	ClusterID            string            `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string            `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider             string            `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string            `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string            `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID            string            `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string            `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string            `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive          bool              `protobuf:"varint,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType          string            `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	Labels               map[string]string `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Operators            []string          `protobuf:"bytes,13,rep,name=operators,proto3" json:"operators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateClusterReq) Reset()         { *m = CreateClusterReq{} }
func (m *CreateClusterReq) String() string { return proto.CompactTextString(m) }
func (*CreateClusterReq) ProtoMessage()    {}
func (*CreateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{4}
}

func (m *CreateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterReq.Unmarshal(m, b)
}
func (m *CreateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterReq.Marshal(b, m, deterministic)
}
func (m *CreateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterReq.Merge(m, src)
}
func (m *CreateClusterReq) XXX_Size() int {
	return xxx_messageInfo_CreateClusterReq.Size(m)
}
func (m *CreateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterReq proto.InternalMessageInfo

func (m *CreateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *CreateClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *CreateClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *CreateClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *CreateClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *CreateClusterReq) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *CreateClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *CreateClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateClusterReq) GetOperators() []string {
	if m != nil {
		return m.Operators
	}
	return nil
}

type CreateClusterResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterResp) Reset()         { *m = CreateClusterResp{} }
func (m *CreateClusterResp) String() string { return proto.CompactTextString(m) }
func (*CreateClusterResp) ProtoMessage()    {}
func (*CreateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{5}
}

func (m *CreateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterResp.Unmarshal(m, b)
}
func (m *CreateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterResp.Marshal(b, m, deterministic)
}
func (m *CreateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterResp.Merge(m, src)
}
func (m *CreateClusterResp) XXX_Size() int {
	return xxx_messageInfo_CreateClusterResp.Size(m)
}
func (m *CreateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterResp proto.InternalMessageInfo

func (m *CreateClusterResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteClusterReq struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,2,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterReq) Reset()         { *m = DeleteClusterReq{} }
func (m *DeleteClusterReq) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterReq) ProtoMessage()    {}
func (*DeleteClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{6}
}

func (m *DeleteClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterReq.Unmarshal(m, b)
}
func (m *DeleteClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterReq.Marshal(b, m, deterministic)
}
func (m *DeleteClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterReq.Merge(m, src)
}
func (m *DeleteClusterReq) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterReq.Size(m)
}
func (m *DeleteClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterReq proto.InternalMessageInfo

func (m *DeleteClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteClusterReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteClusterResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterResp) Reset()         { *m = DeleteClusterResp{} }
func (m *DeleteClusterResp) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterResp) ProtoMessage()    {}
func (*DeleteClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{7}
}

func (m *DeleteClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterResp.Unmarshal(m, b)
}
func (m *DeleteClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterResp.Marshal(b, m, deterministic)
}
func (m *DeleteClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterResp.Merge(m, src)
}
func (m *DeleteClusterResp) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterResp.Size(m)
}
func (m *DeleteClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterResp proto.InternalMessageInfo

func (m *DeleteClusterResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateClusterReq struct {
	ClusterID            string            `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClusterName          string            `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider             string            `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string            `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string            `protobuf:"bytes,5,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID            string            `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,7,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string            `protobuf:"bytes,8,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string            `protobuf:"bytes,9,opt,name=engineType,proto3" json:"engineType,omitempty"`
	IsExclusive          bool              `protobuf:"varint,10,opt,name=isExclusive,proto3" json:"isExclusive,omitempty"`
	ClusterType          string            `protobuf:"bytes,11,opt,name=clusterType,proto3" json:"clusterType,omitempty"`
	Labels               map[string]string `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Operators            []string          `protobuf:"bytes,13,rep,name=operators,proto3" json:"operators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateClusterReq) Reset()         { *m = UpdateClusterReq{} }
func (m *UpdateClusterReq) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterReq) ProtoMessage()    {}
func (*UpdateClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{8}
}

func (m *UpdateClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterReq.Unmarshal(m, b)
}
func (m *UpdateClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterReq.Marshal(b, m, deterministic)
}
func (m *UpdateClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterReq.Merge(m, src)
}
func (m *UpdateClusterReq) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterReq.Size(m)
}
func (m *UpdateClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterReq proto.InternalMessageInfo

func (m *UpdateClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *UpdateClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *UpdateClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpdateClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *UpdateClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *UpdateClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *UpdateClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *UpdateClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *UpdateClusterReq) GetIsExclusive() bool {
	if m != nil {
		return m.IsExclusive
	}
	return false
}

func (m *UpdateClusterReq) GetClusterType() string {
	if m != nil {
		return m.ClusterType
	}
	return ""
}

func (m *UpdateClusterReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateClusterReq) GetOperators() []string {
	if m != nil {
		return m.Operators
	}
	return nil
}

type UpdateClusterResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateClusterResp) Reset()         { *m = UpdateClusterResp{} }
func (m *UpdateClusterResp) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterResp) ProtoMessage()    {}
func (*UpdateClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{9}
}

func (m *UpdateClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterResp.Unmarshal(m, b)
}
func (m *UpdateClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterResp.Marshal(b, m, deterministic)
}
func (m *UpdateClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterResp.Merge(m, src)
}
func (m *UpdateClusterResp) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterResp.Size(m)
}
func (m *UpdateClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterResp proto.InternalMessageInfo

func (m *UpdateClusterResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetClusterReq struct {
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterReq) Reset()         { *m = GetClusterReq{} }
func (m *GetClusterReq) String() string { return proto.CompactTextString(m) }
func (*GetClusterReq) ProtoMessage()    {}
func (*GetClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{10}
}

func (m *GetClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterReq.Unmarshal(m, b)
}
func (m *GetClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterReq.Marshal(b, m, deterministic)
}
func (m *GetClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterReq.Merge(m, src)
}
func (m *GetClusterReq) XXX_Size() int {
	return xxx_messageInfo_GetClusterReq.Size(m)
}
func (m *GetClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterReq proto.InternalMessageInfo

func (m *GetClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetClusterResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Cluster `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterResp) Reset()         { *m = GetClusterResp{} }
func (m *GetClusterResp) String() string { return proto.CompactTextString(m) }
func (*GetClusterResp) ProtoMessage()    {}
func (*GetClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{11}
}

func (m *GetClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterResp.Unmarshal(m, b)
}
func (m *GetClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterResp.Marshal(b, m, deterministic)
}
func (m *GetClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterResp.Merge(m, src)
}
func (m *GetClusterResp) XXX_Size() int {
	return xxx_messageInfo_GetClusterResp.Size(m)
}
func (m *GetClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterResp proto.InternalMessageInfo

func (m *GetClusterResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetClusterResp) GetData() *Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListClusterReq struct {
	ClusterName          string   `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Provider             string   `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	VpcID                string   `protobuf:"bytes,4,opt,name=vpcID,proto3" json:"vpcID,omitempty"`
	ProjectID            string   `protobuf:"bytes,5,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string   `protobuf:"bytes,6,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Environment          string   `protobuf:"bytes,7,opt,name=environment,proto3" json:"environment,omitempty"`
	EngineType           string   `protobuf:"bytes,8,opt,name=engineType,proto3" json:"engineType,omitempty"`
	Offset               uint64   `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClusterReq) Reset()         { *m = ListClusterReq{} }
func (m *ListClusterReq) String() string { return proto.CompactTextString(m) }
func (*ListClusterReq) ProtoMessage()    {}
func (*ListClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{12}
}

func (m *ListClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterReq.Unmarshal(m, b)
}
func (m *ListClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterReq.Marshal(b, m, deterministic)
}
func (m *ListClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterReq.Merge(m, src)
}
func (m *ListClusterReq) XXX_Size() int {
	return xxx_messageInfo_ListClusterReq.Size(m)
}
func (m *ListClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterReq proto.InternalMessageInfo

func (m *ListClusterReq) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ListClusterReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ListClusterReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ListClusterReq) GetVpcID() string {
	if m != nil {
		return m.VpcID
	}
	return ""
}

func (m *ListClusterReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListClusterReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListClusterReq) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ListClusterReq) GetEngineType() string {
	if m != nil {
		return m.EngineType
	}
	return ""
}

func (m *ListClusterReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListClusterReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListClusterResp struct {
	Code                 uint64     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Cluster `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListClusterResp) Reset()         { *m = ListClusterResp{} }
func (m *ListClusterResp) String() string { return proto.CompactTextString(m) }
func (*ListClusterResp) ProtoMessage()    {}
func (*ListClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{13}
}

func (m *ListClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterResp.Unmarshal(m, b)
}
func (m *ListClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterResp.Marshal(b, m, deterministic)
}
func (m *ListClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterResp.Merge(m, src)
}
func (m *ListClusterResp) XXX_Size() int {
	return xxx_messageInfo_ListClusterResp.Size(m)
}
func (m *ListClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterResp proto.InternalMessageInfo

func (m *ListClusterResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListClusterResp) GetData() []*Cluster {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterCredentialReq) Reset()         { *m = GetClusterCredentialReq{} }
func (m *GetClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*GetClusterCredentialReq) ProtoMessage()    {}
func (*GetClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{14}
}

func (m *GetClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterCredentialReq.Unmarshal(m, b)
}
func (m *GetClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *GetClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterCredentialReq.Merge(m, src)
}
func (m *GetClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_GetClusterCredentialReq.Size(m)
}
func (m *GetClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterCredentialReq proto.InternalMessageInfo

func (m *GetClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

type GetClusterCredentialResp struct {
	Code                 uint64             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool               `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ClusterCredential `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetClusterCredentialResp) Reset()         { *m = GetClusterCredentialResp{} }
func (m *GetClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*GetClusterCredentialResp) ProtoMessage()    {}
func (*GetClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{15}
}

func (m *GetClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterCredentialResp.Unmarshal(m, b)
}
func (m *GetClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *GetClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterCredentialResp.Merge(m, src)
}
func (m *GetClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_GetClusterCredentialResp.Size(m)
}
func (m *GetClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterCredentialResp proto.InternalMessageInfo

func (m *GetClusterCredentialResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetClusterCredentialResp) GetData() *ClusterCredential {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientModule         string   `protobuf:"bytes,3,opt,name=clientModule,proto3" json:"clientModule,omitempty"`
	ServerAddress        string   `protobuf:"bytes,4,opt,name=serverAddress,proto3" json:"serverAddress,omitempty"`
	CaCertData           string   `protobuf:"bytes,5,opt,name=caCertData,proto3" json:"caCertData,omitempty"`
	UserToken            string   `protobuf:"bytes,6,opt,name=userToken,proto3" json:"userToken,omitempty"`
	ClusterDomain        string   `protobuf:"bytes,7,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateClusterCredentialReq) Reset()         { *m = UpdateClusterCredentialReq{} }
func (m *UpdateClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterCredentialReq) ProtoMessage()    {}
func (*UpdateClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{16}
}

func (m *UpdateClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterCredentialReq.Unmarshal(m, b)
}
func (m *UpdateClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *UpdateClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterCredentialReq.Merge(m, src)
}
func (m *UpdateClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterCredentialReq.Size(m)
}
func (m *UpdateClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterCredentialReq proto.InternalMessageInfo

func (m *UpdateClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClientModule() string {
	if m != nil {
		return m.ClientModule
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetCaCertData() string {
	if m != nil {
		return m.CaCertData
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *UpdateClusterCredentialReq) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

type UpdateClusterCredentialResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateClusterCredentialResp) Reset()         { *m = UpdateClusterCredentialResp{} }
func (m *UpdateClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterCredentialResp) ProtoMessage()    {}
func (*UpdateClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{17}
}

func (m *UpdateClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterCredentialResp.Unmarshal(m, b)
}
func (m *UpdateClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *UpdateClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterCredentialResp.Merge(m, src)
}
func (m *UpdateClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterCredentialResp.Size(m)
}
func (m *UpdateClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterCredentialResp proto.InternalMessageInfo

func (m *UpdateClusterCredentialResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterCredentialReq) Reset()         { *m = DeleteClusterCredentialReq{} }
func (m *DeleteClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterCredentialReq) ProtoMessage()    {}
func (*DeleteClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{18}
}

func (m *DeleteClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterCredentialReq.Unmarshal(m, b)
}
func (m *DeleteClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *DeleteClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterCredentialReq.Merge(m, src)
}
func (m *DeleteClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterCredentialReq.Size(m)
}
func (m *DeleteClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterCredentialReq proto.InternalMessageInfo

func (m *DeleteClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

type DeleteClusterCredentialResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterCredentialResp) Reset()         { *m = DeleteClusterCredentialResp{} }
func (m *DeleteClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterCredentialResp) ProtoMessage()    {}
func (*DeleteClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{19}
}

func (m *DeleteClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterCredentialResp.Unmarshal(m, b)
}
func (m *DeleteClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *DeleteClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterCredentialResp.Merge(m, src)
}
func (m *DeleteClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterCredentialResp.Size(m)
}
func (m *DeleteClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterCredentialResp proto.InternalMessageInfo

func (m *DeleteClusterCredentialResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ListClusterCredentialReq struct {
	ServerKey            string   `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ClientMode           string   `protobuf:"bytes,3,opt,name=clientMode,proto3" json:"clientMode,omitempty"`
	ConnectMode          string   `protobuf:"bytes,4,opt,name=connectMode,proto3" json:"connectMode,omitempty"`
	Offset               uint64   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClusterCredentialReq) Reset()         { *m = ListClusterCredentialReq{} }
func (m *ListClusterCredentialReq) String() string { return proto.CompactTextString(m) }
func (*ListClusterCredentialReq) ProtoMessage()    {}
func (*ListClusterCredentialReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{20}
}

func (m *ListClusterCredentialReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterCredentialReq.Unmarshal(m, b)
}
func (m *ListClusterCredentialReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterCredentialReq.Marshal(b, m, deterministic)
}
func (m *ListClusterCredentialReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterCredentialReq.Merge(m, src)
}
func (m *ListClusterCredentialReq) XXX_Size() int {
	return xxx_messageInfo_ListClusterCredentialReq.Size(m)
}
func (m *ListClusterCredentialReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterCredentialReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterCredentialReq proto.InternalMessageInfo

func (m *ListClusterCredentialReq) GetServerKey() string {
	if m != nil {
		return m.ServerKey
	}
	return ""
}

func (m *ListClusterCredentialReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListClusterCredentialReq) GetClientMode() string {
	if m != nil {
		return m.ClientMode
	}
	return ""
}

func (m *ListClusterCredentialReq) GetConnectMode() string {
	if m != nil {
		return m.ConnectMode
	}
	return ""
}

func (m *ListClusterCredentialReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListClusterCredentialReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListClusterCredentialResp struct {
	Code                 uint64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ClusterCredential `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListClusterCredentialResp) Reset()         { *m = ListClusterCredentialResp{} }
func (m *ListClusterCredentialResp) String() string { return proto.CompactTextString(m) }
func (*ListClusterCredentialResp) ProtoMessage()    {}
func (*ListClusterCredentialResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{21}
}

func (m *ListClusterCredentialResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClusterCredentialResp.Unmarshal(m, b)
}
func (m *ListClusterCredentialResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClusterCredentialResp.Marshal(b, m, deterministic)
}
func (m *ListClusterCredentialResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClusterCredentialResp.Merge(m, src)
}
func (m *ListClusterCredentialResp) XXX_Size() int {
	return xxx_messageInfo_ListClusterCredentialResp.Size(m)
}
func (m *ListClusterCredentialResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClusterCredentialResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListClusterCredentialResp proto.InternalMessageInfo

func (m *ListClusterCredentialResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListClusterCredentialResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListClusterCredentialResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListClusterCredentialResp) GetData() []*ClusterCredential {
	if m != nil {
		return m.Data
	}
	return nil
}

type InitFederationClusterReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitFederationClusterReq) Reset()         { *m = InitFederationClusterReq{} }
func (m *InitFederationClusterReq) String() string { return proto.CompactTextString(m) }
func (*InitFederationClusterReq) ProtoMessage()    {}
func (*InitFederationClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{22}
}

func (m *InitFederationClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitFederationClusterReq.Unmarshal(m, b)
}
func (m *InitFederationClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitFederationClusterReq.Marshal(b, m, deterministic)
}
func (m *InitFederationClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitFederationClusterReq.Merge(m, src)
}
func (m *InitFederationClusterReq) XXX_Size() int {
	return xxx_messageInfo_InitFederationClusterReq.Size(m)
}
func (m *InitFederationClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InitFederationClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_InitFederationClusterReq proto.InternalMessageInfo

type InitFederationClusterResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitFederationClusterResp) Reset()         { *m = InitFederationClusterResp{} }
func (m *InitFederationClusterResp) String() string { return proto.CompactTextString(m) }
func (*InitFederationClusterResp) ProtoMessage()    {}
func (*InitFederationClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{23}
}

func (m *InitFederationClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitFederationClusterResp.Unmarshal(m, b)
}
func (m *InitFederationClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitFederationClusterResp.Marshal(b, m, deterministic)
}
func (m *InitFederationClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitFederationClusterResp.Merge(m, src)
}
func (m *InitFederationClusterResp) XXX_Size() int {
	return xxx_messageInfo_InitFederationClusterResp.Size(m)
}
func (m *InitFederationClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InitFederationClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_InitFederationClusterResp proto.InternalMessageInfo

type AddFederatedClusterReq struct {
	FederationClusterID  string   `protobuf:"bytes,1,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,2,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFederatedClusterReq) Reset()         { *m = AddFederatedClusterReq{} }
func (m *AddFederatedClusterReq) String() string { return proto.CompactTextString(m) }
func (*AddFederatedClusterReq) ProtoMessage()    {}
func (*AddFederatedClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{24}
}

func (m *AddFederatedClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFederatedClusterReq.Unmarshal(m, b)
}
func (m *AddFederatedClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFederatedClusterReq.Marshal(b, m, deterministic)
}
func (m *AddFederatedClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFederatedClusterReq.Merge(m, src)
}
func (m *AddFederatedClusterReq) XXX_Size() int {
	return xxx_messageInfo_AddFederatedClusterReq.Size(m)
}
func (m *AddFederatedClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFederatedClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFederatedClusterReq proto.InternalMessageInfo

func (m *AddFederatedClusterReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *AddFederatedClusterReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type AddFederatedClusterResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFederatedClusterResp) Reset()         { *m = AddFederatedClusterResp{} }
func (m *AddFederatedClusterResp) String() string { return proto.CompactTextString(m) }
func (*AddFederatedClusterResp) ProtoMessage()    {}
func (*AddFederatedClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{25}
}

func (m *AddFederatedClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFederatedClusterResp.Unmarshal(m, b)
}
func (m *AddFederatedClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFederatedClusterResp.Marshal(b, m, deterministic)
}
func (m *AddFederatedClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFederatedClusterResp.Merge(m, src)
}
func (m *AddFederatedClusterResp) XXX_Size() int {
	return xxx_messageInfo_AddFederatedClusterResp.Size(m)
}
func (m *AddFederatedClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFederatedClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddFederatedClusterResp proto.InternalMessageInfo

func (m *AddFederatedClusterResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddFederatedClusterResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddFederatedClusterResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type CreateNamespaceReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,6,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateNamespaceReq) Reset()         { *m = CreateNamespaceReq{} }
func (m *CreateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceReq) ProtoMessage()    {}
func (*CreateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{26}
}

func (m *CreateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceReq.Unmarshal(m, b)
}
func (m *CreateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceReq.Merge(m, src)
}
func (m *CreateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceReq.Size(m)
}
func (m *CreateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceReq proto.InternalMessageInfo

func (m *CreateNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateNamespaceReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateNamespaceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

type CreateNamespaceResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceResp) Reset()         { *m = CreateNamespaceResp{} }
func (m *CreateNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceResp) ProtoMessage()    {}
func (*CreateNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{27}
}

func (m *CreateNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceResp.Unmarshal(m, b)
}
func (m *CreateNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceResp.Merge(m, src)
}
func (m *CreateNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceResp.Size(m)
}
func (m *CreateNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceResp proto.InternalMessageInfo

func (m *CreateNamespaceResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type DeleteNamespaceReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,3,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceReq) Reset()         { *m = DeleteNamespaceReq{} }
func (m *DeleteNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceReq) ProtoMessage()    {}
func (*DeleteNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{28}
}

func (m *DeleteNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceReq.Unmarshal(m, b)
}
func (m *DeleteNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceReq.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceReq.Merge(m, src)
}
func (m *DeleteNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceReq.Size(m)
}
func (m *DeleteNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceReq proto.InternalMessageInfo

func (m *DeleteNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *DeleteNamespaceReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteNamespaceResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceResp) Reset()         { *m = DeleteNamespaceResp{} }
func (m *DeleteNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceResp) ProtoMessage()    {}
func (*DeleteNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{29}
}

func (m *DeleteNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceResp.Unmarshal(m, b)
}
func (m *DeleteNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceResp.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceResp.Merge(m, src)
}
func (m *DeleteNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceResp.Size(m)
}
func (m *DeleteNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceResp proto.InternalMessageInfo

func (m *DeleteNamespaceResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxQuota             string            `protobuf:"bytes,4,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateNamespaceReq) Reset()         { *m = UpdateNamespaceReq{} }
func (m *UpdateNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceReq) ProtoMessage()    {}
func (*UpdateNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{30}
}

func (m *UpdateNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceReq.Unmarshal(m, b)
}
func (m *UpdateNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceReq.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceReq.Merge(m, src)
}
func (m *UpdateNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceReq.Size(m)
}
func (m *UpdateNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceReq proto.InternalMessageInfo

func (m *UpdateNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateNamespaceReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateNamespaceReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

type UpdateNamespaceResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNamespaceResp) Reset()         { *m = UpdateNamespaceResp{} }
func (m *UpdateNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceResp) ProtoMessage()    {}
func (*UpdateNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{31}
}

func (m *UpdateNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceResp.Unmarshal(m, b)
}
func (m *UpdateNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceResp.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceResp.Merge(m, src)
}
func (m *UpdateNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceResp.Size(m)
}
func (m *UpdateNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceResp proto.InternalMessageInfo

func (m *UpdateNamespaceResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetNamespaceReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamespaceReq) Reset()         { *m = GetNamespaceReq{} }
func (m *GetNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceReq) ProtoMessage()    {}
func (*GetNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{32}
}

func (m *GetNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceReq.Unmarshal(m, b)
}
func (m *GetNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceReq.Marshal(b, m, deterministic)
}
func (m *GetNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceReq.Merge(m, src)
}
func (m *GetNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceReq.Size(m)
}
func (m *GetNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceReq proto.InternalMessageInfo

func (m *GetNamespaceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

type GetNamespaceResp struct {
	Code                 uint64     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool       `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *Namespace `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetNamespaceResp) Reset()         { *m = GetNamespaceResp{} }
func (m *GetNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceResp) ProtoMessage()    {}
func (*GetNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{33}
}

func (m *GetNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceResp.Unmarshal(m, b)
}
func (m *GetNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceResp.Marshal(b, m, deterministic)
}
func (m *GetNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceResp.Merge(m, src)
}
func (m *GetNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceResp.Size(m)
}
func (m *GetNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceResp proto.InternalMessageInfo

func (m *GetNamespaceResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNamespaceResp) GetData() *Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNamespaceReq struct {
	FederationClusterID  string   `protobuf:"bytes,1,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string   `protobuf:"bytes,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string   `protobuf:"bytes,3,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Offset               uint64   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespaceReq) Reset()         { *m = ListNamespaceReq{} }
func (m *ListNamespaceReq) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceReq) ProtoMessage()    {}
func (*ListNamespaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{34}
}

func (m *ListNamespaceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceReq.Unmarshal(m, b)
}
func (m *ListNamespaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceReq.Marshal(b, m, deterministic)
}
func (m *ListNamespaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceReq.Merge(m, src)
}
func (m *ListNamespaceReq) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceReq.Size(m)
}
func (m *ListNamespaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceReq proto.InternalMessageInfo

func (m *ListNamespaceReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListNamespaceReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *ListNamespaceReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *ListNamespaceReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNamespaceReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNamespaceResp struct {
	Code                 uint64       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool         `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*Namespace `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListNamespaceResp) Reset()         { *m = ListNamespaceResp{} }
func (m *ListNamespaceResp) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceResp) ProtoMessage()    {}
func (*ListNamespaceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{35}
}

func (m *ListNamespaceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceResp.Unmarshal(m, b)
}
func (m *ListNamespaceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceResp.Marshal(b, m, deterministic)
}
func (m *ListNamespaceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceResp.Merge(m, src)
}
func (m *ListNamespaceResp) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceResp.Size(m)
}
func (m *ListNamespaceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceResp proto.InternalMessageInfo

func (m *ListNamespaceResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNamespaceResp) GetData() []*Namespace {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,5,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceQuotaReq) Reset()         { *m = CreateNamespaceQuotaReq{} }
func (m *CreateNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceQuotaReq) ProtoMessage()    {}
func (*CreateNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{36}
}

func (m *CreateNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaReq.Merge(m, src)
}
func (m *CreateNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaReq.Size(m)
}
func (m *CreateNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaReq proto.InternalMessageInfo

func (m *CreateNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNamespaceQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type CreateNamespaceQuotaResp struct {
	Code                 uint64                                                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                                                   `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *CreateNamespaceQuotaResp) Reset()         { *m = CreateNamespaceQuotaResp{} }
func (m *CreateNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceQuotaResp) ProtoMessage()    {}
func (*CreateNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{37}
}

func (m *CreateNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaResp.Merge(m, src)
}
func (m *CreateNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaResp.Size(m)
}
func (m *CreateNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaResp proto.InternalMessageInfo

func (m *CreateNamespaceQuotaResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNamespaceQuotaResp) GetData() *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) Reset() {
	*m = CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData{}
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) ProtoMessage() {}
func (*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{37, 0}
}

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Unmarshal(m, b)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Merge(m, src)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.Size(m)
}
func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData proto.InternalMessageInfo

func (m *CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type DeleteNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	IsForced             bool     `protobuf:"varint,5,opt,name=isForced,proto3" json:"isForced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceQuotaReq) Reset()         { *m = DeleteNamespaceQuotaReq{} }
func (m *DeleteNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceQuotaReq) ProtoMessage()    {}
func (*DeleteNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{38}
}

func (m *DeleteNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *DeleteNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceQuotaReq.Merge(m, src)
}
func (m *DeleteNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceQuotaReq.Size(m)
}
func (m *DeleteNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceQuotaReq proto.InternalMessageInfo

func (m *DeleteNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *DeleteNamespaceQuotaReq) GetIsForced() bool {
	if m != nil {
		return m.IsForced
	}
	return false
}

type DeleteNamespaceQuotaResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceQuotaResp) Reset()         { *m = DeleteNamespaceQuotaResp{} }
func (m *DeleteNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceQuotaResp) ProtoMessage()    {}
func (*DeleteNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{39}
}

func (m *DeleteNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *DeleteNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceQuotaResp.Merge(m, src)
}
func (m *DeleteNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceQuotaResp.Size(m)
}
func (m *DeleteNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceQuotaResp proto.InternalMessageInfo

func (m *DeleteNamespaceQuotaResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type UpdateNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ResourceQuota        string   `protobuf:"bytes,4,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNamespaceQuotaReq) Reset()         { *m = UpdateNamespaceQuotaReq{} }
func (m *UpdateNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceQuotaReq) ProtoMessage()    {}
func (*UpdateNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{40}
}

func (m *UpdateNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *UpdateNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceQuotaReq.Merge(m, src)
}
func (m *UpdateNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceQuotaReq.Size(m)
}
func (m *UpdateNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceQuotaReq proto.InternalMessageInfo

func (m *UpdateNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *UpdateNamespaceQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type UpdateNamespaceQuotaResp struct {
	Code                 uint64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNamespaceQuotaResp) Reset()         { *m = UpdateNamespaceQuotaResp{} }
func (m *UpdateNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceQuotaResp) ProtoMessage()    {}
func (*UpdateNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{41}
}

func (m *UpdateNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *UpdateNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceQuotaResp.Merge(m, src)
}
func (m *UpdateNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceQuotaResp.Size(m)
}
func (m *UpdateNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceQuotaResp proto.InternalMessageInfo

func (m *UpdateNamespaceQuotaResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type GetNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ClusterID            string   `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamespaceQuotaReq) Reset()         { *m = GetNamespaceQuotaReq{} }
func (m *GetNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceQuotaReq) ProtoMessage()    {}
func (*GetNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{42}
}

func (m *GetNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *GetNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *GetNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceQuotaReq.Merge(m, src)
}
func (m *GetNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceQuotaReq.Size(m)
}
func (m *GetNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceQuotaReq proto.InternalMessageInfo

func (m *GetNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *GetNamespaceQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

type GetNamespaceQuotaResp struct {
	Code                 uint64         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *ResourceQuota `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetNamespaceQuotaResp) Reset()         { *m = GetNamespaceQuotaResp{} }
func (m *GetNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*GetNamespaceQuotaResp) ProtoMessage()    {}
func (*GetNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{43}
}

func (m *GetNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *GetNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *GetNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamespaceQuotaResp.Merge(m, src)
}
func (m *GetNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_GetNamespaceQuotaResp.Size(m)
}
func (m *GetNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamespaceQuotaResp proto.InternalMessageInfo

func (m *GetNamespaceQuotaResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *GetNamespaceQuotaResp) GetData() *ResourceQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListNamespaceQuotaReq struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FederationClusterID  string   `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamespaceQuotaReq) Reset()         { *m = ListNamespaceQuotaReq{} }
func (m *ListNamespaceQuotaReq) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceQuotaReq) ProtoMessage()    {}
func (*ListNamespaceQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{44}
}

func (m *ListNamespaceQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceQuotaReq.Unmarshal(m, b)
}
func (m *ListNamespaceQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceQuotaReq.Marshal(b, m, deterministic)
}
func (m *ListNamespaceQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceQuotaReq.Merge(m, src)
}
func (m *ListNamespaceQuotaReq) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceQuotaReq.Size(m)
}
func (m *ListNamespaceQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceQuotaReq proto.InternalMessageInfo

func (m *ListNamespaceQuotaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListNamespaceQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *ListNamespaceQuotaReq) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNamespaceQuotaReq) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListNamespaceQuotaResp struct {
	Code                 uint64           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 []*ResourceQuota `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListNamespaceQuotaResp) Reset()         { *m = ListNamespaceQuotaResp{} }
func (m *ListNamespaceQuotaResp) String() string { return proto.CompactTextString(m) }
func (*ListNamespaceQuotaResp) ProtoMessage()    {}
func (*ListNamespaceQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{45}
}

func (m *ListNamespaceQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamespaceQuotaResp.Unmarshal(m, b)
}
func (m *ListNamespaceQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamespaceQuotaResp.Marshal(b, m, deterministic)
}
func (m *ListNamespaceQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamespaceQuotaResp.Merge(m, src)
}
func (m *ListNamespaceQuotaResp) XXX_Size() int {
	return xxx_messageInfo_ListNamespaceQuotaResp.Size(m)
}
func (m *ListNamespaceQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamespaceQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamespaceQuotaResp proto.InternalMessageInfo

func (m *ListNamespaceQuotaResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListNamespaceQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListNamespaceQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ListNamespaceQuotaResp) GetData() []*ResourceQuota {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceWithQuotaReq struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FederationClusterID  string            `protobuf:"bytes,2,opt,name=federationClusterID,proto3" json:"federationClusterID,omitempty"`
	ProjectID            string            `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	BusinessID           string            `protobuf:"bytes,4,opt,name=businessID,proto3" json:"businessID,omitempty"`
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterID            string            `protobuf:"bytes,6,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Region               string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	MaxQuota             string            `protobuf:"bytes,8,opt,name=maxQuota,proto3" json:"maxQuota,omitempty"`
	ResourceQuota        string            `protobuf:"bytes,9,opt,name=resourceQuota,proto3" json:"resourceQuota,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateNamespaceWithQuotaReq) Reset()         { *m = CreateNamespaceWithQuotaReq{} }
func (m *CreateNamespaceWithQuotaReq) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceWithQuotaReq) ProtoMessage()    {}
func (*CreateNamespaceWithQuotaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{46}
}

func (m *CreateNamespaceWithQuotaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaReq.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaReq) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaReq.Size(m)
}
func (m *CreateNamespaceWithQuotaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaReq proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetFederationClusterID() string {
	if m != nil {
		return m.FederationClusterID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetBusinessID() string {
	if m != nil {
		return m.BusinessID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateNamespaceWithQuotaReq) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetMaxQuota() string {
	if m != nil {
		return m.MaxQuota
	}
	return ""
}

func (m *CreateNamespaceWithQuotaReq) GetResourceQuota() string {
	if m != nil {
		return m.ResourceQuota
	}
	return ""
}

type CreateNamespaceWithQuotaResp struct {
	Code                 uint64                                                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                                                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               bool                                                           `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *CreateNamespaceWithQuotaResp) Reset()         { *m = CreateNamespaceWithQuotaResp{} }
func (m *CreateNamespaceWithQuotaResp) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceWithQuotaResp) ProtoMessage()    {}
func (*CreateNamespaceWithQuotaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{47}
}

func (m *CreateNamespaceWithQuotaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaResp.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaResp) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp.Size(m)
}
func (m *CreateNamespaceWithQuotaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaResp proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaResp) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNamespaceWithQuotaResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateNamespaceWithQuotaResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *CreateNamespaceWithQuotaResp) GetData() *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) Reset() {
	*m = CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData{}
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) ProtoMessage() {}
func (*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d789ea45d40d7a6b, []int{47, 0}
}

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Unmarshal(m, b)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Merge(m, src)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.Size(m)
}
func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData proto.InternalMessageInfo

func (m *CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func init() {
	proto.RegisterType((*Cluster)(nil), "clustermanager.Cluster")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Cluster.LabelsEntry")
	proto.RegisterType((*ClusterCredential)(nil), "clustermanager.ClusterCredential")
	proto.RegisterType((*Namespace)(nil), "clustermanager.Namespace")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.Namespace.LabelsEntry")
	proto.RegisterType((*ResourceQuota)(nil), "clustermanager.ResourceQuota")
	proto.RegisterType((*CreateClusterReq)(nil), "clustermanager.CreateClusterReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateClusterReq.LabelsEntry")
	proto.RegisterType((*CreateClusterResp)(nil), "clustermanager.CreateClusterResp")
	proto.RegisterType((*DeleteClusterReq)(nil), "clustermanager.DeleteClusterReq")
	proto.RegisterType((*DeleteClusterResp)(nil), "clustermanager.DeleteClusterResp")
	proto.RegisterType((*UpdateClusterReq)(nil), "clustermanager.UpdateClusterReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateClusterReq.LabelsEntry")
	proto.RegisterType((*UpdateClusterResp)(nil), "clustermanager.UpdateClusterResp")
	proto.RegisterType((*GetClusterReq)(nil), "clustermanager.GetClusterReq")
	proto.RegisterType((*GetClusterResp)(nil), "clustermanager.GetClusterResp")
	proto.RegisterType((*ListClusterReq)(nil), "clustermanager.ListClusterReq")
	proto.RegisterType((*ListClusterResp)(nil), "clustermanager.ListClusterResp")
	proto.RegisterType((*GetClusterCredentialReq)(nil), "clustermanager.GetClusterCredentialReq")
	proto.RegisterType((*GetClusterCredentialResp)(nil), "clustermanager.GetClusterCredentialResp")
	proto.RegisterType((*UpdateClusterCredentialReq)(nil), "clustermanager.UpdateClusterCredentialReq")
	proto.RegisterType((*UpdateClusterCredentialResp)(nil), "clustermanager.UpdateClusterCredentialResp")
	proto.RegisterType((*DeleteClusterCredentialReq)(nil), "clustermanager.DeleteClusterCredentialReq")
	proto.RegisterType((*DeleteClusterCredentialResp)(nil), "clustermanager.DeleteClusterCredentialResp")
	proto.RegisterType((*ListClusterCredentialReq)(nil), "clustermanager.ListClusterCredentialReq")
	proto.RegisterType((*ListClusterCredentialResp)(nil), "clustermanager.ListClusterCredentialResp")
	proto.RegisterType((*InitFederationClusterReq)(nil), "clustermanager.InitFederationClusterReq")
	proto.RegisterType((*InitFederationClusterResp)(nil), "clustermanager.InitFederationClusterResp")
	proto.RegisterType((*AddFederatedClusterReq)(nil), "clustermanager.AddFederatedClusterReq")
	proto.RegisterType((*AddFederatedClusterResp)(nil), "clustermanager.AddFederatedClusterResp")
	proto.RegisterType((*CreateNamespaceReq)(nil), "clustermanager.CreateNamespaceReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNamespaceReq.LabelsEntry")
	proto.RegisterType((*CreateNamespaceResp)(nil), "clustermanager.CreateNamespaceResp")
	proto.RegisterType((*DeleteNamespaceReq)(nil), "clustermanager.DeleteNamespaceReq")
	proto.RegisterType((*DeleteNamespaceResp)(nil), "clustermanager.DeleteNamespaceResp")
	proto.RegisterType((*UpdateNamespaceReq)(nil), "clustermanager.UpdateNamespaceReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.UpdateNamespaceReq.LabelsEntry")
	proto.RegisterType((*UpdateNamespaceResp)(nil), "clustermanager.UpdateNamespaceResp")
	proto.RegisterType((*GetNamespaceReq)(nil), "clustermanager.GetNamespaceReq")
	proto.RegisterType((*GetNamespaceResp)(nil), "clustermanager.GetNamespaceResp")
	proto.RegisterType((*ListNamespaceReq)(nil), "clustermanager.ListNamespaceReq")
	proto.RegisterType((*ListNamespaceResp)(nil), "clustermanager.ListNamespaceResp")
	proto.RegisterType((*CreateNamespaceQuotaReq)(nil), "clustermanager.CreateNamespaceQuotaReq")
	proto.RegisterType((*CreateNamespaceQuotaResp)(nil), "clustermanager.CreateNamespaceQuotaResp")
	proto.RegisterType((*CreateNamespaceQuotaResp_CreateNamespaceQuotaRespData)(nil), "clustermanager.CreateNamespaceQuotaResp.CreateNamespaceQuotaRespData")
	proto.RegisterType((*DeleteNamespaceQuotaReq)(nil), "clustermanager.DeleteNamespaceQuotaReq")
	proto.RegisterType((*DeleteNamespaceQuotaResp)(nil), "clustermanager.DeleteNamespaceQuotaResp")
	proto.RegisterType((*UpdateNamespaceQuotaReq)(nil), "clustermanager.UpdateNamespaceQuotaReq")
	proto.RegisterType((*UpdateNamespaceQuotaResp)(nil), "clustermanager.UpdateNamespaceQuotaResp")
	proto.RegisterType((*GetNamespaceQuotaReq)(nil), "clustermanager.GetNamespaceQuotaReq")
	proto.RegisterType((*GetNamespaceQuotaResp)(nil), "clustermanager.GetNamespaceQuotaResp")
	proto.RegisterType((*ListNamespaceQuotaReq)(nil), "clustermanager.ListNamespaceQuotaReq")
	proto.RegisterType((*ListNamespaceQuotaResp)(nil), "clustermanager.ListNamespaceQuotaResp")
	proto.RegisterType((*CreateNamespaceWithQuotaReq)(nil), "clustermanager.CreateNamespaceWithQuotaReq")
	proto.RegisterMapType((map[string]string)(nil), "clustermanager.CreateNamespaceWithQuotaReq.LabelsEntry")
	proto.RegisterType((*CreateNamespaceWithQuotaResp)(nil), "clustermanager.CreateNamespaceWithQuotaResp")
	proto.RegisterType((*CreateNamespaceWithQuotaResp_CreateNamespaceWithQuotaRespData)(nil), "clustermanager.CreateNamespaceWithQuotaResp.CreateNamespaceWithQuotaRespData")
}

func init() { proto.RegisterFile("clustermanager.proto", fileDescriptor_d789ea45d40d7a6b) }

var fileDescriptor_d789ea45d40d7a6b = []byte{
	// 5742 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5d, 0x7b, 0x70, 0x14, 0xc7,
	0x99, 0xbf, 0x59, 0x3d, 0x10, 0x8d, 0x00, 0x31, 0x08, 0x58, 0x96, 0xd7, 0x32, 0x88, 0x87, 0x07,
	0x09, 0xc1, 0xc4, 0x0f, 0x2c, 0x8c, 0xcf, 0xbd, 0x88, 0x87, 0x0c, 0xd8, 0x44, 0x06, 0xc7, 0x36,
	0xc6, 0xce, 0xa2, 0x1d, 0xe4, 0x35, 0xd2, 0xee, 0x7a, 0x67, 0x85, 0xed, 0xf8, 0x48, 0x24, 0x2c,
	0x40, 0x80, 0x04, 0x62, 0xcc, 0x53, 0x08, 0x83, 0x38, 0x1e, 0xf2, 0x03, 0x09, 0x97, 0x1d, 0x0c,
	0x92, 0x6c, 0xea, 0x9c, 0x4a, 0xea, 0x52, 0x75, 0xf7, 0x8f, 0xf2, 0xc7, 0xd5, 0x5d, 0xa5, 0x2e,
	0xb9, 0xb2, 0x66, 0x77, 0x55, 0x95, 0x3b, 0xf2, 0x47, 0xae, 0xee, 0x8a, 0xab, 0x54, 0x5d, 0xcd,
	0xf4, 0x3c, 0xba, 0xe7, 0xb5, 0x2b, 0xc4, 0x9d, 0x45, 0xca, 0xf9, 0x27, 0xec, 0xd7, 0x3d, 0xdd,
	0xdf, 0xf7, 0xf5, 0xf7, 0xf8, 0xf5, 0xd7, 0xdd, 0x32, 0x28, 0xae, 0xa9, 0x6b, 0x10, 0x12, 0x7c,
	0xbc, 0x3e, 0x18, 0x09, 0xd6, 0xf2, 0xf1, 0x65, 0xb1, 0x78, 0x34, 0x11, 0xa5, 0x27, 0x91, 0x54,
	0xdf, 0xec, 0xda, 0x68, 0xb4, 0xb6, 0x8e, 0x2f, 0x0f, 0xc6, 0xc2, 0xe5, 0xc1, 0x48, 0x24, 0x9a,
	0x08, 0x26, 0xc2, 0xd1, 0x88, 0x80, 0x7a, 0xfb, 0x4a, 0x95, 0xff, 0xab, 0x29, 0xab, 0xe5, 0x23,
	0x65, 0xc2, 0xdb, 0xc1, 0xda, 0x5a, 0x3e, 0x5e, 0x1e, 0x8d, 0x29, 0x3d, 0x6c, 0x7a, 0xcf, 0xd8,
	0x13, 0xac, 0x0b, 0x87, 0x82, 0x09, 0xbe, 0x5c, 0xfb, 0x07, 0x6a, 0x60, 0x7e, 0x97, 0x0b, 0xc6,
	0xad, 0x41, 0xf3, 0xd2, 0xb3, 0xc1, 0x78, 0x95, 0x85, 0xaa, 0x4a, 0x2f, 0xe5, 0xa7, 0x96, 0x8c,
	0xaf, 0x36, 0x08, 0xb4, 0x1f, 0x4c, 0x50, 0x7f, 0x3c, 0x17, 0xac, 0xe7, 0xbd, 0x1e, 0xa5, 0x1d,
	0x27, 0xd1, 0xcb, 0xc1, 0xd4, 0x5d, 0x7c, 0x88, 0x8f, 0x2b, 0x33, 0xaf, 0xd1, 0x47, 0xca, 0x51,
	0x7a, 0xda, 0x35, 0xd1, 0x3e, 0x50, 0x10, 0x8b, 0x47, 0xf7, 0x84, 0x43, 0x7c, 0xdc, 0x9b, 0xab,
	0x74, 0xd3, 0x7f, 0xd3, 0xd3, 0x41, 0x7e, 0x9c, 0xaf, 0x0d, 0x47, 0x23, 0xde, 0x3c, 0xa5, 0x45,
	0xfd, 0x45, 0x17, 0x83, 0xbc, 0x3d, 0xb1, 0x9a, 0xaa, 0x4a, 0x6f, 0xbe, 0x42, 0x46, 0x3f, 0x64,
	0xde, 0x63, 0xf1, 0xe8, 0x9b, 0x7c, 0x4d, 0xa2, 0xaa, 0xd2, 0x3b, 0x0e, 0xf1, 0xae, 0x13, 0xe8,
	0xb9, 0x00, 0xec, 0x6c, 0x10, 0xc2, 0x11, 0x5e, 0x10, 0xaa, 0x2a, 0xbd, 0x05, 0x4a, 0x33, 0x46,
	0x91, 0x65, 0xe3, 0x23, 0x7b, 0xc2, 0xf1, 0x68, 0xa4, 0x9e, 0x8f, 0x24, 0xbc, 0xe3, 0x91, 0x6c,
	0x18, 0x49, 0x1e, 0x81, 0x8f, 0xd4, 0x86, 0x23, 0xfc, 0xd6, 0x77, 0x63, 0xbc, 0x17, 0xa0, 0x11,
	0x0c, 0x8a, 0x3c, 0x42, 0x58, 0x58, 0xfb, 0x8e, 0xac, 0x8e, 0xf0, 0x1e, 0xde, 0x3b, 0xc1, 0x4f,
	0x2d, 0x29, 0xa8, 0xc6, 0x49, 0x98, 0xfe, 0x94, 0x21, 0x0a, 0x09, 0xfd, 0x29, 0x63, 0xac, 0x02,
	0xf9, 0x75, 0xc1, 0x9d, 0x7c, 0x9d, 0xe0, 0x9d, 0xe8, 0xcf, 0x59, 0x32, 0x81, 0x5b, 0xb0, 0xcc,
	0x64, 0x27, 0xaa, 0xe2, 0x96, 0x6d, 0x52, 0x7a, 0xad, 0x8d, 0x24, 0xe2, 0xef, 0x56, 0xab, 0x9f,
	0xc8, 0x0a, 0x88, 0xc6, 0x64, 0x05, 0x47, 0xe3, 0x82, 0x77, 0x92, 0x3f, 0x47, 0x56, 0x80, 0x4e,
	0x90, 0xd9, 0xaf, 0x89, 0xf3, 0xc1, 0x04, 0xbf, 0x35, 0x5c, 0xcf, 0x7b, 0x27, 0x23, 0xf6, 0x0d,
	0x8a, 0xdc, 0xde, 0x10, 0x0b, 0x69, 0xed, 0x45, 0xa8, 0xdd, 0xa0, 0xf8, 0x9e, 0x04, 0x13, 0xb0,
	0x49, 0xe9, 0x22, 0x90, 0xb3, 0x9b, 0x7f, 0x57, 0xb5, 0x11, 0xf9, 0x9f, 0xca, 0xaa, 0x04, 0xeb,
	0x1a, 0x34, 0xbb, 0x40, 0x3f, 0x2a, 0x3c, 0x2b, 0x29, 0xe6, 0x77, 0x1e, 0x30, 0x45, 0x65, 0x7c,
	0x4d, 0x9c, 0x0f, 0xf1, 0x91, 0x44, 0x38, 0x58, 0x27, 0xb3, 0x2b, 0xf0, 0xf1, 0x3d, 0x7c, 0x7c,
	0xa3, 0x3e, 0x8e, 0x41, 0x20, 0x2d, 0xd1, 0x63, 0xb6, 0x44, 0x06, 0x14, 0xd6, 0xd4, 0x85, 0xf9,
	0x48, 0x62, 0x73, 0x34, 0xd4, 0x50, 0xc7, 0xab, 0x06, 0x46, 0xd0, 0xe8, 0x12, 0x30, 0x11, 0x0d,
	0x07, 0x43, 0xa1, 0x38, 0x2f, 0x08, 0xaa, 0x79, 0x91, 0x44, 0x45, 0x2d, 0xc1, 0x35, 0x7c, 0x3c,
	0x51, 0x19, 0x4c, 0x04, 0x55, 0x3b, 0xc3, 0x28, 0x32, 0x1f, 0x0d, 0x02, 0x1f, 0xdf, 0x1a, 0xdd,
	0xcd, 0x47, 0x54, 0x7b, 0x33, 0x08, 0xf2, 0x1c, 0x2a, 0x53, 0x95, 0xd1, 0xfa, 0x60, 0x38, 0xa2,
	0xda, 0x1d, 0x49, 0x54, 0xd6, 0x3d, 0x1a, 0x89, 0xf0, 0x35, 0x32, 0x6b, 0xbc, 0x6a, 0x7c, 0x38,
	0xc9, 0xb4, 0x38, 0xe3, 0x33, 0x2c, 0x0e, 0x30, 0x2f, 0x0e, 0x73, 0x29, 0x07, 0x8c, 0x97, 0x1d,
	0x50, 0x88, 0x05, 0x6b, 0x78, 0x9a, 0x06, 0xb9, 0x11, 0xd9, 0x41, 0x91, 0x52, 0x95, 0x7f, 0x3b,
	0x79, 0xa6, 0xc7, 0xd9, 0x33, 0x09, 0x7f, 0xca, 0x71, 0xf7, 0xa7, 0x5c, 0x8b, 0x3f, 0xad, 0xd6,
	0x2d, 0x39, 0x4f, 0xb1, 0xe4, 0x85, 0x66, 0x4b, 0xd6, 0xd9, 0xb5, 0xb5, 0x65, 0x1f, 0x28, 0xa8,
	0x0f, 0xbe, 0xf3, 0xc3, 0x86, 0x68, 0x22, 0xa8, 0x6a, 0x5d, 0xff, 0x6d, 0x52, 0xd6, 0xb8, 0x0c,
	0xca, 0x2a, 0x30, 0x2b, 0x8b, 0x5e, 0x05, 0xc6, 0xbf, 0x25, 0x0f, 0xb4, 0x29, 0x2c, 0xc8, 0x8e,
	0x2e, 0x73, 0x37, 0xc7, 0xcc, 0x5d, 0x35, 0x2f, 0x44, 0x1b, 0xe2, 0x35, 0xbc, 0x32, 0x63, 0xb5,
	0xd1, 0x7f, 0x34, 0x6e, 0xf0, 0x2d, 0x05, 0x26, 0x12, 0xe3, 0xca, 0x2a, 0x8e, 0x68, 0x6a, 0xd0,
	0x5c, 0x40, 0x27, 0xdc, 0xdf, 0x92, 0xd5, 0x98, 0x82, 0x2e, 0xe6, 0x34, 0x25, 0x60, 0x62, 0x1c,
	0x9f, 0x5e, 0x73, 0x08, 0x82, 0x68, 0xd2, 0x6e, 0x5e, 0x06, 0xed, 0xe6, 0x5b, 0x4c, 0xf1, 0x9b,
	0x42, 0x50, 0xb4, 0x46, 0xe9, 0xae, 0xf2, 0x55, 0xcd, 0xbf, 0x45, 0xbf, 0x61, 0xc9, 0x2b, 0x81,
	0x67, 0x45, 0x58, 0xca, 0x1a, 0x54, 0x6e, 0xde, 0xf0, 0xb9, 0x03, 0xa9, 0xaf, 0x2f, 0x57, 0x55,
	0xde, 0x1d, 0x68, 0x1d, 0xfa, 0xfa, 0x88, 0x74, 0x75, 0x5f, 0x60, 0xcd, 0x0b, 0x65, 0x1b, 0x57,
	0xbe, 0x50, 0xb6, 0x5c, 0xf9, 0xdf, 0xbd, 0x80, 0x37, 0x3e, 0xbd, 0xc8, 0xe3, 0x0d, 0x71, 0x45,
	0xaf, 0x6d, 0x5f, 0x5e, 0xf6, 0x64, 0xb0, 0xec, 0x27, 0xb0, 0xec, 0x95, 0xb2, 0xd7, 0x77, 0x2c,
	0x2d, 0xc1, 0x85, 0xac, 0xb2, 0xc9, 0x51, 0x81, 0xc5, 0x22, 0x9c, 0xc5, 0xe2, 0x74, 0xae, 0x10,
	0xcd, 0x26, 0xb5, 0xb7, 0xa5, 0xae, 0xdd, 0xb8, 0x17, 0xc8, 0x8f, 0xe7, 0xca, 0x43, 0x93, 0xc9,
	0x2c, 0x84, 0xa5, 0x26, 0x45, 0x99, 0x81, 0x0d, 0x22, 0x7c, 0x9a, 0xd5, 0x89, 0x1c, 0x87, 0x06,
	0x49, 0x1e, 0x6b, 0x1f, 0xfa, 0xfa, 0x5c, 0xba, 0x71, 0xbf, 0xce, 0xf9, 0xf6, 0x04, 0x1f, 0xa9,
	0xe1, 0x23, 0x89, 0x9a, 0xba, 0x68, 0x43, 0xa8, 0xd4, 0x1f, 0x7c, 0x5b, 0x28, 0xf5, 0xd7, 0x45,
	0x6b, 0x82, 0x75, 0x3b, 0xee, 0x05, 0x72, 0xe3, 0xf2, 0x44, 0x46, 0x92, 0xab, 0xd6, 0x93, 0x9c,
	0xb2, 0x1c, 0x81, 0x0a, 0x11, 0xce, 0x66, 0x55, 0x12, 0x47, 0xab, 0x33, 0x1c, 0x6a, 0x94, 0x3a,
	0xbb, 0xa5, 0xce, 0x1b, 0xd2, 0x85, 0x0b, 0x6e, 0x7a, 0xd0, 0x12, 0x64, 0xb5, 0x96, 0x20, 0x95,
	0xe5, 0x0b, 0x3c, 0x25, 0x42, 0x8e, 0x45, 0x14, 0xee, 0x11, 0x34, 0x62, 0xea, 0x5a, 0x53, 0xb2,
	0xf3, 0x50, 0xea, 0xab, 0xe3, 0xa9, 0xfe, 0xce, 0x70, 0x48, 0x66, 0xbc, 0xef, 0xf8, 0xd0, 0xad,
	0xc3, 0xaa, 0x56, 0xba, 0x3e, 0x91, 0x0e, 0x9c, 0xd5, 0x58, 0x55, 0xd3, 0xeb, 0xf3, 0x78, 0x38,
	0x50, 0x96, 0x3d, 0xb0, 0x42, 0x84, 0xd3, 0x58, 0x83, 0xca, 0x15, 0x0c, 0x77, 0xdd, 0x4e, 0x9d,
	0xeb, 0x09, 0x87, 0xee, 0x05, 0xa6, 0xc7, 0x8b, 0xed, 0x57, 0xca, 0x88, 0x20, 0x2f, 0x12, 0x11,
	0x44, 0x71, 0xe3, 0xc0, 0xe3, 0x22, 0xf4, 0xb1, 0x18, 0x99, 0x2b, 0x5c, 0xb3, 0xb9, 0x32, 0x30,
	0x74, 0xab, 0x43, 0x3a, 0xdc, 0xe5, 0x36, 0x2c, 0x1e, 0x79, 0xf6, 0x90, 0x99, 0x5c, 0xf1, 0xff,
	0xc0, 0x56, 0x11, 0x3e, 0xce, 0xe2, 0x74, 0x6e, 0xb1, 0xaa, 0x88, 0xa3, 0xbd, 0xd2, 0xa5, 0xf7,
	0x4b, 0xfd, 0xea, 0xc2, 0xc5, 0xe2, 0xd1, 0x50, 0xa9, 0x3f, 0xc4, 0xef, 0x6c, 0xa8, 0x2d, 0xf5,
	0x27, 0x78, 0x21, 0xb1, 0xc3, 0x4d, 0xdf, 0x04, 0x3e, 0xd8, 0x45, 0xe0, 0x03, 0x25, 0x86, 0x07,
	0xd6, 0x89, 0x70, 0x09, 0x8b, 0x91, 0x39, 0x9f, 0x34, 0x70, 0x32, 0xf9, 0xc1, 0xd1, 0xd4, 0x67,
	0xfd, 0xd2, 0x87, 0x47, 0x4a, 0xfd, 0xdb, 0x77, 0xaf, 0x14, 0x4a, 0xfd, 0xf5, 0xbc, 0x10, 0x15,
	0x5c, 0x27, 0xc2, 0x71, 0xc6, 0xf3, 0x24, 0xce, 0x90, 0x93, 0x41, 0x41, 0xa0, 0x4c, 0x84, 0x2c,
	0x8b, 0xd3, 0xb9, 0x59, 0xc9, 0x33, 0xbd, 0x52, 0xfb, 0xd5, 0xa1, 0x5b, 0x7d, 0x48, 0x7d, 0xa9,
	0x23, 0x9f, 0x4a, 0x6d, 0x17, 0x91, 0xd0, 0x24, 0x2c, 0xf9, 0x82, 0x22, 0x71, 0xc9, 0x04, 0x85,
	0xf5, 0xe3, 0x94, 0x08, 0x05, 0x16, 0x6f, 0xe0, 0x42, 0xaa, 0xca, 0x54, 0xe6, 0x55, 0x95, 0x19,
	0x81, 0xa8, 0xd4, 0x2f, 0x84, 0x23, 0xb5, 0x75, 0xfc, 0x8e, 0x52, 0xbf, 0x41, 0x4c, 0x77, 0x75,
	0xa7, 0x2e, 0xf7, 0x0d, 0xdd, 0xea, 0x4b, 0x37, 0x9d, 0x18, 0xde, 0x77, 0x15, 0x0d, 0x71, 0x77,
	0xa0, 0x15, 0x75, 0x45, 0xad, 0xa9, 0x23, 0x9f, 0xa6, 0x3e, 0x39, 0x82, 0x9a, 0x5c, 0xf5, 0x8d,
	0x63, 0xa5, 0x16, 0x4a, 0x4f, 0x31, 0x85, 0x4a, 0x10, 0x2f, 0xb5, 0x80, 0x25, 0x53, 0x18, 0xc2,
	0x33, 0x4d, 0x20, 0x20, 0xc2, 0x27, 0x58, 0x75, 0x00, 0xae, 0x4c, 0x95, 0xac, 0xa3, 0x19, 0x11,
	0xee, 0x0e, 0xb4, 0xa6, 0x4e, 0x74, 0x0f, 0xf5, 0x1d, 0x4d, 0xb6, 0xf7, 0x49, 0xb7, 0xae, 0x0e,
	0x5f, 0x3a, 0x2f, 0x5d, 0x3e, 0x95, 0xea, 0x68, 0x1e, 0xba, 0xd3, 0x95, 0x6c, 0xea, 0xbd, 0x17,
	0xc8, 0xeb, 0xa0, 0x3c, 0x45, 0xc5, 0x7a, 0xb6, 0xda, 0x88, 0x23, 0x2f, 0x19, 0xb9, 0x8d, 0x97,
	0x17, 0x84, 0x61, 0x0d, 0x2a, 0x37, 0x4d, 0x9d, 0xa1, 0xa7, 0x2b, 0xd5, 0x7e, 0x40, 0x3a, 0x7e,
	0x46, 0x6a, 0x39, 0x9d, 0xee, 0xea, 0xbe, 0x17, 0xc8, 0x13, 0x29, 0x4f, 0x51, 0x08, 0x03, 0x6a,
	0xa3, 0xc8, 0x30, 0x15, 0xbf, 0xa2, 0x44, 0xf8, 0x0d, 0x05, 0xee, 0x50, 0xac, 0x25, 0x04, 0x73,
	0xb4, 0xd4, 0x72, 0x4e, 0xea, 0xef, 0x43, 0x6c, 0xa4, 0x7b, 0xbf, 0x4c, 0x7e, 0xb6, 0x6f, 0x90,
	0x32, 0x02, 0xe7, 0x20, 0x85, 0xc7, 0xbe, 0x41, 0x4a, 0x0f, 0x50, 0x83, 0x94, 0x1a, 0x55, 0x06,
	0x29, 0xc3, 0x79, 0x07, 0x29, 0xcc, 0xe3, 0x06, 0x29, 0xdc, 0x0f, 0x06, 0x29, 0xcc, 0x58, 0x07,
	0x29, 0xdc, 0xd2, 0x8c, 0x39, 0x50, 0x9b, 0x21, 0xf4, 0x20, 0x55, 0xb8, 0x33, 0xb8, 0xfb, 0x79,
	0xed, 0x27, 0xf3, 0x67, 0x0a, 0x4c, 0x31, 0x49, 0x20, 0xc4, 0xe8, 0x65, 0x20, 0xb7, 0x46, 0x06,
	0x50, 0xb2, 0x2e, 0x72, 0x03, 0x3e, 0x11, 0xce, 0x60, 0x15, 0x02, 0x37, 0x39, 0x7d, 0xe7, 0x84,
	0x74, 0xee, 0xc3, 0xe1, 0x13, 0x67, 0xd3, 0xbd, 0xbd, 0xa9, 0x8b, 0x4d, 0xd5, 0x0a, 0x99, 0xae,
	0x00, 0xe3, 0xea, 0x79, 0x41, 0x08, 0xd6, 0x6a, 0x79, 0xc0, 0x2f, 0xc2, 0x39, 0xac, 0x46, 0xe3,
	0x68, 0xfc, 0x2b, 0xb4, 0xb2, 0xd5, 0x5a, 0x23, 0xbd, 0x42, 0x0e, 0xcb, 0x42, 0x43, 0x5d, 0x42,
	0x09, 0xfd, 0x05, 0x81, 0x99, 0x22, 0x9c, 0xce, 0xaa, 0x24, 0xae, 0x10, 0x7d, 0x99, 0xea, 0xff,
	0x20, 0xf9, 0x61, 0x67, 0xb5, 0x4a, 0xad, 0xa8, 0x12, 0xe1, 0x3a, 0x50, 0xc9, 0x5a, 0x19, 0xe7,
	0xa6, 0xe1, 0xba, 0x4f, 0x75, 0x34, 0xa3, 0xcf, 0x07, 0x29, 0x85, 0xcd, 0x41, 0x4a, 0x9b, 0x54,
	0x51, 0xb5, 0x3c, 0x14, 0xd3, 0xe4, 0x01, 0x45, 0x95, 0x7c, 0x1d, 0x4f, 0x24, 0xd1, 0x1f, 0x5a,
	0x93, 0xe8, 0x0f, 0x94, 0x08, 0x6c, 0x24, 0xd1, 0x02, 0x2d, 0x89, 0x66, 0x99, 0x2d, 0x83, 0xa0,
	0x20, 0x2c, 0xac, 0x8b, 0xc6, 0x6b, 0xf8, 0x90, 0xa2, 0xa2, 0x82, 0xc0, 0x5a, 0x11, 0x06, 0x58,
	0x9d, 0xc8, 0x3d, 0x8e, 0xa2, 0x88, 0x34, 0xd0, 0x27, 0xb5, 0xdc, 0x94, 0x5a, 0x2e, 0x0e, 0x9f,
	0x95, 0x7d, 0x17, 0xff, 0x39, 0x34, 0xd0, 0x81, 0xfe, 0x91, 0xea, 0xbb, 0x96, 0x6e, 0x3a, 0x91,
	0xfe, 0x79, 0x73, 0xb2, 0xaf, 0xbd, 0x5a, 0x1f, 0xa1, 0xe2, 0x09, 0x11, 0x3e, 0x0a, 0x38, 0xd6,
	0x22, 0x8e, 0x6c, 0x90, 0xf2, 0x67, 0x4e, 0x06, 0xc9, 0xfc, 0x89, 0x02, 0x53, 0x4c, 0x1f, 0x8d,
	0x7d, 0x1b, 0x78, 0x46, 0x84, 0xab, 0xc1, 0x2a, 0xd6, 0xca, 0xb8, 0x6c, 0x03, 0x86, 0xb8, 0xce,
	0x36, 0xc0, 0xfc, 0xbc, 0x10, 0x14, 0x6d, 0x53, 0xe0, 0xd4, 0xc3, 0x8e, 0x9f, 0x5e, 0xb3, 0xe0,
	0xa7, 0x80, 0x08, 0x57, 0x62, 0xf8, 0xa9, 0xd4, 0x8a, 0x9f, 0x46, 0x82, 0x9c, 0x36, 0x99, 0x90,
	0xd3, 0xa3, 0xea, 0xf2, 0x28, 0xc8, 0x49, 0x63, 0xb0, 0xb5, 0xef, 0x2f, 0x09, 0x33, 0x55, 0xdb,
	0x60, 0x26, 0x4e, 0x16, 0x1b, 0xc7, 0x4c, 0x05, 0xdf, 0xe3, 0xa5, 0xef, 0xf1, 0xd2, 0xfd, 0xe0,
	0x25, 0x73, 0xd8, 0xf9, 0x3f, 0xc3, 0x4b, 0x1b, 0xac, 0x78, 0x89, 0x15, 0xe1, 0x3c, 0x7d, 0xf8,
	0xff, 0x17, 0xb0, 0xf4, 0x0f, 0x94, 0x08, 0xff, 0x9e, 0x02, 0xbf, 0xa4, 0x58, 0x4b, 0xbc, 0xe5,
	0xbc, 0xc9, 0x73, 0x5f, 0x24, 0x4f, 0xdd, 0x40, 0x6c, 0x20, 0x21, 0xc6, 0x3a, 0x64, 0xfa, 0x2f,
	0x0a, 0x4c, 0x31, 0xc9, 0x31, 0xf6, 0xd3, 0xe5, 0x1a, 0x11, 0x3e, 0x03, 0x9e, 0x66, 0xad, 0x8c,
	0xdb, 0xae, 0x80, 0x43, 0xc6, 0x3c, 0x43, 0x81, 0x89, 0xeb, 0xf9, 0x84, 0x13, 0x52, 0xf2, 0x3c,
	0x08, 0xa4, 0x54, 0xf1, 0xa8, 0x08, 0x57, 0x80, 0x72, 0x96, 0x9c, 0x88, 0xa3, 0x93, 0x17, 0xae,
	0xa4, 0x7b, 0x2f, 0x39, 0x62, 0x98, 0xbf, 0xf3, 0x80, 0x49, 0xf8, 0x17, 0x63, 0x7e, 0x45, 0xe8,
	0xcd, 0x20, 0x37, 0x14, 0x54, 0x6b, 0x43, 0x13, 0xb8, 0x19, 0x0e, 0xf5, 0x67, 0xc4, 0x84, 0xd2,
	0x93, 0x9b, 0x96, 0x3e, 0xfa, 0xa5, 0x74, 0x4c, 0xf6, 0x76, 0x7c, 0xb1, 0xaa, 0x95, 0xc6, 0x0a,
	0x28, 0xc2, 0xa7, 0xc1, 0x53, 0xac, 0x49, 0x09, 0x26, 0xbd, 0x39, 0xa1, 0x61, 0x65, 0x08, 0xe6,
	0x17, 0xf9, 0x60, 0xd2, 0xa6, 0xb0, 0x80, 0xaf, 0xef, 0x7a, 0x12, 0xa4, 0x20, 0x40, 0xb4, 0x30,
	0x13, 0x48, 0x41, 0xa9, 0x99, 0x80, 0x28, 0x15, 0x18, 0x44, 0x41, 0xda, 0x9d, 0x2b, 0x8f, 0x62,
	0x40, 0x94, 0xc9, 0x26, 0x88, 0x82, 0xc1, 0x0f, 0x4e, 0x87, 0x1f, 0x08, 0xdc, 0xf8, 0x44, 0x58,
	0xa4, 0xc3, 0x8f, 0x7c, 0x0d, 0x78, 0xa0, 0x49, 0x35, 0x90, 0xb1, 0x5a, 0x03, 0x19, 0xb9, 0x1a,
	0xae, 0x9a, 0xa3, 0x81, 0x8c, 0x62, 0x3b, 0x90, 0x61, 0xc2, 0x13, 0xab, 0x71, 0x3c, 0x81, 0x70,
	0xca, 0x3c, 0x67, 0x3c, 0x81, 0x3e, 0xc5, 0xd0, 0xc3, 0x33, 0x04, 0x7a, 0xc8, 0xd7, 0xac, 0xc9,
	0x11, 0x3d, 0xa0, 0x01, 0x70, 0xac, 0xb0, 0x9e, 0xc4, 0x0a, 0xe3, 0x30, 0xc5, 0xe3, 0x58, 0xa1,
	0x10, 0xc7, 0x0a, 0xba, 0xe2, 0xf1, 0xe4, 0xbf, 0x85, 0x48, 0xfe, 0x08, 0x73, 0x2c, 0x17, 0xe1,
	0x22, 0x22, 0xf9, 0x7b, 0xd5, 0x61, 0x06, 0x4e, 0x25, 0x8f, 0x8a, 0x38, 0x10, 0xd0, 0x59, 0xc3,
	0xd2, 0xfc, 0x2a, 0x90, 0x1f, 0xdd, 0xb5, 0x4b, 0xe0, 0xd1, 0xd9, 0x4d, 0x6e, 0x60, 0x81, 0x08,
	0x67, 0xb2, 0x2a, 0x89, 0x9b, 0x8c, 0xec, 0x4d, 0x6a, 0x3a, 0x96, 0xba, 0xd6, 0x3f, 0x7c, 0xf0,
	0xd8, 0xbd, 0x40, 0x2e, 0xe7, 0x59, 0xf2, 0x57, 0xd5, 0x6a, 0x3b, 0xfd, 0x14, 0xc8, 0xab, 0x0b,
	0xd7, 0x87, 0x13, 0x0a, 0x3a, 0xc8, 0x0d, 0x2c, 0x92, 0x25, 0x42, 0x14, 0xdd, 0x54, 0xcf, 0xb6,
	0x4b, 0x2d, 0x37, 0x93, 0x27, 0x6f, 0x28, 0x5f, 0xe7, 0x71, 0x39, 0xde, 0xf4, 0xb8, 0x6a, 0xd4,
	0xa5, 0xa2, 0x8b, 0x12, 0xe1, 0x79, 0x0a, 0x74, 0x50, 0xac, 0xc9, 0x50, 0xb9, 0x83, 0x94, 0xd4,
	0xf2, 0x51, 0xea, 0x44, 0x77, 0xf2, 0x7c, 0xd7, 0x50, 0xff, 0xcd, 0xf4, 0x9d, 0x83, 0xc9, 0x7e,
	0x75, 0x07, 0x80, 0x52, 0x1a, 0x0a, 0x19, 0x77, 0x07, 0x5a, 0xd1, 0x24, 0xa8, 0xdb, 0xd0, 0xad,
	0x3e, 0x18, 0x09, 0x49, 0xfb, 0x3f, 0x4f, 0x7d, 0xde, 0x2f, 0x6f, 0xb6, 0xae, 0xee, 0x4b, 0x7e,
	0xd8, 0x99, 0xbc, 0xd0, 0x3e, 0xdc, 0x75, 0x1b, 0xef, 0x26, 0x35, 0x0e, 0x0c, 0xdd, 0xea, 0x4b,
	0x7d, 0xd4, 0x27, 0xf7, 0x69, 0x39, 0x2b, 0xdd, 0xf9, 0x2a, 0x75, 0xf2, 0xca, 0xd0, 0xad, 0xb6,
	0xa1, 0x81, 0x0e, 0x79, 0xc6, 0xeb, 0x97, 0xf1, 0x49, 0x99, 0x5f, 0x79, 0xc0, 0x64, 0x82, 0xb9,
	0xb1, 0x1f, 0x8a, 0x9e, 0xd5, 0x43, 0x51, 0x8e, 0x5b, 0x28, 0x9a, 0x23, 0x42, 0x9f, 0x1a, 0x8a,
	0x68, 0x3c, 0x02, 0x21, 0x0d, 0xab, 0x71, 0x68, 0x83, 0x08, 0xd7, 0x82, 0x35, 0xac, 0x59, 0x05,
	0x9c, 0x17, 0x0f, 0x44, 0xea, 0x9a, 0xb8, 0x87, 0xa3, 0x63, 0x1e, 0x30, 0xc3, 0x88, 0x66, 0xc6,
	0x79, 0x96, 0x1c, 0x97, 0x3e, 0xa2, 0x2c, 0x67, 0x5a, 0x81, 0xc3, 0x94, 0x08, 0x7f, 0xca, 0x1a,
	0x64, 0xee, 0xad, 0xa1, 0x5b, 0x87, 0x93, 0x87, 0xaf, 0x20, 0x26, 0x53, 0x1d, 0xcd, 0xa9, 0xfe,
	0xe6, 0xa1, 0xfe, 0x9b, 0xa9, 0x8e, 0xe6, 0xdd, 0xfc, 0xbb, 0xf2, 0x52, 0xf6, 0xde, 0x1e, 0xea,
	0x3b, 0xba, 0xbb, 0x61, 0x27, 0x5f, 0x16, 0xac, 0xe5, 0x23, 0x09, 0xd9, 0x38, 0xce, 0xf4, 0xea,
	0x29, 0x45, 0xef, 0xa1, 0x80, 0xe0, 0xb2, 0x50, 0x3c, 0xbc, 0x87, 0x8f, 0x4b, 0x62, 0xab, 0xf2,
	0x01, 0xfa, 0x85, 0xbe, 0x48, 0x76, 0x1e, 0xaa, 0xda, 0xa2, 0xe1, 0x2f, 0x6d, 0x7f, 0x66, 0xb0,
	0xa1, 0x69, 0xc4, 0x49, 0x16, 0x6e, 0x36, 0xae, 0x19, 0xa3, 0x49, 0x4f, 0x72, 0xfa, 0x48, 0xcc,
	0x5d, 0x0f, 0xf0, 0xda, 0x8f, 0x32, 0xf6, 0x6d, 0x6c, 0x07, 0x91, 0xee, 0xe6, 0x3b, 0xd8, 0x98,
	0x21, 0x93, 0x1c, 0x1a, 0x16, 0xa8, 0xd6, 0x36, 0x4b, 0xcd, 0x0d, 0x9f, 0x77, 0x4b, 0x07, 0x5a,
	0xe5, 0x1d, 0x7d, 0x6f, 0xd3, 0xd0, 0xed, 0xab, 0x44, 0xfa, 0xdb, 0x26, 0xc2, 0x6a, 0xb0, 0x85,
	0x75, 0x54, 0x8f, 0xa3, 0x96, 0xdd, 0x6d, 0xb0, 0x3f, 0x1f, 0xf8, 0x08, 0xc8, 0xf4, 0xd0, 0x9a,
	0x21, 0xfd, 0xd7, 0x56, 0xa8, 0x36, 0xdf, 0x19, 0xaa, 0xe9, 0x03, 0x18, 0x05, 0x8b, 0x6d, 0x76,
	0x47, 0xc1, 0xf2, 0x36, 0x7b, 0x21, 0x4b, 0x34, 0x70, 0xd3, 0x90, 0xc0, 0xa9, 0x8e, 0xe6, 0x64,
	0x77, 0x97, 0x74, 0xfe, 0xb4, 0xd4, 0xde, 0x26, 0x5d, 0x3f, 0x6d, 0x8c, 0x49, 0x9e, 0x1e, 0xbf,
	0x68, 0x7b, 0x7a, 0x2c, 0xe7, 0xa8, 0x05, 0x2c, 0xd9, 0xa2, 0x1f, 0xd2, 0x74, 0xb6, 0x49, 0x87,
	0xbb, 0xa4, 0xce, 0x1b, 0xd2, 0xf9, 0xc6, 0x7b, 0x81, 0x71, 0xf1, 0xbc, 0x22, 0x8f, 0xb7, 0xb1,
	0xc8, 0x7c, 0xde, 0xbc, 0xde, 0x7a, 0xde, 0x2c, 0xc3, 0x80, 0xd9, 0x2c, 0x46, 0xe6, 0x26, 0xa9,
	0xf6, 0x00, 0x93, 0x27, 0x6f, 0x24, 0xdb, 0x7a, 0xee, 0x05, 0xf2, 0xe2, 0x39, 0xde, 0x46, 0x3f,
	0x71, 0x30, 0xbd, 0xc5, 0x72, 0x30, 0x1d, 0xe0, 0x44, 0xb8, 0x98, 0x35, 0xa8, 0x9c, 0x2f, 0xdd,
	0x73, 0x67, 0xf8, 0x74, 0x8f, 0xbe, 0x57, 0x4b, 0xc8, 0x54, 0x7d, 0x4b, 0x26, 0x0f, 0x59, 0x84,
	0x1f, 0x66, 0x3f, 0x67, 0x7b, 0x98, 0x1d, 0x58, 0x22, 0x3b, 0x20, 0xd9, 0xa2, 0x23, 0xab, 0x0b,
	0x17, 0xa4, 0xf6, 0x36, 0x7d, 0x2c, 0xb2, 0x53, 0xc5, 0x49, 0x4a, 0x84, 0xc7, 0x29, 0x70, 0x94,
	0x62, 0x5d, 0x8c, 0x95, 0x9b, 0x8d, 0x03, 0x7d, 0x9b, 0x38, 0x83, 0x6d, 0xb7, 0x88, 0x15, 0x1a,
	0xa4, 0x48, 0xcd, 0x0e, 0x52, 0x98, 0x76, 0x06, 0x29, 0x43, 0xae, 0x41, 0x8a, 0xe4, 0x8b, 0x39,
	0xe5, 0x01, 0xb3, 0x1c, 0x19, 0x1a, 0xfb, 0x7b, 0xa6, 0x97, 0x44, 0xb8, 0x0d, 0xbc, 0xc0, 0xba,
	0x89, 0xe0, 0xa8, 0x54, 0xf7, 0xb0, 0xd2, 0xe1, 0x01, 0x3e, 0xa2, 0x70, 0xf9, 0xf0, 0x66, 0xb7,
	0x2d, 0x22, 0xdc, 0x0c, 0x36, 0xb2, 0x2e, 0xe2, 0x70, 0xf3, 0xf1, 0x82, 0xac, 0x6d, 0x10, 0x27,
	0xb2, 0x5c, 0xa7, 0x07, 0xcc, 0x72, 0x1c, 0x6d, 0xec, 0x5b, 0xcd, 0x6b, 0x22, 0xdc, 0x0e, 0x5e,
	0x66, 0xdd, 0x44, 0xe0, 0x18, 0x5c, 0x23, 0x66, 0x57, 0xcc, 0x60, 0x3b, 0x87, 0xf3, 0x80, 0x17,
	0x03, 0x57, 0xa4, 0xe5, 0x9c, 0xb3, 0xb1, 0x9c, 0xbd, 0x22, 0x14, 0x70, 0xc3, 0xd9, 0x85, 0x2f,
	0x84, 0x6e, 0x3e, 0x66, 0xab, 0x51, 0x8c, 0xc6, 0xd9, 0x62, 0x08, 0x83, 0x41, 0x3f, 0xf0, 0xce,
	0x4b, 0xc3, 0x31, 0x7d, 0x5b, 0x64, 0xa4, 0xa0, 0xd5, 0xd6, 0x14, 0x34, 0xcf, 0x39, 0x05, 0xa9,
	0x9f, 0x1b, 0x09, 0x28, 0x02, 0x80, 0x1e, 0x97, 0xb4, 0xf4, 0xf3, 0x9c, 0x08, 0x2b, 0x59, 0x8c,
	0xcc, 0x3d, 0x2e, 0xf5, 0x5c, 0x4a, 0xb6, 0x7c, 0x99, 0xfa, 0xa4, 0x57, 0x4e, 0x3e, 0x03, 0xc7,
	0xee, 0x0e, 0xb4, 0xea, 0xe2, 0x7c, 0xdb, 0xd8, 0x64, 0xb0, 0xfb, 0x6d, 0x63, 0x13, 0x26, 0x89,
	0xbe, 0xd1, 0x31, 0x86, 0xa2, 0x5f, 0x25, 0x6f, 0x13, 0xe9, 0xb7, 0x06, 0x96, 0xb3, 0x38, 0x9d,
	0x9b, 0x3f, 0xfc, 0xc1, 0xd7, 0xc9, 0xa3, 0x57, 0xf4, 0xe9, 0x52, 0xe7, 0xbe, 0x48, 0x37, 0x9d,
	0x48, 0xb6, 0x9c, 0x4a, 0x37, 0xee, 0x1f, 0xee, 0xb8, 0x36, 0xdc, 0xf4, 0x81, 0xb1, 0x23, 0xc6,
	0x6e, 0x22, 0x19, 0xdb, 0xa8, 0xbc, 0x51, 0x6c, 0xa3, 0xf2, 0xef, 0x67, 0x1b, 0xa5, 0x22, 0x52,
	0x47, 0x33, 0xe2, 0x16, 0xe3, 0x60, 0xc9, 0xd6, 0x63, 0x11, 0x82, 0x67, 0xf6, 0xe5, 0x80, 0x99,
	0x0e, 0xa3, 0x8c, 0x7d, 0x48, 0x5a, 0x43, 0x6c, 0x7b, 0xb2, 0x80, 0xa4, 0xa5, 0x22, 0x7c, 0x44,
	0x85, 0xa4, 0xf3, 0x33, 0xea, 0x46, 0x05, 0xa6, 0x41, 0x11, 0xbe, 0x06, 0x5e, 0x65, 0x9d, 0xb5,
	0x94, 0xb5, 0xb2, 0x1d, 0x23, 0x82, 0x0f, 0x78, 0xab, 0x22, 0xe1, 0xc4, 0x3a, 0xf3, 0x3d, 0xa5,
	0x6a, 0xfe, 0x2d, 0x66, 0x16, 0x98, 0xe9, 0xd0, 0x26, 0xc4, 0x98, 0xb3, 0x1e, 0x30, 0x1d, 0x86,
	0x42, 0x6a, 0x23, 0x1f, 0xc2, 0x0a, 0x3f, 0xaf, 0xd8, 0x5f, 0x89, 0xa2, 0x34, 0xa0, 0xb2, 0x90,
	0xb5, 0x6b, 0xe7, 0x26, 0xe1, 0xb5, 0xf4, 0xaa, 0x4a, 0xfb, 0xcb, 0x53, 0x4f, 0x59, 0xc3, 0x80,
	0x52, 0x0c, 0xc2, 0xc2, 0xc0, 0x24, 0xa9, 0xef, 0xa4, 0xf4, 0xd9, 0x3e, 0x7d, 0x1c, 0xac, 0x3e,
	0xc8, 0x8b, 0x70, 0x27, 0xf8, 0x31, 0xeb, 0xc0, 0x38, 0x57, 0x22, 0xdd, 0x38, 0xa0, 0x62, 0xa6,
	0xc3, 0x17, 0xa5, 0xfd, 0x57, 0x70, 0x86, 0x14, 0xb5, 0x22, 0xb4, 0x63, 0xc7, 0x18, 0x51, 0x50,
	0xec, 0xf4, 0x80, 0x19, 0xb6, 0x53, 0x8c, 0xfd, 0x0c, 0xb4, 0x53, 0x84, 0xaf, 0x83, 0x1d, 0xac,
	0x13, 0xfb, 0x1c, 0x9b, 0x8d, 0x8a, 0x32, 0x64, 0xa1, 0x3f, 0xe4, 0x01, 0x1a, 0x1d, 0xbf, 0xeb,
	0xd7, 0x0b, 0x65, 0xb3, 0xa9, 0xc0, 0x2f, 0x44, 0xca, 0x61, 0xc9, 0xc7, 0x2a, 0x04, 0x8e, 0x96,
	0x8e, 0x7f, 0x25, 0xb5, 0xb7, 0xa5, 0x3e, 0xea, 0x1b, 0x3e, 0xfd, 0x85, 0x79, 0x43, 0x80, 0x2e,
	0x4e, 0x0a, 0x2e, 0xb7, 0xf0, 0x02, 0x50, 0x84, 0x4f, 0xd8, 0x9b, 0x9c, 0x1f, 0x1f, 0x19, 0xdd,
	0xdf, 0xc2, 0x05, 0x32, 0xca, 0x6b, 0xb6, 0xb6, 0xb8, 0xda, 0x72, 0xf7, 0x72, 0x14, 0x85, 0xbe,
	0xdc, 0xfb, 0x28, 0xf4, 0x6d, 0x37, 0x5d, 0xdf, 0x5c, 0x66, 0x7f, 0xb7, 0x06, 0xd7, 0x32, 0x71,
	0x5a, 0x34, 0x55, 0x29, 0x86, 0xaa, 0xc7, 0x39, 0xf9, 0xc9, 0x8b, 0x07, 0x53, 0xd7, 0xbf, 0xd6,
	0x8f, 0x7f, 0x4e, 0x53, 0xe6, 0xdb, 0x9d, 0x81, 0xf7, 0x44, 0xf8, 0x0e, 0xab, 0x13, 0xb9, 0xba,
	0x74, 0xef, 0x15, 0x42, 0x81, 0x9d, 0x8d, 0xd2, 0xe5, 0x6b, 0xa9, 0x8e, 0x66, 0xe9, 0x58, 0x6f,
	0xea, 0x44, 0x77, 0xaa, 0xa3, 0x79, 0x78, 0x7f, 0xdb, 0xf0, 0xa5, 0xf3, 0x72, 0xf6, 0xef, 0xec,
	0x4e, 0x1e, 0x6a, 0x4c, 0x76, 0x1e, 0x92, 0x77, 0x5e, 0xad, 0x7d, 0x7a, 0x93, 0x74, 0xec, 0x63,
	0x49, 0x6c, 0x1d, 0xba, 0xd5, 0x96, 0x7e, 0xff, 0xab, 0xf4, 0xcd, 0xfd, 0xe9, 0x3b, 0x07, 0xd3,
	0xbd, 0x57, 0x50, 0x93, 0x9c, 0x84, 0x7a, 0x3a, 0xe4, 0x8d, 0xa0, 0x92, 0x87, 0x8c, 0xab, 0xa5,
	0xa3, 0x39, 0x4e, 0x8a, 0x8b, 0x30, 0x0a, 0xea, 0x59, 0x1b, 0xf3, 0xe3, 0xbc, 0xe8, 0xfa, 0x07,
	0x2e, 0x90, 0xe6, 0xf0, 0x8a, 0x8d, 0x39, 0xfa, 0xbd, 0xd3, 0xe1, 0x91, 0xaa, 0x48, 0xe6, 0x7f,
	0x28, 0x30, 0xd5, 0x32, 0xdf, 0xd8, 0x8f, 0x04, 0x6b, 0x45, 0x18, 0x00, 0xcf, 0xb0, 0x76, 0xac,
	0xdb, 0xea, 0xca, 0xe1, 0xdc, 0x27, 0xe9, 0x01, 0x34, 0x82, 0xb3, 0xf7, 0xe7, 0xec, 0xc4, 0xcd,
	0x85, 0xef, 0xd4, 0xd9, 0x8d, 0x4b, 0x38, 0x48, 0x87, 0xf3, 0x45, 0x38, 0x17, 0xbb, 0x84, 0x43,
	0x5b, 0x2f, 0xe1, 0x60, 0x17, 0x6c, 0x7e, 0x2c, 0xc2, 0x1d, 0x60, 0x3b, 0x6b, 0xa3, 0x0a, 0x59,
	0x99, 0x72, 0x67, 0x3b, 0xc3, 0x33, 0xee, 0x19, 0x3b, 0x59, 0x9f, 0x3e, 0x83, 0x62, 0x66, 0x96,
	0xd1, 0x1f, 0x1e, 0x33, 0xb3, 0x61, 0xdd, 0x56, 0x33, 0x0e, 0x66, 0xf6, 0xaf, 0xb9, 0x80, 0x46,
	0x7b, 0xed, 0x87, 0xdb, 0xcc, 0x6a, 0xf5, 0x90, 0x9e, 0x63, 0x1f, 0xd2, 0xad, 0x42, 0x12, 0x21,
	0x7d, 0x9e, 0x72, 0x31, 0x59, 0x0d, 0xe9, 0x84, 0x90, 0x6e, 0xe1, 0x3d, 0xf7, 0x2f, 0x24, 0xbc,
	0xbf, 0x2c, 0xc2, 0x17, 0xc1, 0x56, 0xd6, 0xc6, 0x12, 0xb4, 0xa3, 0xea, 0x11, 0x87, 0x77, 0x2d,
	0x8a, 0x37, 0x79, 0xc0, 0x54, 0xcb, 0xb0, 0x63, 0xdf, 0xbd, 0x36, 0x8a, 0x70, 0x03, 0x58, 0xc7,
	0xda, 0xb1, 0xce, 0xcd, 0xb5, 0xaa, 0xc4, 0xfd, 0x0c, 0xff, 0xb8, 0x07, 0x4c, 0x5e, 0xcf, 0x27,
	0x1e, 0x6a, 0x0f, 0xab, 0xd8, 0x2c, 0xc2, 0x67, 0xc1, 0x06, 0xd6, 0x2c, 0x88, 0x76, 0xc8, 0x34,
	0x42, 0x03, 0x61, 0x7e, 0xed, 0x01, 0x45, 0xe4, 0x50, 0x63, 0x7f, 0xf3, 0xba, 0x89, 0x38, 0x4f,
	0x99, 0xe9, 0xf8, 0xe8, 0x87, 0x38, 0xb5, 0xb3, 0x9a, 0x89, 0xe9, 0xd4, 0x6e, 0x24, 0x0a, 0xb5,
	0xdf, 0x18, 0xfc, 0x67, 0x0e, 0x28, 0x92, 0xf7, 0xba, 0x84, 0x81, 0xd5, 0xba, 0xed, 0x26, 0x1f,
	0x13, 0xe1, 0x52, 0x7b, 0x23, 0x29, 0x46, 0xb3, 0xdf, 0x2f, 0x9c, 0xf7, 0x8c, 0x12, 0xce, 0xe7,
	0xdc, 0x07, 0x9c, 0x7f, 0x54, 0xaf, 0xea, 0xe4, 0x2a, 0x76, 0x33, 0xdb, 0xad, 0xaa, 0xa3, 0x97,
	0x73, 0x2a, 0xb4, 0x72, 0x0e, 0x2a, 0x05, 0x95, 0x88, 0x70, 0xbe, 0x56, 0xce, 0x51, 0x57, 0x00,
	0x05, 0x6e, 0x64, 0x09, 0x6a, 0xb4, 0x55, 0x8b, 0x39, 0xcd, 0x94, 0x08, 0x1b, 0x29, 0xf0, 0x53,
	0xd6, 0xa2, 0x76, 0x8e, 0x4d, 0x5e, 0xbc, 0x9d, 0x6c, 0xeb, 0x41, 0xc7, 0xd3, 0xd6, 0x95, 0xc4,
	0x4f, 0xc6, 0x47, 0x8e, 0x8c, 0x11, 0xeb, 0x83, 0x14, 0x62, 0x83, 0xf9, 0xbd, 0x07, 0x4c, 0x31,
	0x31, 0x30, 0xf6, 0x9d, 0xe8, 0x15, 0xa2, 0x02, 0xe4, 0xe2, 0x44, 0x4b, 0x45, 0xb8, 0x84, 0xcd,
	0x8f, 0x08, 0xb2, 0x84, 0xdc, 0x5c, 0xab, 0x2a, 0x6d, 0x0a, 0x3f, 0x6a, 0x61, 0xdc, 0xaa, 0x14,
	0xbb, 0xef, 0x11, 0x77, 0x19, 0xea, 0x3c, 0xff, 0x94, 0x07, 0x66, 0x98, 0x90, 0x3c, 0x7a, 0x35,
	0xc7, 0xbf, 0x45, 0x57, 0x59, 0x1e, 0xb8, 0xc9, 0x3c, 0xcf, 0x63, 0x0d, 0x2a, 0x47, 0xab, 0x8f,
	0x9b, 0xb0, 0x69, 0xb1, 0x8a, 0xbe, 0xf1, 0x1a, 0xee, 0x3b, 0xc1, 0x4c, 0xeb, 0x2c, 0x0f, 0xea,
	0x02, 0x4b, 0x64, 0x6c, 0x8e, 0xd5, 0x84, 0xa6, 0x24, 0x5b, 0x0f, 0x4a, 0x3d, 0x1d, 0xd2, 0xf5,
	0x76, 0xf3, 0x88, 0x58, 0x8d, 0x78, 0xa5, 0xe9, 0xaa, 0xb2, 0x9f, 0xb8, 0xaa, 0xac, 0x8e, 0x60,
	0x7b, 0x63, 0xe8, 0x79, 0xf3, 0xa3, 0x3d, 0x74, 0x64, 0xf8, 0x88, 0x08, 0x17, 0xb1, 0x64, 0x0b,
	0x37, 0x6d, 0xf7, 0x4a, 0x41, 0x3a, 0x7a, 0x21, 0x75, 0xe2, 0x02, 0xba, 0x84, 0x8f, 0xd0, 0x90,
	0xe9, 0x7d, 0x5f, 0x45, 0xb7, 0x47, 0x84, 0x97, 0x3d, 0xa0, 0xcb, 0xc3, 0x3a, 0xad, 0x1a, 0xf7,
	0x1b, 0xca, 0x66, 0x13, 0x86, 0x0d, 0xa9, 0xdf, 0x5a, 0x51, 0xaf, 0xa6, 0x90, 0x0a, 0x20, 0x4a,
	0xf3, 0x2d, 0x67, 0x65, 0x00, 0x47, 0x76, 0x40, 0x83, 0x13, 0x2f, 0x21, 0x8d, 0xb1, 0x3a, 0x3f,
	0x76, 0x1f, 0x4e, 0x8d, 0x1d, 0x4a, 0x9f, 0x54, 0x47, 0x33, 0xd2, 0x52, 0xea, 0xf3, 0xfe, 0x54,
	0xff, 0x85, 0xf4, 0xc1, 0x8f, 0xa5, 0xc3, 0xdd, 0x52, 0xcb, 0x81, 0xe1, 0xfd, 0x6d, 0xd6, 0xcf,
	0xb3, 0xd9, 0xf2, 0x90, 0xaa, 0x62, 0x7e, 0x9f, 0x03, 0xbc, 0xf6, 0x3a, 0x1a, 0xfb, 0x31, 0xe4,
	0x65, 0x22, 0x11, 0xaf, 0xcd, 0x50, 0xbe, 0xd1, 0xc5, 0x72, 0x6c, 0xa8, 0x0c, 0x26, 0x82, 0x28,
	0x84, 0xf8, 0x76, 0x83, 0xd9, 0x6e, 0xbd, 0xe8, 0x8d, 0xd6, 0xc7, 0x0a, 0xca, 0x75, 0x6b, 0xcc,
	0x69, 0xe6, 0x90, 0x01, 0x5f, 0x5e, 0x31, 0xfd, 0xfe, 0x60, 0x18, 0xf7, 0x9c, 0x8a, 0x1d, 0x22,
	0x7c, 0x05, 0xbc, 0xc4, 0x3a, 0xae, 0x03, 0x57, 0x92, 0xc1, 0x56, 0xdd, 0x0b, 0x86, 0x9d, 0xb9,
	0x60, 0x86, 0x69, 0x7f, 0x38, 0xa2, 0xe0, 0xe5, 0x56, 0x3f, 0xfc, 0xae, 0x83, 0xd7, 0x4b, 0xd6,
	0xe0, 0xa5, 0x1c, 0x13, 0x61, 0xeb, 0xb0, 0x00, 0x9f, 0x00, 0x29, 0x4c, 0x0d, 0xc7, 0xae, 0xe1,
	0x4c, 0xc0, 0x2a, 0x16, 0x79, 0x8a, 0x45, 0xfe, 0x48, 0x84, 0x5b, 0xb1, 0x8a, 0xc5, 0x86, 0xac,
	0x9e, 0x0d, 0x29, 0x37, 0xd6, 0x88, 0x7c, 0x75, 0xeb, 0x3a, 0xfa, 0x30, 0x7d, 0xe7, 0x4c, 0xb2,
	0xf3, 0x50, 0x2c, 0x1a, 0xc2, 0xea, 0x1c, 0x6a, 0x81, 0xcd, 0x69, 0xb9, 0x64, 0x43, 0xb0, 0x6c,
	0xe9, 0x2d, 0x41, 0x2b, 0x9b, 0x28, 0x80, 0x95, 0xdb, 0x8f, 0x7b, 0x80, 0xd7, 0x7e, 0xbe, 0xb1,
	0xbf, 0x3f, 0x7b, 0x51, 0x84, 0x2f, 0x80, 0x1f, 0xb2, 0x8e, 0xfc, 0x67, 0x54, 0x98, 0xc3, 0x56,
	0xed, 0x3f, 0x72, 0xc0, 0x0c, 0xd3, 0x9e, 0x6f, 0x34, 0x2e, 0x43, 0x6c, 0xde, 0x30, 0x97, 0xa9,
	0x77, 0x73, 0x99, 0x55, 0x22, 0x5c, 0x61, 0xef, 0x32, 0x3e, 0x27, 0x97, 0xc9, 0xe0, 0x2c, 0x9b,
	0xac, 0xce, 0xb2, 0x4c, 0x84, 0x25, 0xb8, 0xb3, 0xcc, 0xc8, 0xde, 0x41, 0xd6, 0xd9, 0x3e, 0xb5,
	0x47, 0x0b, 0x6e, 0xca, 0xda, 0x85, 0x9a, 0x79, 0x5e, 0x4d, 0xbe, 0xbf, 0xdf, 0x9c, 0xac, 0xf7,
	0x51, 0x22, 0xfc, 0x19, 0xd8, 0xcb, 0x3a, 0x29, 0x9c, 0x2b, 0xb1, 0xa9, 0x3d, 0x8c, 0xd2, 0xe8,
	0x2d, 0x69, 0x50, 0x76, 0x02, 0xfb, 0xf9, 0x1f, 0x1e, 0x27, 0x70, 0xe2, 0x3f, 0xa3, 0x02, 0x1d,
	0x9c, 0xe0, 0x58, 0x0e, 0x28, 0xc6, 0x77, 0xa5, 0xdf, 0x7b, 0x00, 0xe9, 0x01, 0x15, 0x51, 0x11,
	0xd6, 0x81, 0x37, 0x59, 0x5b, 0x25, 0x71, 0x25, 0xe8, 0xc9, 0xc0, 0x03, 0x0d, 0xd5, 0x7f, 0xf4,
	0x80, 0x69, 0x36, 0x93, 0x8d, 0x7d, 0xa4, 0xf6, 0x2a, 0x81, 0xd4, 0xdc, 0xff, 0x12, 0x09, 0xc2,
	0xfd, 0xa8, 0x6c, 0xa2, 0xed, 0xd7, 0x5a, 0x6e, 0xa4, 0x3a, 0x9a, 0x49, 0xf5, 0x29, 0xa1, 0x04,
	0xed, 0xf7, 0x5e, 0x11, 0xe1, 0x8f, 0xc0, 0x36, 0xd6, 0x5e, 0x35, 0x19, 0x17, 0xc2, 0x1d, 0x3c,
	0x5d, 0xcf, 0x01, 0xd3, 0x88, 0x7d, 0xa4, 0xee, 0x05, 0xeb, 0xad, 0x5e, 0xf0, 0x48, 0x36, 0x5e,
	0xa0, 0x9a, 0xd1, 0x77, 0xe6, 0x03, 0x46, 0x9d, 0x24, 0xe7, 0x7e, 0xea, 0x24, 0xb9, 0x23, 0xaf,
	0x93, 0xbc, 0x29, 0xc2, 0x5a, 0xc0, 0xb3, 0xf6, 0x7a, 0xe4, 0x58, 0x9b, 0x3d, 0x39, 0xb6, 0x3e,
	0x64, 0xa9, 0x24, 0x93, 0xbb, 0x30, 0xff, 0xed, 0x01, 0xd3, 0xed, 0xe6, 0x79, 0x98, 0x7c, 0x24,
	0xe7, 0xc1, 0xf8, 0x88, 0xdd, 0x65, 0x18, 0x07, 0xdd, 0x64, 0xb9, 0x08, 0x19, 0x5e, 0x0d, 0x14,
	0x80, 0x59, 0xa6, 0x2d, 0xcc, 0x8f, 0xc2, 0x89, 0x37, 0x74, 0x87, 0x59, 0x41, 0xd4, 0xba, 0xe7,
	0xb8, 0xd6, 0xba, 0xd5, 0x12, 0xf7, 0x2e, 0x37, 0xd7, 0x78, 0xf4, 0x7e, 0x5c, 0xc3, 0xde, 0x27,
	0x1e, 0xb7, 0xde, 0x45, 0xf0, 0x3a, 0x15, 0x2f, 0xf1, 0xaa, 0xe5, 0x93, 0x36, 0x97, 0x10, 0x66,
	0x3a, 0x56, 0x2d, 0x89, 0x72, 0x65, 0xcc, 0x74, 0xfb, 0xe0, 0x89, 0x0c, 0xdb, 0x57, 0x5c, 0x95,
	0x59, 0x9e, 0x59, 0x21, 0x9a, 0x7e, 0x66, 0x15, 0xc6, 0x93, 0x1f, 0xba, 0x92, 0xb0, 0x51, 0x84,
	0x1b, 0xf0, 0xe4, 0xb7, 0x4a, 0x2d, 0x4c, 0xe0, 0x3b, 0x26, 0x35, 0xff, 0xa1, 0xf2, 0x05, 0xfe,
	0x1a, 0x27, 0x75, 0xe2, 0x33, 0x54, 0x94, 0x40, 0x9b, 0x5b, 0x1c, 0x1b, 0xae, 0xd6, 0x6b, 0x41,
	0xfa, 0xf3, 0x29, 0x46, 0xaf, 0x05, 0x79, 0xad, 0xab, 0x83, 0xea, 0x42, 0x7a, 0x41, 0x88, 0x38,
	0x5d, 0x2b, 0x18, 0x43, 0xa7, 0x6b, 0x56, 0xd0, 0x3b, 0xde, 0x19, 0xf4, 0xba, 0x54, 0xa8, 0x46,
	0x73, 0x4a, 0xd7, 0x4d, 0x89, 0xf0, 0x32, 0x05, 0xba, 0x28, 0xd6, 0xcd, 0xdb, 0x38, 0xd6, 0x5a,
	0x33, 0x90, 0x8e, 0x1d, 0x96, 0xf6, 0xdf, 0xb4, 0x43, 0x21, 0xa3, 0xba, 0xa2, 0x81, 0x3d, 0x05,
	0x36, 0xa1, 0xea, 0xa6, 0x5c, 0x4b, 0x19, 0x05, 0xe3, 0x71, 0xec, 0x87, 0xe4, 0x20, 0x01, 0x5b,
	0x36, 0x67, 0xef, 0xa1, 0xd6, 0x22, 0x13, 0xd1, 0x88, 0x15, 0x9a, 0xa2, 0xc0, 0x9f, 0xa9, 0xe7,
	0x83, 0x2d, 0x36, 0x45, 0x44, 0xb8, 0x1b, 0x84, 0x59, 0xd7, 0x75, 0xc9, 0xd2, 0x78, 0xd4, 0x74,
	0x30, 0x8e, 0x8f, 0xc7, 0xd7, 0x28, 0x19, 0x21, 0x9f, 0x8f, 0xc7, 0x37, 0x0b, 0xb5, 0x38, 0x66,
	0xe5, 0xfe, 0xb0, 0x08, 0x4c, 0x52, 0x8d, 0x69, 0x33, 0xd2, 0x1b, 0xfd, 0xcf, 0x14, 0x98, 0x48,
	0xfc, 0x01, 0x19, 0xda, 0x9f, 0xe9, 0xcf, 0x1a, 0xf9, 0xe6, 0x67, 0xe8, 0x21, 0xc4, 0x18, 0x79,
	0x23, 0xf9, 0x1c, 0x3d, 0x11, 0xb1, 0xae, 0x36, 0xf8, 0x56, 0x13, 0x3f, 0xef, 0x0e, 0xb4, 0xe2,
	0x7f, 0xaf, 0x40, 0xda, 0x3f, 0x20, 0xf5, 0xdc, 0xc6, 0xcb, 0x4d, 0x92, 0xd8, 0x8a, 0xff, 0xe1,
	0x81, 0x7d, 0xbf, 0x19, 0xfa, 0xc0, 0xb3, 0x94, 0x59, 0x54, 0x4e, 0x4e, 0x5e, 0xbe, 0x67, 0x85,
	0x46, 0x29, 0x7f, 0x4f, 0x17, 0x75, 0x6f, 0x05, 0xc5, 0xd2, 0x3d, 0x14, 0x98, 0x48, 0xbc, 0x5a,
	0xb0, 0xca, 0x66, 0x7e, 0x89, 0x6f, 0x95, 0xcd, 0xf2, 0x54, 0x9c, 0x79, 0x49, 0x84, 0x25, 0xf4,
	0x44, 0xb4, 0x8f, 0xd3, 0x44, 0x9b, 0x4a, 0xfc, 0x44, 0xe6, 0x8e, 0x18, 0xf6, 0x8d, 0x80, 0xe1,
	0x4f, 0x28, 0x30, 0x91, 0xb8, 0x30, 0x6f, 0x65, 0xd8, 0xfc, 0x67, 0x6d, 0xac, 0x0c, 0x5b, 0xfe,
	0x14, 0x0c, 0xb3, 0x4d, 0x61, 0x18, 0x55, 0x5f, 0x74, 0x86, 0xd5, 0x3f, 0xa2, 0x73, 0xe8, 0xb6,
	0xd4, 0xd3, 0xa1, 0x12, 0x15, 0x86, 0x97, 0xb0, 0x59, 0x32, 0x4c, 0x7f, 0x4e, 0x01, 0x60, 0x3c,
	0x34, 0xa3, 0x2d, 0x28, 0x89, 0x78, 0xba, 0xee, 0x9b, 0xeb, 0xd6, 0x2c, 0xc4, 0x98, 0x5d, 0x22,
	0x7c, 0x8c, 0x9e, 0x88, 0xa0, 0x8f, 0xc6, 0x64, 0x89, 0x8a, 0x66, 0x95, 0x44, 0xa8, 0x47, 0x41,
	0xd3, 0xcb, 0x6f, 0xc4, 0x35, 0x9d, 0x2d, 0xd7, 0x7f, 0xeb, 0x01, 0x13, 0xb0, 0x5b, 0xc8, 0xb4,
	0x85, 0x2f, 0xf2, 0x49, 0xad, 0x6f, 0x9e, 0x6b, 0xbb, 0x10, 0x63, 0x06, 0x29, 0x11, 0x7e, 0x4a,
	0xd1, 0x53, 0x09, 0xd6, 0x11, 0x48, 0xf3, 0x9d, 0xa0, 0xd4, 0xf3, 0x03, 0xec, 0x1d, 0x2d, 0x7a,
	0x20, 0x4b, 0xf4, 0x33, 0xbf, 0xba, 0x75, 0x7e, 0x6f, 0xab, 0x3f, 0xb3, 0xfd, 0xb6, 0x71, 0x9f,
	0xfa, 0x89, 0x92, 0x4f, 0x11, 0x71, 0xf8, 0xfd, 0xaf, 0xf0, 0x4f, 0x86, 0xfb, 0xcf, 0xa4, 0x7b,
	0x2e, 0xab, 0x73, 0x2b, 0xdd, 0x30, 0x4f, 0x9a, 0x4d, 0xfb, 0x9c, 0x35, 0x46, 0xff, 0x99, 0x52,
	0xea, 0x0d, 0xd6, 0xbf, 0xa2, 0xba, 0xd8, 0x79, 0x19, 0x89, 0xcb, 0xf3, 0xbe, 0x25, 0xd9, 0x75,
	0x14, 0x62, 0xcc, 0x71, 0x4a, 0x84, 0x2f, 0xd2, 0x73, 0x08, 0xfd, 0xe1, 0xaf, 0x41, 0xe4, 0xdd,
	0xa5, 0xef, 0x31, 0x55, 0x91, 0xca, 0xc3, 0xf8, 0x54, 0x47, 0xf3, 0x0b, 0xda, 0x73, 0x0a, 0xd7,
	0xcf, 0x14, 0x49, 0x39, 0x7a, 0xb9, 0xb3, 0xa4, 0x35, 0xfa, 0x17, 0xe5, 0xef, 0xe9, 0x4f, 0x34,
	0xf6, 0xd2, 0x7f, 0xa4, 0xb4, 0xa2, 0xa3, 0x55, 0x05, 0xac, 0x6b, 0x88, 0x20, 0xb5, 0xb0, 0x34,
	0xeb, 0xbe, 0x42, 0x8c, 0xf9, 0x1b, 0x11, 0x3e, 0x4d, 0xcf, 0x21, 0x22, 0x89, 0x45, 0x0f, 0x73,
	0x90, 0x33, 0x38, 0x74, 0x52, 0xe4, 0x7d, 0xcc, 0x37, 0x62, 0x79, 0xe5, 0xe0, 0xf3, 0x6f, 0x94,
	0x76, 0x34, 0x91, 0x85, 0xc8, 0xce, 0xef, 0x9c, 0xac, 0x22, 0xbb, 0x3c, 0x01, 0x62, 0xea, 0x45,
	0xc8, 0xd1, 0x33, 0x88, 0xd0, 0x64, 0xf4, 0xf0, 0x39, 0x35, 0xa0, 0x65, 0x65, 0x47, 0xbe, 0xac,
	0xff, 0x4e, 0xa1, 0x0a, 0x82, 0x55, 0xc2, 0x25, 0x2e, 0x6e, 0x4e, 0xca, 0xf7, 0x48, 0x96, 0x3d,
	0x85, 0x18, 0xf3, 0x33, 0x11, 0x6e, 0x71, 0x34, 0x6c, 0x35, 0x44, 0x94, 0x5b, 0x23, 0x84, 0xeb,
	0x07, 0x8a, 0xec, 0x8b, 0xe8, 0x92, 0x6c, 0x64, 0xa7, 0xff, 0x91, 0x02, 0xd3, 0x6c, 0x1f, 0x3e,
	0x58, 0xe5, 0x75, 0x7a, 0x3b, 0x61, 0x95, 0xd7, 0xf9, 0x25, 0xc5, 0xeb, 0x22, 0x5c, 0x4e, 0x4f,
	0x97, 0x5a, 0xce, 0x4b, 0xd7, 0x8e, 0x48, 0xad, 0xa7, 0x50, 0x32, 0xd7, 0x82, 0xb9, 0x03, 0x1d,
	0xc9, 0xc3, 0xcc, 0xb7, 0x91, 0x27, 0x1c, 0x09, 0x27, 0x76, 0xf1, 0x21, 0xb5, 0x41, 0xb6, 0xd1,
	0x7f, 0xa1, 0xc0, 0x54, 0x9b, 0xfb, 0xfc, 0xf4, 0x22, 0x33, 0x8f, 0xf6, 0xcf, 0x22, 0x7c, 0x8b,
	0xb3, 0xea, 0x27, 0xc4, 0x98, 0xb8, 0xe2, 0x8a, 0xd2, 0x8d, 0x03, 0x5a, 0x9c, 0xc6, 0x9e, 0x08,
	0x68, 0x02, 0xb9, 0x37, 0xbb, 0xc0, 0x95, 0x60, 0x28, 0xb4, 0x4b, 0x9b, 0x14, 0x13, 0xee, 0x97,
	0x14, 0x98, 0x6c, 0x42, 0x82, 0x34, 0x93, 0xf9, 0x1e, 0xbc, 0x6f, 0x41, 0xc6, 0x3e, 0x42, 0x8c,
	0x09, 0x8b, 0x90, 0xa1, 0x27, 0x23, 0x00, 0xa6, 0xd7, 0x6d, 0x7c, 0x66, 0x82, 0xc2, 0xf4, 0xd3,
	0xcc, 0x93, 0x36, 0x4c, 0xeb, 0x7d, 0xca, 0xdf, 0xb3, 0xd9, 0x99, 0xec, 0x2d, 0x7f, 0x4f, 0xee,
	0xb0, 0x57, 0x93, 0xc3, 0x54, 0xff, 0xb6, 0xca, 0x61, 0xbd, 0xd7, 0x68, 0x95, 0xc3, 0xe6, 0xa6,
	0x9f, 0x2a, 0x07, 0x0a, 0x7f, 0x98, 0x1c, 0x26, 0x02, 0x92, 0xc3, 0x37, 0x3a, 0x39, 0xbe, 0xa1,
	0xc0, 0x64, 0xd3, 0x61, 0x96, 0x55, 0x0e, 0xeb, 0x2d, 0x68, 0xab, 0x1c, 0x36, 0x17, 0x82, 0x65,
	0xb8, 0xa3, 0xac, 0x87, 0x1c, 0xdf, 0x88, 0xf5, 0x20, 0x08, 0x8a, 0x1c, 0xab, 0xd8, 0xfb, 0x97,
	0x83, 0xbe, 0x4d, 0x81, 0x42, 0xbc, 0x16, 0x4b, 0xcf, 0xb3, 0xc9, 0xcb, 0x04, 0xfb, 0x7e, 0xf7,
	0x0e, 0x3a, 0xef, 0x28, 0x4a, 0xe1, 0x6b, 0x40, 0x12, 0x10, 0xef, 0xf4, 0x28, 0x78, 0x97, 0xe1,
	0x30, 0x51, 0x23, 0xb3, 0xc2, 0x61, 0xf3, 0x65, 0x2f, 0x2b, 0x1c, 0xb6, 0x5c, 0x3c, 0x92, 0xe1,
	0xf0, 0x32, 0x7a, 0x9a, 0x89, 0x5b, 0x35, 0x1a, 0xdb, 0x93, 0x15, 0x51, 0xe6, 0xd2, 0xb3, 0xdd,
	0x44, 0xa1, 0x3b, 0x72, 0x40, 0xb1, 0xdd, 0xad, 0x01, 0x2b, 0x64, 0x72, 0xb8, 0x07, 0x63, 0x85,
	0x4c, 0x4e, 0x97, 0x10, 0x98, 0x1e, 0x8f, 0x08, 0x7f, 0x4b, 0xd1, 0xc5, 0x26, 0xf7, 0x55, 0xfe,
	0x6c, 0xb8, 0xef, 0x17, 0x94, 0x1d, 0xf9, 0x21, 0xbb, 0x3e, 0xa3, 0xa8, 0x7c, 0x03, 0xb3, 0xc6,
	0x4d, 0xe5, 0x8a, 0x5c, 0x6e, 0x26, 0xa4, 0xf4, 0x52, 0x7c, 0x39, 0x4d, 0x81, 0x62, 0xbb, 0x33,
	0x39, 0xeb, 0xe2, 0x38, 0x9c, 0x7c, 0x5a, 0x17, 0xc7, 0xe9, 0x88, 0x8f, 0xd9, 0x2b, 0xc2, 0x52,
	0xba, 0xd8, 0x14, 0x91, 0xd0, 0xd2, 0xd8, 0x52, 0x91, 0xa8, 0xbe, 0x07, 0x25, 0xaa, 0x44, 0x81,
	0x62, 0xbb, 0x33, 0x78, 0xab, 0xa8, 0x0e, 0x37, 0x1b, 0xac, 0xa2, 0x3a, 0x1d, 0xe9, 0x33, 0x3f,
	0x51, 0x44, 0x35, 0x05, 0x2d, 0x55, 0x54, 0x3b, 0xaa, 0x22, 0xea, 0x5a, 0xf6, 0x41, 0x88, 0x4a,
	0xff, 0x96, 0x02, 0x53, 0x2c, 0xa7, 0x4c, 0x74, 0x89, 0x5b, 0xf4, 0xd2, 0x25, 0x5c, 0x98, 0x45,
	0x2f, 0x5d, 0x3c, 0x53, 0x48, 0xd0, 0x56, 0xd2, 0x86, 0x8a, 0xc4, 0xa3, 0x1f, 0x88, 0x78, 0xbf,
	0xa6, 0x00, 0x6d, 0x3d, 0x20, 0xa0, 0x17, 0xba, 0xc6, 0x37, 0x5d, 0xc0, 0x45, 0xd9, 0x74, 0x13,
	0x62, 0x4c, 0x48, 0x84, 0x2b, 0x69, 0x9f, 0x9d, 0x2c, 0x6a, 0x40, 0x74, 0x69, 0x53, 0xa4, 0x5d,
	0x40, 0xcf, 0xcf, 0x28, 0x2d, 0xfd, 0x27, 0xca, 0x72, 0xb1, 0x4d, 0xaf, 0x71, 0xd1, 0x4b, 0x47,
	0x50, 0x6c, 0xf7, 0x95, 0x8e, 0xa4, 0xee, 0x27, 0x7b, 0xe2, 0xb3, 0xf4, 0x02, 0x53, 0x34, 0x44,
	0xc5, 0x33, 0xad, 0x38, 0xea, 0x47, 0xcb, 0x99, 0x4d, 0x27, 0x45, 0x5e, 0x96, 0x59, 0xe8, 0x26,
	0xef, 0xdb, 0xe1, 0xc4, 0x1b, 0x4a, 0xe7, 0x0a, 0x8a, 0x0d, 0x6c, 0x12, 0x61, 0x15, 0xed, 0x07,
	0x33, 0xd4, 0x15, 0xf6, 0xab, 0x35, 0x37, 0x3f, 0xdc, 0x52, 0xe5, 0xaf, 0x8c, 0xd6, 0x70, 0x79,
	0xcb, 0x97, 0x2d, 0x5f, 0xb6, 0x82, 0xa5, 0x28, 0xae, 0x28, 0x18, 0x8b, 0xd5, 0x85, 0x6b, 0x14,
	0x7b, 0x28, 0x7f, 0x53, 0x88, 0x46, 0x2a, 0x2c, 0x94, 0x9d, 0xf9, 0xca, 0x7f, 0x3e, 0xe7, 0x07,
	0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x5a, 0x11, 0x97, 0xcb, 0x67, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagerClient is the client API for ClusterManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagerClient interface {
	CreateCluster(ctx context.Context, in *CreateClusterReq, opts ...grpc.CallOption) (*CreateClusterResp, error)
	UpdateCluster(ctx context.Context, in *UpdateClusterReq, opts ...grpc.CallOption) (*UpdateClusterResp, error)
	DeleteCluster(ctx context.Context, in *DeleteClusterReq, opts ...grpc.CallOption) (*DeleteClusterResp, error)
	GetCluster(ctx context.Context, in *GetClusterReq, opts ...grpc.CallOption) (*GetClusterResp, error)
	ListCluster(ctx context.Context, in *ListClusterReq, opts ...grpc.CallOption) (*ListClusterResp, error)
	GetClusterCredential(ctx context.Context, in *GetClusterCredentialReq, opts ...grpc.CallOption) (*GetClusterCredentialResp, error)
	UpdateClusterCredential(ctx context.Context, in *UpdateClusterCredentialReq, opts ...grpc.CallOption) (*UpdateClusterCredentialResp, error)
	DeleteClusterCredential(ctx context.Context, in *DeleteClusterCredentialReq, opts ...grpc.CallOption) (*DeleteClusterCredentialResp, error)
	ListClusterCredential(ctx context.Context, in *ListClusterCredentialReq, opts ...grpc.CallOption) (*ListClusterCredentialResp, error)
	InitFederationCluster(ctx context.Context, in *InitFederationClusterReq, opts ...grpc.CallOption) (*InitFederationClusterResp, error)
	AddFederatedCluster(ctx context.Context, in *AddFederatedClusterReq, opts ...grpc.CallOption) (*AddFederatedClusterResp, error)
	CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...grpc.CallOption) (*CreateNamespaceResp, error)
	UpdateNamespace(ctx context.Context, in *UpdateNamespaceReq, opts ...grpc.CallOption) (*UpdateNamespaceResp, error)
	DeleteNamespace(ctx context.Context, in *DeleteNamespaceReq, opts ...grpc.CallOption) (*DeleteNamespaceResp, error)
	GetNamespace(ctx context.Context, in *GetNamespaceReq, opts ...grpc.CallOption) (*GetNamespaceResp, error)
	ListNamespace(ctx context.Context, in *ListNamespaceReq, opts ...grpc.CallOption) (*ListNamespaceResp, error)
	CreateNamespaceQuota(ctx context.Context, in *CreateNamespaceQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceQuotaResp, error)
	UpdateNamespaceQuota(ctx context.Context, in *UpdateNamespaceQuotaReq, opts ...grpc.CallOption) (*UpdateNamespaceQuotaResp, error)
	DeleteNamespaceQuota(ctx context.Context, in *DeleteNamespaceQuotaReq, opts ...grpc.CallOption) (*DeleteNamespaceQuotaResp, error)
	GetNamespaceQuota(ctx context.Context, in *GetNamespaceQuotaReq, opts ...grpc.CallOption) (*GetNamespaceQuotaResp, error)
	ListNamespaceQuota(ctx context.Context, in *ListNamespaceQuotaReq, opts ...grpc.CallOption) (*ListNamespaceQuotaResp, error)
	CreateNamespaceWithQuota(ctx context.Context, in *CreateNamespaceWithQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceWithQuotaResp, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) CreateCluster(ctx context.Context, in *CreateClusterReq, opts ...grpc.CallOption) (*CreateClusterResp, error) {
	out := new(CreateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateCluster(ctx context.Context, in *UpdateClusterReq, opts ...grpc.CallOption) (*UpdateClusterResp, error) {
	out := new(UpdateClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteCluster(ctx context.Context, in *DeleteClusterReq, opts ...grpc.CallOption) (*DeleteClusterResp, error) {
	out := new(DeleteClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetCluster(ctx context.Context, in *GetClusterReq, opts ...grpc.CallOption) (*GetClusterResp, error) {
	out := new(GetClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListCluster(ctx context.Context, in *ListClusterReq, opts ...grpc.CallOption) (*ListClusterResp, error) {
	out := new(ListClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetClusterCredential(ctx context.Context, in *GetClusterCredentialReq, opts ...grpc.CallOption) (*GetClusterCredentialResp, error) {
	out := new(GetClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateClusterCredential(ctx context.Context, in *UpdateClusterCredentialReq, opts ...grpc.CallOption) (*UpdateClusterCredentialResp, error) {
	out := new(UpdateClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterCredential(ctx context.Context, in *DeleteClusterCredentialReq, opts ...grpc.CallOption) (*DeleteClusterCredentialResp, error) {
	out := new(DeleteClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListClusterCredential(ctx context.Context, in *ListClusterCredentialReq, opts ...grpc.CallOption) (*ListClusterCredentialResp, error) {
	out := new(ListClusterCredentialResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListClusterCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) InitFederationCluster(ctx context.Context, in *InitFederationClusterReq, opts ...grpc.CallOption) (*InitFederationClusterResp, error) {
	out := new(InitFederationClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/InitFederationCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddFederatedCluster(ctx context.Context, in *AddFederatedClusterReq, opts ...grpc.CallOption) (*AddFederatedClusterResp, error) {
	out := new(AddFederatedClusterResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/AddFederatedCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespace(ctx context.Context, in *CreateNamespaceReq, opts ...grpc.CallOption) (*CreateNamespaceResp, error) {
	out := new(CreateNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNamespace(ctx context.Context, in *UpdateNamespaceReq, opts ...grpc.CallOption) (*UpdateNamespaceResp, error) {
	out := new(UpdateNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNamespace(ctx context.Context, in *DeleteNamespaceReq, opts ...grpc.CallOption) (*DeleteNamespaceResp, error) {
	out := new(DeleteNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNamespace(ctx context.Context, in *GetNamespaceReq, opts ...grpc.CallOption) (*GetNamespaceResp, error) {
	out := new(GetNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNamespace(ctx context.Context, in *ListNamespaceReq, opts ...grpc.CallOption) (*ListNamespaceResp, error) {
	out := new(ListNamespaceResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespaceQuota(ctx context.Context, in *CreateNamespaceQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceQuotaResp, error) {
	out := new(CreateNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateNamespaceQuota(ctx context.Context, in *UpdateNamespaceQuotaReq, opts ...grpc.CallOption) (*UpdateNamespaceQuotaResp, error) {
	out := new(UpdateNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/UpdateNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteNamespaceQuota(ctx context.Context, in *DeleteNamespaceQuotaReq, opts ...grpc.CallOption) (*DeleteNamespaceQuotaResp, error) {
	out := new(DeleteNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/DeleteNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) GetNamespaceQuota(ctx context.Context, in *GetNamespaceQuotaReq, opts ...grpc.CallOption) (*GetNamespaceQuotaResp, error) {
	out := new(GetNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/GetNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ListNamespaceQuota(ctx context.Context, in *ListNamespaceQuotaReq, opts ...grpc.CallOption) (*ListNamespaceQuotaResp, error) {
	out := new(ListNamespaceQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/ListNamespaceQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateNamespaceWithQuota(ctx context.Context, in *CreateNamespaceWithQuotaReq, opts ...grpc.CallOption) (*CreateNamespaceWithQuotaResp, error) {
	out := new(CreateNamespaceWithQuotaResp)
	err := c.cc.Invoke(ctx, "/clustermanager.ClusterManager/CreateNamespaceWithQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagerServer is the server API for ClusterManager service.
type ClusterManagerServer interface {
	CreateCluster(context.Context, *CreateClusterReq) (*CreateClusterResp, error)
	UpdateCluster(context.Context, *UpdateClusterReq) (*UpdateClusterResp, error)
	DeleteCluster(context.Context, *DeleteClusterReq) (*DeleteClusterResp, error)
	GetCluster(context.Context, *GetClusterReq) (*GetClusterResp, error)
	ListCluster(context.Context, *ListClusterReq) (*ListClusterResp, error)
	GetClusterCredential(context.Context, *GetClusterCredentialReq) (*GetClusterCredentialResp, error)
	UpdateClusterCredential(context.Context, *UpdateClusterCredentialReq) (*UpdateClusterCredentialResp, error)
	DeleteClusterCredential(context.Context, *DeleteClusterCredentialReq) (*DeleteClusterCredentialResp, error)
	ListClusterCredential(context.Context, *ListClusterCredentialReq) (*ListClusterCredentialResp, error)
	InitFederationCluster(context.Context, *InitFederationClusterReq) (*InitFederationClusterResp, error)
	AddFederatedCluster(context.Context, *AddFederatedClusterReq) (*AddFederatedClusterResp, error)
	CreateNamespace(context.Context, *CreateNamespaceReq) (*CreateNamespaceResp, error)
	UpdateNamespace(context.Context, *UpdateNamespaceReq) (*UpdateNamespaceResp, error)
	DeleteNamespace(context.Context, *DeleteNamespaceReq) (*DeleteNamespaceResp, error)
	GetNamespace(context.Context, *GetNamespaceReq) (*GetNamespaceResp, error)
	ListNamespace(context.Context, *ListNamespaceReq) (*ListNamespaceResp, error)
	CreateNamespaceQuota(context.Context, *CreateNamespaceQuotaReq) (*CreateNamespaceQuotaResp, error)
	UpdateNamespaceQuota(context.Context, *UpdateNamespaceQuotaReq) (*UpdateNamespaceQuotaResp, error)
	DeleteNamespaceQuota(context.Context, *DeleteNamespaceQuotaReq) (*DeleteNamespaceQuotaResp, error)
	GetNamespaceQuota(context.Context, *GetNamespaceQuotaReq) (*GetNamespaceQuotaResp, error)
	ListNamespaceQuota(context.Context, *ListNamespaceQuotaReq) (*ListNamespaceQuotaResp, error)
	CreateNamespaceWithQuota(context.Context, *CreateNamespaceWithQuotaReq) (*CreateNamespaceWithQuotaResp, error)
}

// UnimplementedClusterManagerServer can be embedded to have forward compatible implementations.
type UnimplementedClusterManagerServer struct {
}

func (*UnimplementedClusterManagerServer) CreateCluster(ctx context.Context, req *CreateClusterReq) (*CreateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCluster not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateCluster(ctx context.Context, req *UpdateClusterReq) (*UpdateClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCluster not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteCluster(ctx context.Context, req *DeleteClusterReq) (*DeleteClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCluster not implemented")
}
func (*UnimplementedClusterManagerServer) GetCluster(ctx context.Context, req *GetClusterReq) (*GetClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}
func (*UnimplementedClusterManagerServer) ListCluster(ctx context.Context, req *ListClusterReq) (*ListClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCluster not implemented")
}
func (*UnimplementedClusterManagerServer) GetClusterCredential(ctx context.Context, req *GetClusterCredentialReq) (*GetClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateClusterCredential(ctx context.Context, req *UpdateClusterCredentialReq) (*UpdateClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteClusterCredential(ctx context.Context, req *DeleteClusterCredentialReq) (*DeleteClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) ListClusterCredential(ctx context.Context, req *ListClusterCredentialReq) (*ListClusterCredentialResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterCredential not implemented")
}
func (*UnimplementedClusterManagerServer) InitFederationCluster(ctx context.Context, req *InitFederationClusterReq) (*InitFederationClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitFederationCluster not implemented")
}
func (*UnimplementedClusterManagerServer) AddFederatedCluster(ctx context.Context, req *AddFederatedClusterReq) (*AddFederatedClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFederatedCluster not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespace(ctx context.Context, req *CreateNamespaceReq) (*CreateNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNamespace(ctx context.Context, req *UpdateNamespaceReq) (*UpdateNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNamespace(ctx context.Context, req *DeleteNamespaceReq) (*DeleteNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) GetNamespace(ctx context.Context, req *GetNamespaceReq) (*GetNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) ListNamespace(ctx context.Context, req *ListNamespaceReq) (*ListNamespaceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespace not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespaceQuota(ctx context.Context, req *CreateNamespaceQuotaReq) (*CreateNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) UpdateNamespaceQuota(ctx context.Context, req *UpdateNamespaceQuotaReq) (*UpdateNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) DeleteNamespaceQuota(ctx context.Context, req *DeleteNamespaceQuotaReq) (*DeleteNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) GetNamespaceQuota(ctx context.Context, req *GetNamespaceQuotaReq) (*GetNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) ListNamespaceQuota(ctx context.Context, req *ListNamespaceQuotaReq) (*ListNamespaceQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNamespaceQuota not implemented")
}
func (*UnimplementedClusterManagerServer) CreateNamespaceWithQuota(ctx context.Context, req *CreateNamespaceWithQuotaReq) (*CreateNamespaceWithQuotaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespaceWithQuota not implemented")
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCluster(ctx, req.(*CreateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateCluster(ctx, req.(*UpdateClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteCluster(ctx, req.(*DeleteClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetCluster(ctx, req.(*GetClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListCluster(ctx, req.(*ListClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetClusterCredential(ctx, req.(*GetClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateClusterCredential(ctx, req.(*UpdateClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterCredential(ctx, req.(*DeleteClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListClusterCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterCredentialReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListClusterCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListClusterCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListClusterCredential(ctx, req.(*ListClusterCredentialReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_InitFederationCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitFederationClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).InitFederationCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/InitFederationCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).InitFederationCluster(ctx, req.(*InitFederationClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddFederatedCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFederatedClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddFederatedCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/AddFederatedCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddFederatedCluster(ctx, req.(*AddFederatedClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespace(ctx, req.(*CreateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNamespace(ctx, req.(*UpdateNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNamespace(ctx, req.(*DeleteNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNamespace(ctx, req.(*GetNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNamespace(ctx, req.(*ListNamespaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespaceQuota(ctx, req.(*CreateNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/UpdateNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateNamespaceQuota(ctx, req.(*UpdateNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/DeleteNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteNamespaceQuota(ctx, req.(*DeleteNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_GetNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).GetNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/GetNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).GetNamespaceQuota(ctx, req.(*GetNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ListNamespaceQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNamespaceQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ListNamespaceQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/ListNamespaceQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ListNamespaceQuota(ctx, req.(*ListNamespaceQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateNamespaceWithQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceWithQuotaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateNamespaceWithQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermanager.ClusterManager/CreateNamespaceWithQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateNamespaceWithQuota(ctx, req.(*CreateNamespaceWithQuotaReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clustermanager.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterManager_CreateCluster_Handler,
		},
		{
			MethodName: "UpdateCluster",
			Handler:    _ClusterManager_UpdateCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _ClusterManager_DeleteCluster_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _ClusterManager_GetCluster_Handler,
		},
		{
			MethodName: "ListCluster",
			Handler:    _ClusterManager_ListCluster_Handler,
		},
		{
			MethodName: "GetClusterCredential",
			Handler:    _ClusterManager_GetClusterCredential_Handler,
		},
		{
			MethodName: "UpdateClusterCredential",
			Handler:    _ClusterManager_UpdateClusterCredential_Handler,
		},
		{
			MethodName: "DeleteClusterCredential",
			Handler:    _ClusterManager_DeleteClusterCredential_Handler,
		},
		{
			MethodName: "ListClusterCredential",
			Handler:    _ClusterManager_ListClusterCredential_Handler,
		},
		{
			MethodName: "InitFederationCluster",
			Handler:    _ClusterManager_InitFederationCluster_Handler,
		},
		{
			MethodName: "AddFederatedCluster",
			Handler:    _ClusterManager_AddFederatedCluster_Handler,
		},
		{
			MethodName: "CreateNamespace",
			Handler:    _ClusterManager_CreateNamespace_Handler,
		},
		{
			MethodName: "UpdateNamespace",
			Handler:    _ClusterManager_UpdateNamespace_Handler,
		},
		{
			MethodName: "DeleteNamespace",
			Handler:    _ClusterManager_DeleteNamespace_Handler,
		},
		{
			MethodName: "GetNamespace",
			Handler:    _ClusterManager_GetNamespace_Handler,
		},
		{
			MethodName: "ListNamespace",
			Handler:    _ClusterManager_ListNamespace_Handler,
		},
		{
			MethodName: "CreateNamespaceQuota",
			Handler:    _ClusterManager_CreateNamespaceQuota_Handler,
		},
		{
			MethodName: "UpdateNamespaceQuota",
			Handler:    _ClusterManager_UpdateNamespaceQuota_Handler,
		},
		{
			MethodName: "DeleteNamespaceQuota",
			Handler:    _ClusterManager_DeleteNamespaceQuota_Handler,
		},
		{
			MethodName: "GetNamespaceQuota",
			Handler:    _ClusterManager_GetNamespaceQuota_Handler,
		},
		{
			MethodName: "ListNamespaceQuota",
			Handler:    _ClusterManager_ListNamespaceQuota_Handler,
		},
		{
			MethodName: "CreateNamespaceWithQuota",
			Handler:    _ClusterManager_CreateNamespaceWithQuota_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clustermanager.proto",
}
