# Default values for bcs-k8s-watch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: ""
  repository: bcs/bcs-k8s-watch
  #tag: ""
  pullPolicy: Always
env:
  # cluster ID is an unique identification of cluster
  # it's common env, global value comes first
  BK_BCS_clusterId: "BCS-K8S-00000"
  # zkHost for service discover, host:port string with comma speration
  # it's common env, global value comes first
  BK_BCS_bcsZkHost: "127.0.0.1:2181"
  # deployed as in-cluster or out-cluster, "false" for in-cluster deploying
  BK_BCS_kubeWatchExternal: "false"
  BK_BCS_kubeMaster: ""
  # use for specified storage links when managing other k8s cluster
  BK_BCS_customStorage: ""
  # use for specified net service links when managing other k8s cluster
  BK_BCS_customNetService: ""
  # use for specified net service zk links when managing other k8s cluster
  BK_BCS_customNetServiceZK: ""
  # password for client key file
  BK_BCS_clientKeyPassword: ""
  BK_BCS_also_log_to_stderr: "true"
  BK_BCS_log_level: 3
  # bcs server configuration render flag, when setting render,
  # we will render server configuration file by Env
  # it's common env, global value comes first
  BK_BCS_CONFIG_TYPE: "render"
secret:
  bcsCerts: bk-bcs-certs

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "bcs-k8s-watch"

serviceAccount:
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: bcs-k8s-watch

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
