syntax = "proto3";

package meshmanager;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option go_package = "proto/meshmanager;meshmanager";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "Cloud Netservice API Doc"
        version : "0.0.1"
    };

    schemes: HTTP
    consumes: "application/json"
    produces: "application/json"
};

// ErrCode error code
enum ErrCode {
    ERROR_NO = 0;
    // 0 Sunccess
    ERROR_OK = 100;

    // 404 Not Found
    ERROR_NOT_FOUND = 404;

    // 91000 mesh cluster failed
    ERROR_MESH_CLUSTER_FAILED = 91000;

    //91001 MeshCluster already exist
    ERROR_MESH_CLUSTER_EXIST = 91001;
}

service MeshManager {
    rpc CreateMeshCluster(CreateMeshClusterReq) returns (CreateMeshClusterResp) {
        option (google.api.http) = {
            post: "/meshmanager/v1/meshcluster"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "创建k8s集群mesh服务"
            summary: "创建k8s集群mesh服务"
        };
    }

    rpc DeleteMeshCluster(DeleteMeshClusterReq) returns (DeleteMeshClusterResp) {
        option (google.api.http) = {
            delete: "/meshmanager/v1/meshcluster"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "删除k8s集群mesh服务"
            summary: "删除k8s集群mesh服务"
        };
    }

    rpc ListMeshCluster(ListMeshClusterReq) returns (ListMeshClusterResp) {
        option (google.api.http) = {
            get: "/meshmanager/v1/meshcluster"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "获取k8s集群mesh服务状态"
            summary: "获取k8s集群mesh服务状态"
        };
    }
}

message CreateMeshClusterReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "CreateMeshClusterReq"
            description: "创建k8s集群mesh服务"
            required: ["version", "clusterid", "meshtype"]
        }
        example: { value: '{ "version": "1.5.4", "clusterid": "BCS-MESOS-10032", "meshtype": "istio"}' }
    };

    string version    = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "version", description: "version"}];
    string clusterid  = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "clusterid", description: "clusterid"}];
    string meshtype   = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "meshtype", description: "meshtype"}];
    string name       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "name", description: "name"}];
    string namespace  = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "namespace", description: "namespace"}];
    repeated string  configurations = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "configurations", description: "configurations"}];
}

message CreateMeshClusterResp {
    uint64             seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    ErrCode            errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errCode", description: "errCode"}];
    string             errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errMsg", description: "errMsg"}];
}

message DeleteMeshClusterReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "DeleteMeshClusterReq"
            description: "删除k8s集群mesh服务"
            required: ["clusterid"]
        }
        example: { value: '{"clusterid": "BCS-MESOS-10032"}' }
    };

    string clusterid  = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "clusterid", description: "clusterid"}];
}

message DeleteMeshClusterResp {
    uint64             seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    ErrCode            errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errCode", description: "errCode"}];
    string             errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errMsg", description: "errMsg"}];
}

message ListMeshClusterReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "ListMeshClusterrReq"
            description: "获取k8s集群mesh服务状态，如果clusterid为空则返回所有集群"
        }
        example: { value: '{"clusterid": "BCS-MESOS-10032"}' }
    };

    string clusterid  = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "clusterid", description: "clusterid"}];
}

message MeshCluster {
    string version   = 1;
    string clusterid = 2;
    bool   deletion  = 3;
    map<string, InstallStatus> components = 4;
}

message InstallStatus {
    string name      = 1;
    string namespace = 2;
    string status    = 3;
    string message   = 4;
}

message ListMeshClusterResp {
    uint64             seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    ErrCode            errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errCode", description: "errCode"}];
    string             errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errMsg", description: "errMsg"}];
    repeated MeshCluster meshClusters = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "meshClusters", description: "meshClusters"}];
}
