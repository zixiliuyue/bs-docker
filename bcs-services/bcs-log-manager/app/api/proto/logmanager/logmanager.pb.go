// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logmanager.proto

package logmanager

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ErrCode error code
type ErrCode int32

const (
	// 0 Sunccess
	ErrCode_ERROR_OK ErrCode = 0
	// 101000 log manager failed
	ErrCode_ERROR_LOG_MANAGER_FAILED           ErrCode = 101000
	ErrCode_ERROR_LOG_MANAGER_PARTIALLY_FAILED ErrCode = 101001
	ErrCode_ERROR_NO_SUCH_CLUSTER              ErrCode = 101002
	ErrCode_ERROR_CLUSTER_ID_REQUIRED          ErrCode = 101003
	ErrCode_ERROR_CLUSTER_OPERATION_ERROR      ErrCode = 101004
	ErrCode_ERROR_LOG_MANAGER_INTERNAL_ERROR   ErrCode = 101005
)

var ErrCode_name = map[int32]string{
	0:      "ERROR_OK",
	101000: "ERROR_LOG_MANAGER_FAILED",
	101001: "ERROR_LOG_MANAGER_PARTIALLY_FAILED",
	101002: "ERROR_NO_SUCH_CLUSTER",
	101003: "ERROR_CLUSTER_ID_REQUIRED",
	101004: "ERROR_CLUSTER_OPERATION_ERROR",
	101005: "ERROR_LOG_MANAGER_INTERNAL_ERROR",
}

var ErrCode_value = map[string]int32{
	"ERROR_OK":                           0,
	"ERROR_LOG_MANAGER_FAILED":           101000,
	"ERROR_LOG_MANAGER_PARTIALLY_FAILED": 101001,
	"ERROR_NO_SUCH_CLUSTER":              101002,
	"ERROR_CLUSTER_ID_REQUIRED":          101003,
	"ERROR_CLUSTER_OPERATION_ERROR":      101004,
	"ERROR_LOG_MANAGER_INTERNAL_ERROR":   101005,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{0}
}

type ObtainDataidReq struct {
	AppCode              string   `protobuf:"bytes,1,opt,name=appCode,proto3" json:"appCode,omitempty"`
	AppSecret            string   `protobuf:"bytes,2,opt,name=appSecret,proto3" json:"appSecret,omitempty"`
	UserName             string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	BizID                int32    `protobuf:"varint,4,opt,name=bizID,proto3" json:"bizID,omitempty"`
	DataName             string   `protobuf:"bytes,5,opt,name=dataName,proto3" json:"dataName,omitempty"`
	Maintainers          string   `protobuf:"bytes,6,opt,name=maintainers,proto3" json:"maintainers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObtainDataidReq) Reset()         { *m = ObtainDataidReq{} }
func (m *ObtainDataidReq) String() string { return proto.CompactTextString(m) }
func (*ObtainDataidReq) ProtoMessage()    {}
func (*ObtainDataidReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{0}
}

func (m *ObtainDataidReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObtainDataidReq.Unmarshal(m, b)
}
func (m *ObtainDataidReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObtainDataidReq.Marshal(b, m, deterministic)
}
func (m *ObtainDataidReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObtainDataidReq.Merge(m, src)
}
func (m *ObtainDataidReq) XXX_Size() int {
	return xxx_messageInfo_ObtainDataidReq.Size(m)
}
func (m *ObtainDataidReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ObtainDataidReq.DiscardUnknown(m)
}

var xxx_messageInfo_ObtainDataidReq proto.InternalMessageInfo

func (m *ObtainDataidReq) GetAppCode() string {
	if m != nil {
		return m.AppCode
	}
	return ""
}

func (m *ObtainDataidReq) GetAppSecret() string {
	if m != nil {
		return m.AppSecret
	}
	return ""
}

func (m *ObtainDataidReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ObtainDataidReq) GetBizID() int32 {
	if m != nil {
		return m.BizID
	}
	return 0
}

func (m *ObtainDataidReq) GetDataName() string {
	if m != nil {
		return m.DataName
	}
	return ""
}

func (m *ObtainDataidReq) GetMaintainers() string {
	if m != nil {
		return m.Maintainers
	}
	return ""
}

type ObtainDataidResp struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrName              ErrCode  `protobuf:"varint,2,opt,name=errName,proto3,enum=logmanager.ErrCode" json:"errName,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	DataID               int32    `protobuf:"varint,4,opt,name=dataID,proto3" json:"dataID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObtainDataidResp) Reset()         { *m = ObtainDataidResp{} }
func (m *ObtainDataidResp) String() string { return proto.CompactTextString(m) }
func (*ObtainDataidResp) ProtoMessage()    {}
func (*ObtainDataidResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{1}
}

func (m *ObtainDataidResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObtainDataidResp.Unmarshal(m, b)
}
func (m *ObtainDataidResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObtainDataidResp.Marshal(b, m, deterministic)
}
func (m *ObtainDataidResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObtainDataidResp.Merge(m, src)
}
func (m *ObtainDataidResp) XXX_Size() int {
	return xxx_messageInfo_ObtainDataidResp.Size(m)
}
func (m *ObtainDataidResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ObtainDataidResp.DiscardUnknown(m)
}

var xxx_messageInfo_ObtainDataidResp proto.InternalMessageInfo

func (m *ObtainDataidResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ObtainDataidResp) GetErrName() ErrCode {
	if m != nil {
		return m.ErrName
	}
	return ErrCode_ERROR_OK
}

func (m *ObtainDataidResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ObtainDataidResp) GetDataID() int32 {
	if m != nil {
		return m.DataID
	}
	return 0
}

type CreateCleanStrategyReq struct {
	Default              bool                   `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	AppCode              string                 `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	AppSecret            string                 `protobuf:"bytes,3,opt,name=appSecret,proto3" json:"appSecret,omitempty"`
	UserName             string                 `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	BizID                int32                  `protobuf:"varint,5,opt,name=bizID,proto3" json:"bizID,omitempty"`
	DataID               int32                  `protobuf:"varint,6,opt,name=dataID,proto3" json:"dataID,omitempty"`
	StrategyName         string                 `protobuf:"bytes,7,opt,name=strategyName,proto3" json:"strategyName,omitempty"`
	ResultTableName      string                 `protobuf:"bytes,8,opt,name=resultTableName,proto3" json:"resultTableName,omitempty"`
	JSONConfig           string                 `protobuf:"bytes,9,opt,name=JSONConfig,proto3" json:"JSONConfig,omitempty"`
	Fields               []*CleanStrategyFields `protobuf:"bytes,10,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateCleanStrategyReq) Reset()         { *m = CreateCleanStrategyReq{} }
func (m *CreateCleanStrategyReq) String() string { return proto.CompactTextString(m) }
func (*CreateCleanStrategyReq) ProtoMessage()    {}
func (*CreateCleanStrategyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{2}
}

func (m *CreateCleanStrategyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCleanStrategyReq.Unmarshal(m, b)
}
func (m *CreateCleanStrategyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCleanStrategyReq.Marshal(b, m, deterministic)
}
func (m *CreateCleanStrategyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCleanStrategyReq.Merge(m, src)
}
func (m *CreateCleanStrategyReq) XXX_Size() int {
	return xxx_messageInfo_CreateCleanStrategyReq.Size(m)
}
func (m *CreateCleanStrategyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCleanStrategyReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCleanStrategyReq proto.InternalMessageInfo

func (m *CreateCleanStrategyReq) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *CreateCleanStrategyReq) GetAppCode() string {
	if m != nil {
		return m.AppCode
	}
	return ""
}

func (m *CreateCleanStrategyReq) GetAppSecret() string {
	if m != nil {
		return m.AppSecret
	}
	return ""
}

func (m *CreateCleanStrategyReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CreateCleanStrategyReq) GetBizID() int32 {
	if m != nil {
		return m.BizID
	}
	return 0
}

func (m *CreateCleanStrategyReq) GetDataID() int32 {
	if m != nil {
		return m.DataID
	}
	return 0
}

func (m *CreateCleanStrategyReq) GetStrategyName() string {
	if m != nil {
		return m.StrategyName
	}
	return ""
}

func (m *CreateCleanStrategyReq) GetResultTableName() string {
	if m != nil {
		return m.ResultTableName
	}
	return ""
}

func (m *CreateCleanStrategyReq) GetJSONConfig() string {
	if m != nil {
		return m.JSONConfig
	}
	return ""
}

func (m *CreateCleanStrategyReq) GetFields() []*CleanStrategyFields {
	if m != nil {
		return m.Fields
	}
	return nil
}

type CleanStrategyFields struct {
	FieldName            string   `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	FieldAlias           string   `protobuf:"bytes,2,opt,name=fieldAlias,proto3" json:"fieldAlias,omitempty"`
	FieldType            string   `protobuf:"bytes,3,opt,name=fieldType,proto3" json:"fieldType,omitempty"`
	IsDimension          bool     `protobuf:"varint,4,opt,name=isDimension,proto3" json:"isDimension,omitempty"`
	FieldIndex           int32    `protobuf:"varint,5,opt,name=fieldIndex,proto3" json:"fieldIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanStrategyFields) Reset()         { *m = CleanStrategyFields{} }
func (m *CleanStrategyFields) String() string { return proto.CompactTextString(m) }
func (*CleanStrategyFields) ProtoMessage()    {}
func (*CleanStrategyFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{3}
}

func (m *CleanStrategyFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanStrategyFields.Unmarshal(m, b)
}
func (m *CleanStrategyFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanStrategyFields.Marshal(b, m, deterministic)
}
func (m *CleanStrategyFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanStrategyFields.Merge(m, src)
}
func (m *CleanStrategyFields) XXX_Size() int {
	return xxx_messageInfo_CleanStrategyFields.Size(m)
}
func (m *CleanStrategyFields) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanStrategyFields.DiscardUnknown(m)
}

var xxx_messageInfo_CleanStrategyFields proto.InternalMessageInfo

func (m *CleanStrategyFields) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *CleanStrategyFields) GetFieldAlias() string {
	if m != nil {
		return m.FieldAlias
	}
	return ""
}

func (m *CleanStrategyFields) GetFieldType() string {
	if m != nil {
		return m.FieldType
	}
	return ""
}

func (m *CleanStrategyFields) GetIsDimension() bool {
	if m != nil {
		return m.IsDimension
	}
	return false
}

func (m *CleanStrategyFields) GetFieldIndex() int32 {
	if m != nil {
		return m.FieldIndex
	}
	return 0
}

type CommonResp struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrName              ErrCode  `protobuf:"varint,2,opt,name=errName,proto3,enum=logmanager.ErrCode" json:"errName,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{4}
}

func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (m *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(m, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CommonResp) GetErrName() ErrCode {
	if m != nil {
		return m.ErrName
	}
	return ErrCode_ERROR_OK
}

func (m *CommonResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListLogCollectionTaskReq struct {
	ClusterIDs           string   `protobuf:"bytes,1,opt,name=clusterIDs,proto3" json:"clusterIDs,omitempty"`
	ConfigName           string   `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigNamespace      string   `protobuf:"bytes,3,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLogCollectionTaskReq) Reset()         { *m = ListLogCollectionTaskReq{} }
func (m *ListLogCollectionTaskReq) String() string { return proto.CompactTextString(m) }
func (*ListLogCollectionTaskReq) ProtoMessage()    {}
func (*ListLogCollectionTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{5}
}

func (m *ListLogCollectionTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLogCollectionTaskReq.Unmarshal(m, b)
}
func (m *ListLogCollectionTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLogCollectionTaskReq.Marshal(b, m, deterministic)
}
func (m *ListLogCollectionTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLogCollectionTaskReq.Merge(m, src)
}
func (m *ListLogCollectionTaskReq) XXX_Size() int {
	return xxx_messageInfo_ListLogCollectionTaskReq.Size(m)
}
func (m *ListLogCollectionTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLogCollectionTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListLogCollectionTaskReq proto.InternalMessageInfo

func (m *ListLogCollectionTaskReq) GetClusterIDs() string {
	if m != nil {
		return m.ClusterIDs
	}
	return ""
}

func (m *ListLogCollectionTaskReq) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *ListLogCollectionTaskReq) GetConfigNamespace() string {
	if m != nil {
		return m.ConfigNamespace
	}
	return ""
}

type ListLogCollectionTaskResp struct {
	ErrCode              int32                            `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrName              ErrCode                          `protobuf:"varint,2,opt,name=errName,proto3,enum=logmanager.ErrCode" json:"errName,omitempty"`
	Message              string                           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data                 []*ListLogCollectionTaskRespItem `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ListLogCollectionTaskResp) Reset()         { *m = ListLogCollectionTaskResp{} }
func (m *ListLogCollectionTaskResp) String() string { return proto.CompactTextString(m) }
func (*ListLogCollectionTaskResp) ProtoMessage()    {}
func (*ListLogCollectionTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{6}
}

func (m *ListLogCollectionTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLogCollectionTaskResp.Unmarshal(m, b)
}
func (m *ListLogCollectionTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLogCollectionTaskResp.Marshal(b, m, deterministic)
}
func (m *ListLogCollectionTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLogCollectionTaskResp.Merge(m, src)
}
func (m *ListLogCollectionTaskResp) XXX_Size() int {
	return xxx_messageInfo_ListLogCollectionTaskResp.Size(m)
}
func (m *ListLogCollectionTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLogCollectionTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListLogCollectionTaskResp proto.InternalMessageInfo

func (m *ListLogCollectionTaskResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ListLogCollectionTaskResp) GetErrName() ErrCode {
	if m != nil {
		return m.ErrName
	}
	return ErrCode_ERROR_OK
}

func (m *ListLogCollectionTaskResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListLogCollectionTaskResp) GetData() []*ListLogCollectionTaskRespItem {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListLogCollectionTaskRespItem struct {
	ClusterID            string                     `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Configs              []*LogCollectionTaskConfig `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ListLogCollectionTaskRespItem) Reset()         { *m = ListLogCollectionTaskRespItem{} }
func (m *ListLogCollectionTaskRespItem) String() string { return proto.CompactTextString(m) }
func (*ListLogCollectionTaskRespItem) ProtoMessage()    {}
func (*ListLogCollectionTaskRespItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{7}
}

func (m *ListLogCollectionTaskRespItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLogCollectionTaskRespItem.Unmarshal(m, b)
}
func (m *ListLogCollectionTaskRespItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLogCollectionTaskRespItem.Marshal(b, m, deterministic)
}
func (m *ListLogCollectionTaskRespItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLogCollectionTaskRespItem.Merge(m, src)
}
func (m *ListLogCollectionTaskRespItem) XXX_Size() int {
	return xxx_messageInfo_ListLogCollectionTaskRespItem.Size(m)
}
func (m *ListLogCollectionTaskRespItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLogCollectionTaskRespItem.DiscardUnknown(m)
}

var xxx_messageInfo_ListLogCollectionTaskRespItem proto.InternalMessageInfo

func (m *ListLogCollectionTaskRespItem) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ListLogCollectionTaskRespItem) GetConfigs() []*LogCollectionTaskConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

type LogCollectionTaskConfig struct {
	ConfigName           string                       `protobuf:"bytes,1,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigNamespace      string                       `protobuf:"bytes,2,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
	Config               *LogCollectionTaskConfigSpec `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *LogCollectionTaskConfig) Reset()         { *m = LogCollectionTaskConfig{} }
func (m *LogCollectionTaskConfig) String() string { return proto.CompactTextString(m) }
func (*LogCollectionTaskConfig) ProtoMessage()    {}
func (*LogCollectionTaskConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{8}
}

func (m *LogCollectionTaskConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogCollectionTaskConfig.Unmarshal(m, b)
}
func (m *LogCollectionTaskConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogCollectionTaskConfig.Marshal(b, m, deterministic)
}
func (m *LogCollectionTaskConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogCollectionTaskConfig.Merge(m, src)
}
func (m *LogCollectionTaskConfig) XXX_Size() int {
	return xxx_messageInfo_LogCollectionTaskConfig.Size(m)
}
func (m *LogCollectionTaskConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LogCollectionTaskConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LogCollectionTaskConfig proto.InternalMessageInfo

func (m *LogCollectionTaskConfig) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *LogCollectionTaskConfig) GetConfigNamespace() string {
	if m != nil {
		return m.ConfigNamespace
	}
	return ""
}

func (m *LogCollectionTaskConfig) GetConfig() *LogCollectionTaskConfigSpec {
	if m != nil {
		return m.Config
	}
	return nil
}

type LogCollectionTaskConfigSpec struct {
	ConfigType           string            `protobuf:"bytes,1,opt,name=configType,proto3" json:"configType,omitempty"`
	AppId                string            `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	ClusterId            string            `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Stdout               bool              `protobuf:"varint,4,opt,name=stdout,proto3" json:"stdout,omitempty"`
	StdDataId            string            `protobuf:"bytes,5,opt,name=stdDataId,proto3" json:"stdDataId,omitempty"`
	NonStdDataId         string            `protobuf:"bytes,6,opt,name=nonStdDataId,proto3" json:"nonStdDataId,omitempty"`
	LogPaths             []string          `protobuf:"bytes,7,rep,name=logPaths,proto3" json:"logPaths,omitempty"`
	LogTags              map[string]string `protobuf:"bytes,8,rep,name=logTags,proto3" json:"logTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WorkloadType         string            `protobuf:"bytes,9,opt,name=workloadType,proto3" json:"workloadType,omitempty"`
	WorkloadName         string            `protobuf:"bytes,10,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	WorkloadNamespace    string            `protobuf:"bytes,11,opt,name=workloadNamespace,proto3" json:"workloadNamespace,omitempty"`
	ContainerConfs       []*ContainerConf  `protobuf:"bytes,12,rep,name=containerConfs,proto3" json:"containerConfs,omitempty"`
	PodLabels            bool              `protobuf:"varint,13,opt,name=podLabels,proto3" json:"podLabels,omitempty"`
	Selector             *PodSelector      `protobuf:"bytes,14,opt,name=selector,proto3" json:"selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogCollectionTaskConfigSpec) Reset()         { *m = LogCollectionTaskConfigSpec{} }
func (m *LogCollectionTaskConfigSpec) String() string { return proto.CompactTextString(m) }
func (*LogCollectionTaskConfigSpec) ProtoMessage()    {}
func (*LogCollectionTaskConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{9}
}

func (m *LogCollectionTaskConfigSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogCollectionTaskConfigSpec.Unmarshal(m, b)
}
func (m *LogCollectionTaskConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogCollectionTaskConfigSpec.Marshal(b, m, deterministic)
}
func (m *LogCollectionTaskConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogCollectionTaskConfigSpec.Merge(m, src)
}
func (m *LogCollectionTaskConfigSpec) XXX_Size() int {
	return xxx_messageInfo_LogCollectionTaskConfigSpec.Size(m)
}
func (m *LogCollectionTaskConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_LogCollectionTaskConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_LogCollectionTaskConfigSpec proto.InternalMessageInfo

func (m *LogCollectionTaskConfigSpec) GetConfigType() string {
	if m != nil {
		return m.ConfigType
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetStdout() bool {
	if m != nil {
		return m.Stdout
	}
	return false
}

func (m *LogCollectionTaskConfigSpec) GetStdDataId() string {
	if m != nil {
		return m.StdDataId
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetNonStdDataId() string {
	if m != nil {
		return m.NonStdDataId
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetLogPaths() []string {
	if m != nil {
		return m.LogPaths
	}
	return nil
}

func (m *LogCollectionTaskConfigSpec) GetLogTags() map[string]string {
	if m != nil {
		return m.LogTags
	}
	return nil
}

func (m *LogCollectionTaskConfigSpec) GetWorkloadType() string {
	if m != nil {
		return m.WorkloadType
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetWorkloadName() string {
	if m != nil {
		return m.WorkloadName
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetWorkloadNamespace() string {
	if m != nil {
		return m.WorkloadNamespace
	}
	return ""
}

func (m *LogCollectionTaskConfigSpec) GetContainerConfs() []*ContainerConf {
	if m != nil {
		return m.ContainerConfs
	}
	return nil
}

func (m *LogCollectionTaskConfigSpec) GetPodLabels() bool {
	if m != nil {
		return m.PodLabels
	}
	return false
}

func (m *LogCollectionTaskConfigSpec) GetSelector() *PodSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

type ContainerConf struct {
	ContainerName        string            `protobuf:"bytes,1,opt,name=containerName,proto3" json:"containerName,omitempty"`
	Stdout               bool              `protobuf:"varint,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	StdDataId            string            `protobuf:"bytes,3,opt,name=stdDataId,proto3" json:"stdDataId,omitempty"`
	NonStdDataId         string            `protobuf:"bytes,4,opt,name=nonStdDataId,proto3" json:"nonStdDataId,omitempty"`
	LogPaths             []string          `protobuf:"bytes,5,rep,name=logPaths,proto3" json:"logPaths,omitempty"`
	LogTags              map[string]string `protobuf:"bytes,6,rep,name=logTags,proto3" json:"logTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContainerConf) Reset()         { *m = ContainerConf{} }
func (m *ContainerConf) String() string { return proto.CompactTextString(m) }
func (*ContainerConf) ProtoMessage()    {}
func (*ContainerConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{10}
}

func (m *ContainerConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerConf.Unmarshal(m, b)
}
func (m *ContainerConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerConf.Marshal(b, m, deterministic)
}
func (m *ContainerConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerConf.Merge(m, src)
}
func (m *ContainerConf) XXX_Size() int {
	return xxx_messageInfo_ContainerConf.Size(m)
}
func (m *ContainerConf) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerConf.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerConf proto.InternalMessageInfo

func (m *ContainerConf) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *ContainerConf) GetStdout() bool {
	if m != nil {
		return m.Stdout
	}
	return false
}

func (m *ContainerConf) GetStdDataId() string {
	if m != nil {
		return m.StdDataId
	}
	return ""
}

func (m *ContainerConf) GetNonStdDataId() string {
	if m != nil {
		return m.NonStdDataId
	}
	return ""
}

func (m *ContainerConf) GetLogPaths() []string {
	if m != nil {
		return m.LogPaths
	}
	return nil
}

func (m *ContainerConf) GetLogTags() map[string]string {
	if m != nil {
		return m.LogTags
	}
	return nil
}

type PodSelector struct {
	MatchLabels          map[string]string     `protobuf:"bytes,1,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchExpressions     []*SelectorExpression `protobuf:"bytes,2,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PodSelector) Reset()         { *m = PodSelector{} }
func (m *PodSelector) String() string { return proto.CompactTextString(m) }
func (*PodSelector) ProtoMessage()    {}
func (*PodSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{11}
}

func (m *PodSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodSelector.Unmarshal(m, b)
}
func (m *PodSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodSelector.Marshal(b, m, deterministic)
}
func (m *PodSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodSelector.Merge(m, src)
}
func (m *PodSelector) XXX_Size() int {
	return xxx_messageInfo_PodSelector.Size(m)
}
func (m *PodSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_PodSelector.DiscardUnknown(m)
}

var xxx_messageInfo_PodSelector proto.InternalMessageInfo

func (m *PodSelector) GetMatchLabels() map[string]string {
	if m != nil {
		return m.MatchLabels
	}
	return nil
}

func (m *PodSelector) GetMatchExpressions() []*SelectorExpression {
	if m != nil {
		return m.MatchExpressions
	}
	return nil
}

type SelectorExpression struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator             string   `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelectorExpression) Reset()         { *m = SelectorExpression{} }
func (m *SelectorExpression) String() string { return proto.CompactTextString(m) }
func (*SelectorExpression) ProtoMessage()    {}
func (*SelectorExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{12}
}

func (m *SelectorExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectorExpression.Unmarshal(m, b)
}
func (m *SelectorExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectorExpression.Marshal(b, m, deterministic)
}
func (m *SelectorExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectorExpression.Merge(m, src)
}
func (m *SelectorExpression) XXX_Size() int {
	return xxx_messageInfo_SelectorExpression.Size(m)
}
func (m *SelectorExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectorExpression.DiscardUnknown(m)
}

var xxx_messageInfo_SelectorExpression proto.InternalMessageInfo

func (m *SelectorExpression) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SelectorExpression) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *SelectorExpression) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type CreateLogCollectionTaskReq struct {
	ClusterIDs           string                   `protobuf:"bytes,1,opt,name=clusterIDs,proto3" json:"clusterIDs,omitempty"`
	Config               *LogCollectionTaskConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CreateLogCollectionTaskReq) Reset()         { *m = CreateLogCollectionTaskReq{} }
func (m *CreateLogCollectionTaskReq) String() string { return proto.CompactTextString(m) }
func (*CreateLogCollectionTaskReq) ProtoMessage()    {}
func (*CreateLogCollectionTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{13}
}

func (m *CreateLogCollectionTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLogCollectionTaskReq.Unmarshal(m, b)
}
func (m *CreateLogCollectionTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLogCollectionTaskReq.Marshal(b, m, deterministic)
}
func (m *CreateLogCollectionTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLogCollectionTaskReq.Merge(m, src)
}
func (m *CreateLogCollectionTaskReq) XXX_Size() int {
	return xxx_messageInfo_CreateLogCollectionTaskReq.Size(m)
}
func (m *CreateLogCollectionTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLogCollectionTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLogCollectionTaskReq proto.InternalMessageInfo

func (m *CreateLogCollectionTaskReq) GetClusterIDs() string {
	if m != nil {
		return m.ClusterIDs
	}
	return ""
}

func (m *CreateLogCollectionTaskReq) GetConfig() *LogCollectionTaskConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type DeleteLogCollectionTaskReq struct {
	ClusterIDs           string   `protobuf:"bytes,1,opt,name=clusterIDs,proto3" json:"clusterIDs,omitempty"`
	ConfigName           string   `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigNamespace      string   `protobuf:"bytes,3,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLogCollectionTaskReq) Reset()         { *m = DeleteLogCollectionTaskReq{} }
func (m *DeleteLogCollectionTaskReq) String() string { return proto.CompactTextString(m) }
func (*DeleteLogCollectionTaskReq) ProtoMessage()    {}
func (*DeleteLogCollectionTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{14}
}

func (m *DeleteLogCollectionTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLogCollectionTaskReq.Unmarshal(m, b)
}
func (m *DeleteLogCollectionTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLogCollectionTaskReq.Marshal(b, m, deterministic)
}
func (m *DeleteLogCollectionTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLogCollectionTaskReq.Merge(m, src)
}
func (m *DeleteLogCollectionTaskReq) XXX_Size() int {
	return xxx_messageInfo_DeleteLogCollectionTaskReq.Size(m)
}
func (m *DeleteLogCollectionTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLogCollectionTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLogCollectionTaskReq proto.InternalMessageInfo

func (m *DeleteLogCollectionTaskReq) GetClusterIDs() string {
	if m != nil {
		return m.ClusterIDs
	}
	return ""
}

func (m *DeleteLogCollectionTaskReq) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *DeleteLogCollectionTaskReq) GetConfigNamespace() string {
	if m != nil {
		return m.ConfigNamespace
	}
	return ""
}

type CollectionTaskCommonResp struct {
	ErrCode              int32                     `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrName              ErrCode                   `protobuf:"varint,2,opt,name=errName,proto3,enum=logmanager.ErrCode" json:"errName,omitempty"`
	Message              string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ErrResult            []*ClusterDimensionalResp `protobuf:"bytes,4,rep,name=errResult,proto3" json:"errResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CollectionTaskCommonResp) Reset()         { *m = CollectionTaskCommonResp{} }
func (m *CollectionTaskCommonResp) String() string { return proto.CompactTextString(m) }
func (*CollectionTaskCommonResp) ProtoMessage()    {}
func (*CollectionTaskCommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{15}
}

func (m *CollectionTaskCommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionTaskCommonResp.Unmarshal(m, b)
}
func (m *CollectionTaskCommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionTaskCommonResp.Marshal(b, m, deterministic)
}
func (m *CollectionTaskCommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionTaskCommonResp.Merge(m, src)
}
func (m *CollectionTaskCommonResp) XXX_Size() int {
	return xxx_messageInfo_CollectionTaskCommonResp.Size(m)
}
func (m *CollectionTaskCommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionTaskCommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionTaskCommonResp proto.InternalMessageInfo

func (m *CollectionTaskCommonResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CollectionTaskCommonResp) GetErrName() ErrCode {
	if m != nil {
		return m.ErrName
	}
	return ErrCode_ERROR_OK
}

func (m *CollectionTaskCommonResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CollectionTaskCommonResp) GetErrResult() []*ClusterDimensionalResp {
	if m != nil {
		return m.ErrResult
	}
	return nil
}

type ClusterDimensionalResp struct {
	ClusterID            string   `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ErrCode              int32    `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrName              ErrCode  `protobuf:"varint,3,opt,name=errName,proto3,enum=logmanager.ErrCode" json:"errName,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterDimensionalResp) Reset()         { *m = ClusterDimensionalResp{} }
func (m *ClusterDimensionalResp) String() string { return proto.CompactTextString(m) }
func (*ClusterDimensionalResp) ProtoMessage()    {}
func (*ClusterDimensionalResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c223b60240bbb1, []int{16}
}

func (m *ClusterDimensionalResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterDimensionalResp.Unmarshal(m, b)
}
func (m *ClusterDimensionalResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterDimensionalResp.Marshal(b, m, deterministic)
}
func (m *ClusterDimensionalResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterDimensionalResp.Merge(m, src)
}
func (m *ClusterDimensionalResp) XXX_Size() int {
	return xxx_messageInfo_ClusterDimensionalResp.Size(m)
}
func (m *ClusterDimensionalResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterDimensionalResp.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterDimensionalResp proto.InternalMessageInfo

func (m *ClusterDimensionalResp) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *ClusterDimensionalResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ClusterDimensionalResp) GetErrName() ErrCode {
	if m != nil {
		return m.ErrName
	}
	return ErrCode_ERROR_OK
}

func (m *ClusterDimensionalResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("logmanager.ErrCode", ErrCode_name, ErrCode_value)
	proto.RegisterType((*ObtainDataidReq)(nil), "logmanager.ObtainDataidReq")
	proto.RegisterType((*ObtainDataidResp)(nil), "logmanager.ObtainDataidResp")
	proto.RegisterType((*CreateCleanStrategyReq)(nil), "logmanager.CreateCleanStrategyReq")
	proto.RegisterType((*CleanStrategyFields)(nil), "logmanager.CleanStrategyFields")
	proto.RegisterType((*CommonResp)(nil), "logmanager.CommonResp")
	proto.RegisterType((*ListLogCollectionTaskReq)(nil), "logmanager.ListLogCollectionTaskReq")
	proto.RegisterType((*ListLogCollectionTaskResp)(nil), "logmanager.ListLogCollectionTaskResp")
	proto.RegisterType((*ListLogCollectionTaskRespItem)(nil), "logmanager.ListLogCollectionTaskRespItem")
	proto.RegisterType((*LogCollectionTaskConfig)(nil), "logmanager.LogCollectionTaskConfig")
	proto.RegisterType((*LogCollectionTaskConfigSpec)(nil), "logmanager.LogCollectionTaskConfigSpec")
	proto.RegisterMapType((map[string]string)(nil), "logmanager.LogCollectionTaskConfigSpec.LogTagsEntry")
	proto.RegisterType((*ContainerConf)(nil), "logmanager.ContainerConf")
	proto.RegisterMapType((map[string]string)(nil), "logmanager.ContainerConf.LogTagsEntry")
	proto.RegisterType((*PodSelector)(nil), "logmanager.PodSelector")
	proto.RegisterMapType((map[string]string)(nil), "logmanager.PodSelector.MatchLabelsEntry")
	proto.RegisterType((*SelectorExpression)(nil), "logmanager.SelectorExpression")
	proto.RegisterType((*CreateLogCollectionTaskReq)(nil), "logmanager.CreateLogCollectionTaskReq")
	proto.RegisterType((*DeleteLogCollectionTaskReq)(nil), "logmanager.DeleteLogCollectionTaskReq")
	proto.RegisterType((*CollectionTaskCommonResp)(nil), "logmanager.CollectionTaskCommonResp")
	proto.RegisterType((*ClusterDimensionalResp)(nil), "logmanager.ClusterDimensionalResp")
}

func init() { proto.RegisterFile("logmanager.proto", fileDescriptor_12c223b60240bbb1) }

var fileDescriptor_12c223b60240bbb1 = []byte{
	// 2854 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0x5b, 0x6f, 0x1b, 0xc7,
	0x15, 0xee, 0x52, 0x12, 0x45, 0x8d, 0x98, 0x98, 0x19, 0x47, 0xd6, 0x86, 0xf2, 0x85, 0x5d, 0x5f,
	0xa2, 0x6c, 0x6c, 0x29, 0x9e, 0x18, 0x41, 0xa0, 0x34, 0x4d, 0x96, 0xa2, 0x94, 0x32, 0xa1, 0x25,
	0x67, 0xa5, 0x34, 0x68, 0x0a, 0x54, 0x58, 0x91, 0x1b, 0x9a, 0x31, 0xc5, 0x65, 0xb8, 0x54, 0x6c,
	0xb7, 0x68, 0xa1, 0xa4, 0xb6, 0x65, 0x2b, 0x12, 0x1c, 0xac, 0x25, 0x3b, 0x56, 0x1c, 0xc7, 0x36,
	0xec, 0x44, 0x48, 0x61, 0x29, 0x69, 0xd2, 0x58, 0x96, 0x2c, 0xbb, 0x0f, 0x7d, 0x28, 0xd0, 0x3e,
	0xb4, 0xea, 0x5f, 0xe0, 0xf2, 0x02, 0x14, 0x08, 0x8a, 0xa2, 0x0f, 0x7d, 0x2b, 0x76, 0x66, 0xaf,
	0xbc, 0x58, 0x72, 0xe3, 0x02, 0xf5, 0x13, 0x39, 0xdf, 0x39, 0x73, 0x6e, 0x73, 0xe6, 0xcc, 0x99,
	0x21, 0x81, 0x2f, 0x29, 0xc5, 0x47, 0x84, 0x94, 0x10, 0x17, 0x33, 0x1d, 0xe9, 0x8c, 0x94, 0x95,
	0x20, 0xb0, 0x10, 0xff, 0xe6, 0xb8, 0x24, 0xc5, 0x93, 0x62, 0xa7, 0x90, 0x4e, 0x74, 0x0a, 0xa9,
	0x94, 0x94, 0x15, 0xb2, 0x09, 0x29, 0x25, 0x13, 0x4e, 0xff, 0x6e, 0xfc, 0x11, 0xdd, 0x13, 0x17,
	0x53, 0x7b, 0xe4, 0xc3, 0x42, 0x3c, 0x2e, 0x66, 0x3a, 0xa5, 0x34, 0xe6, 0xa8, 0xe4, 0x66, 0x96,
	0x1b, 0xc0, 0x86, 0xfe, 0xe1, 0xac, 0x90, 0x48, 0x85, 0x84, 0xac, 0x90, 0x88, 0xf1, 0xe2, 0xdb,
	0xf0, 0x59, 0xd0, 0x28, 0xa4, 0xd3, 0xdd, 0x52, 0x4c, 0xa4, 0xa9, 0x00, 0xd5, 0xde, 0x14, 0xdc,
	0xaa, 0x70, 0x6d, 0xac, 0x81, 0x21, 0x5f, 0xf1, 0xcc, 0xc7, 0xa5, 0xdf, 0x2e, 0xaa, 0x4b, 0xd3,
	0x85, 0xe9, 0x39, 0x0d, 0xe1, 0x0d, 0x12, 0xec, 0x05, 0x4d, 0x42, 0x3a, 0x3d, 0x20, 0x46, 0x33,
	0x62, 0x96, 0x76, 0xe1, 0xb9, 0xed, 0x0a, 0xb7, 0x93, 0xb5, 0x50, 0x44, 0xdb, 0x67, 0x13, 0x4c,
	0x5d, 0x38, 0x51, 0x52, 0xae, 0xf1, 0x16, 0x13, 0xdc, 0x07, 0x3c, 0xa3, 0xb2, 0x98, 0xe9, 0x13,
	0x46, 0x44, 0xba, 0x0e, 0x8b, 0xa1, 0x15, 0xae, 0x85, 0x35, 0x41, 0xd4, 0x54, 0x5c, 0xb8, 0x91,
	0xff, 0xf2, 0xbd, 0xe2, 0xd8, 0x71, 0xde, 0x04, 0x61, 0x07, 0x68, 0x18, 0x4e, 0xfc, 0x3c, 0x1c,
	0xa2, 0xeb, 0x03, 0x54, 0x7b, 0x03, 0x99, 0x42, 0x10, 0xe4, 0xed, 0xde, 0x1f, 0x0a, 0xe6, 0x16,
	0x67, 0xd5, 0x89, 0xcb, 0xe1, 0x10, 0x4f, 0x40, 0x28, 0x00, 0x4f, 0x4c, 0xc8, 0x0a, 0x58, 0x4b,
	0x03, 0xd6, 0xd2, 0xa3, 0x70, 0x41, 0xd6, 0x04, 0xd1, 0x33, 0xf9, 0x99, 0x2f, 0xf2, 0x53, 0xf3,
	0xea, 0x07, 0x53, 0x85, 0xcf, 0xbe, 0xf8, 0xf6, 0xd6, 0xa4, 0x7a, 0x7a, 0x21, 0xb7, 0x72, 0xa7,
	0x30, 0x3d, 0x97, 0x5b, 0x7c, 0x5f, 0x3d, 0xa9, 0x14, 0x96, 0xee, 0x7c, 0x7b, 0x6b, 0x32, 0xb7,
	0x38, 0x65, 0xe2, 0x85, 0x4f, 0xae, 0x17, 0x96, 0xee, 0xf0, 0xa6, 0x04, 0x28, 0x80, 0xe6, 0x11,
	0x21, 0x91, 0xd2, 0xe2, 0x2b, 0x66, 0x64, 0xda, 0x8d, 0xb5, 0xbc, 0xa0, 0x70, 0x3f, 0x60, 0xed,
	0x38, 0xda, 0x53, 0x58, 0xfe, 0x3a, 0x3f, 0x71, 0xb5, 0x38, 0x76, 0x5c, 0xd3, 0x72, 0x75, 0x36,
	0xb7, 0xf8, 0xb9, 0x89, 0x10, 0xc9, 0xa5, 0xb1, 0x73, 0xea, 0xe9, 0x1b, 0xea, 0xc9, 0x13, 0xa5,
	0xd9, 0x69, 0xde, 0x3e, 0xb7, 0xeb, 0xdf, 0x94, 0xc2, 0xfd, 0x8b, 0x02, 0x03, 0x6c, 0xf9, 0x3a,
	0x22, 0x6f, 0x61, 0xfa, 0xab, 0xe2, 0xc2, 0x0d, 0x0d, 0x08, 0x87, 0x56, 0x29, 0x63, 0x95, 0x56,
	0x29, 0x2b, 0xd2, 0xab, 0x94, 0x19, 0xbe, 0x55, 0x8a, 0x84, 0x65, 0x95, 0xb2, 0x02, 0xf0, 0x31,
	0x05, 0x67, 0xa9, 0x5f, 0x30, 0xfa, 0x44, 0xa6, 0x2b, 0xc0, 0x0c, 0x47, 0x65, 0x66, 0x77, 0x80,
	0x31, 0x05, 0x68, 0xd8, 0x91, 0x23, 0x47, 0x34, 0xcc, 0x10, 0x64, 0x83, 0xb0, 0x40, 0xa6, 0x2b,
	0xb0, 0x17, 0x3d, 0xbd, 0x3b, 0xc0, 0x18, 0x62, 0x75, 0x39, 0x43, 0x49, 0x29, 0x3e, 0x94, 0x15,
	0xe5, 0xac, 0xc6, 0x69, 0xf3, 0x08, 0xcf, 0x4f, 0x08, 0xd2, 0x48, 0x22, 0x15, 0xdf, 0xad, 0x7d,
	0x39, 0x38, 0x2a, 0xe8, 0xdf, 0x0e, 0x1b, 0x5f, 0x0e, 0x4a, 0xa9, 0x38, 0xf3, 0x4b, 0xe6, 0x9f,
	0x14, 0xf0, 0x39, 0xbd, 0x96, 0xd3, 0x70, 0x2f, 0x68, 0x14, 0x33, 0x19, 0x33, 0x7d, 0x1b, 0x82,
	0xad, 0x0a, 0xf7, 0x28, 0x6b, 0x60, 0xa8, 0xa9, 0x34, 0x7d, 0xbe, 0xb8, 0xb0, 0x50, 0xb8, 0xf4,
	0x2e, 0x6f, 0x60, 0x30, 0x8c, 0xa7, 0xe0, 0x44, 0xd0, 0xb2, 0xf6, 0x61, 0xb4, 0xb1, 0xc3, 0xb6,
	0x03, 0x7b, 0x08, 0x57, 0xd0, 0xaf, 0x70, 0xad, 0xac, 0xc1, 0x88, 0xbc, 0x44, 0x0e, 0x49, 0x0e,
	0xde, 0x80, 0xe1, 0x3e, 0xd0, 0x38, 0x22, 0xca, 0xb2, 0x10, 0x37, 0x32, 0x97, 0xcc, 0xd2, 0x31,
	0x63, 0x56, 0xee, 0xce, 0xe5, 0xfc, 0xbb, 0x0b, 0xbc, 0x01, 0xc3, 0x27, 0x81, 0x3b, 0x86, 0x97,
	0x49, 0xcf, 0xdd, 0x8d, 0x0a, 0xe7, 0x63, 0x75, 0x08, 0xe9, 0x9f, 0xbc, 0xfe, 0xc9, 0x7c, 0xe6,
	0x06, 0x9b, 0xba, 0x33, 0xa2, 0x90, 0x15, 0xbb, 0x93, 0xa2, 0x90, 0x1a, 0xc8, 0x66, 0x84, 0xac,
	0x18, 0x3f, 0xaa, 0x6d, 0xdd, 0x08, 0x68, 0x8c, 0x89, 0x6f, 0x0a, 0xa3, 0xc9, 0x2c, 0xf6, 0xdd,
	0x13, 0x44, 0x0a, 0xd7, 0xc9, 0x1a, 0x18, 0xda, 0xa1, 0x27, 0xd3, 0xf2, 0x87, 0xc5, 0xf9, 0xab,
	0xea, 0xfc, 0x4d, 0xf5, 0xfc, 0x5c, 0xfe, 0xdc, 0x35, 0xf5, 0xce, 0xb9, 0xfc, 0xe2, 0xf1, 0xfc,
	0xd7, 0xe7, 0x0a, 0xd7, 0xcf, 0x16, 0x66, 0xae, 0xf1, 0x06, 0xbb, 0xbd, 0x10, 0xb8, 0xbe, 0x43,
	0x21, 0xa8, 0xbb, 0x3f, 0x85, 0xa0, 0xfe, 0xde, 0x0b, 0x41, 0xc3, 0xfa, 0x0a, 0xc1, 0x1e, 0x33,
	0xfa, 0x6e, 0x3c, 0xa1, 0x45, 0xe1, 0xa0, 0x19, 0x7d, 0x0f, 0x29, 0x02, 0x56, 0xfc, 0x61, 0x37,
	0xf0, 0xca, 0x7a, 0xcc, 0xb1, 0x61, 0x8d, 0xd8, 0xb0, 0x6d, 0x0a, 0xb7, 0x99, 0x75, 0x10, 0x90,
	0x97, 0x04, 0x54, 0x4f, 0x11, 0x07, 0x0d, 0xf6, 0x83, 0x0d, 0x19, 0x51, 0x1e, 0x4d, 0x66, 0x07,
	0x85, 0xe1, 0xa4, 0x88, 0xe5, 0x78, 0xb0, 0x9c, 0x9d, 0x0a, 0xc7, 0xb0, 0xe5, 0x34, 0xb4, 0x81,
	0xac, 0x50, 0xf1, 0xf2, 0x9c, 0x2e, 0xad, 0x9c, 0x03, 0x3e, 0x0f, 0xc0, 0xcb, 0x03, 0xfd, 0x7d,
	0xdd, 0x52, 0xea, 0xcd, 0x44, 0x9c, 0x6e, 0xc2, 0xb2, 0xb6, 0x28, 0x9c, 0x9f, 0xb5, 0xc1, 0xc8,
	0x4b, 0xc4, 0x94, 0x8e, 0x4f, 0x15, 0x56, 0xe6, 0x79, 0x1b, 0x05, 0xfe, 0x0c, 0xb8, 0xdf, 0x4c,
	0x88, 0xc9, 0x98, 0x4c, 0x83, 0x40, 0x5d, 0x7b, 0x33, 0xda, 0x66, 0xdf, 0x01, 0x8e, 0x3c, 0xeb,
	0xc5, 0x6c, 0xc4, 0x4e, 0x7d, 0x0e, 0xa2, 0x4d, 0xf3, 0x0a, 0xb3, 0xc7, 0xd4, 0xeb, 0xe7, 0xf2,
	0xf3, 0xbf, 0x53, 0xe7, 0x67, 0x73, 0x37, 0x4f, 0xf1, 0x3a, 0x47, 0x97, 0xac, 0x70, 0x69, 0x90,
	0x62, 0x6b, 0x24, 0x2e, 0xa2, 0xf3, 0x67, 0xbf, 0x50, 0xaf, 0x5c, 0x24, 0xb1, 0xb6, 0x67, 0xe3,
	0x2a, 0x65, 0xa4, 0xe3, 0x3d, 0x54, 0x30, 0x63, 0xa7, 0xfc, 0xc3, 0x05, 0x36, 0x56, 0xb1, 0x1d,
	0xbe, 0x08, 0x9a, 0xb0, 0x59, 0x38, 0xec, 0xe4, 0x8c, 0x63, 0x14, 0x6e, 0x1b, 0x6b, 0xa1, 0x08,
	0x5a, 0x01, 0x27, 0xee, 0x7c, 0x30, 0xc5, 0x5b, 0x64, 0x18, 0x06, 0x00, 0x0f, 0xb8, 0x64, 0x42,
	0x90, 0xf5, 0xdd, 0xf1, 0x84, 0xc2, 0xed, 0x62, 0x6d, 0xb0, 0x2d, 0x2a, 0x44, 0x46, 0x6e, 0xf1,
	0x7a, 0xfe, 0xec, 0xb8, 0x26, 0xc9, 0xc6, 0x05, 0xbb, 0x75, 0x63, 0x06, 0x8f, 0xa6, 0x8d, 0x9a,
	0x81, 0x63, 0x6b, 0xa1, 0xa8, 0xa5, 0x4c, 0x50, 0xe1, 0xcb, 0x65, 0xf5, 0xe2, 0xfb, 0xbc, 0xc5,
	0x01, 0xc3, 0xa0, 0x39, 0x21, 0x87, 0x12, 0x23, 0x62, 0x4a, 0x4e, 0x48, 0x29, 0xbc, 0x57, 0x3c,
	0xc1, 0xc7, 0x15, 0x6e, 0x07, 0x6b, 0xc7, 0x51, 0x0b, 0x99, 0x9f, 0xff, 0x70, 0x41, 0xfd, 0xe0,
	0xd3, 0xdc, 0xe2, 0x52, 0x61, 0xf9, 0x6b, 0x75, 0xe9, 0x53, 0xde, 0xce, 0xa3, 0x25, 0x12, 0x96,
	0x1b, 0x4e, 0xc5, 0xc4, 0x23, 0xfa, 0x16, 0x22, 0x89, 0x64, 0xc1, 0xc8, 0xab, 0x47, 0x65, 0xe9,
	0xb4, 0x7a, 0xfa, 0x06, 0x6f, 0xa3, 0x30, 0xbf, 0xa7, 0x00, 0xe8, 0x96, 0x46, 0x46, 0xa4, 0xd4,
	0x83, 0x5a, 0x8d, 0x99, 0x99, 0x3a, 0x40, 0x47, 0x12, 0x72, 0x36, 0x22, 0xc5, 0xbb, 0xa5, 0x64,
	0x52, 0x8c, 0x6a, 0x1d, 0xd3, 0xa0, 0x20, 0x1f, 0xd2, 0x4a, 0xec, 0x61, 0x00, 0xa2, 0xc9, 0x51,
	0x39, 0x2b, 0x66, 0xc2, 0x21, 0x59, 0x4f, 0x9e, 0xd7, 0x15, 0x6e, 0x90, 0xb5, 0xc1, 0xa8, 0xb7,
	0xf4, 0xd1, 0x89, 0xc2, 0xed, 0xab, 0xe1, 0xd0, 0xb7, 0xb7, 0x26, 0xed, 0x47, 0x37, 0x39, 0xdb,
	0x6d, 0xc4, 0xdc, 0xe2, 0x54, 0x7e, 0x72, 0x5c, 0x9d, 0x9f, 0x25, 0x35, 0x39, 0xb7, 0xb8, 0x94,
	0x3f, 0x35, 0x96, 0xbf, 0x70, 0x8a, 0xb0, 0xf0, 0x36, 0x99, 0x5a, 0xca, 0x45, 0xf1, 0x5e, 0x35,
	0x23, 0x63, 0xa4, 0x9c, 0x05, 0x23, 0x9a, 0xd4, 0xf3, 0xd2, 0xf8, 0x78, 0xe9, 0xa3, 0x13, 0xb9,
	0xe5, 0x65, 0x75, 0xe2, 0xb2, 0x1e, 0x13, 0x1b, 0x17, 0xcc, 0x82, 0x0d, 0xd6, 0x48, 0x4e, 0x0b,
	0x51, 0x23, 0x3c, 0x2f, 0x2b, 0xdc, 0x4b, 0x6c, 0x39, 0x0d, 0xed, 0xab, 0x14, 0x6a, 0x12, 0xf5,
	0x0e, 0xe8, 0xf2, 0x6f, 0x4c, 0x07, 0xf4, 0xed, 0xca, 0x97, 0x8b, 0xe9, 0xd2, 0xfa, 0x1e, 0xd0,
	0xc5, 0xd6, 0x0c, 0x2d, 0xda, 0x9a, 0xff, 0xe4, 0x5a, 0x71, 0xe1, 0x4a, 0x15, 0x17, 0x4e, 0x6a,
	0xb9, 0xcf, 0x7c, 0xe5, 0x02, 0x8f, 0xd5, 0x98, 0xfc, 0x80, 0x9e, 0xfb, 0xc3, 0xa0, 0x5e, 0x2b,
	0x55, 0x74, 0x3d, 0xae, 0xb9, 0x4f, 0xd8, 0xb5, 0xd7, 0x74, 0x34, 0x9c, 0x15, 0x47, 0x82, 0xdb,
	0x15, 0x2e, 0xc0, 0xe2, 0xb9, 0x55, 0x97, 0x1c, 0xc7, 0x8b, 0xc7, 0x74, 0xe6, 0x36, 0x05, 0xb6,
	0xdc, 0x55, 0x18, 0x7c, 0x06, 0x34, 0x99, 0x79, 0xa6, 0x67, 0x34, 0x3e, 0x33, 0x2d, 0x14, 0x79,
	0x8c, 0x9c, 0xe5, 0x2d, 0x10, 0x8a, 0xa0, 0x91, 0xac, 0xb1, 0x56, 0x01, 0x35, 0x07, 0xb6, 0x3b,
	0x1c, 0x28, 0xd7, 0x47, 0x4e, 0x9a, 0xe0, 0x2e, 0x85, 0xdb, 0xce, 0x1a, 0x13, 0xef, 0x62, 0xbd,
	0xc1, 0xc2, 0x7c, 0xe2, 0x02, 0xad, 0x35, 0x84, 0xc1, 0x5e, 0xc7, 0xa6, 0x20, 0xb6, 0xaf, 0xad,
	0xa0, 0x72, 0x47, 0x0c, 0x54, 0xee, 0x08, 0xdb, 0x0e, 0x33, 0x85, 0xb5, 0xdd, 0x65, 0x27, 0x54,
	0x24, 0x3c, 0x8c, 0x03, 0x37, 0x81, 0x70, 0x4a, 0x34, 0xa3, 0xc7, 0xd7, 0x11, 0x9e, 0x81, 0xb4,
	0x18, 0x5d, 0xdb, 0x83, 0xe2, 0xc2, 0xa7, 0xf9, 0x5f, 0x1f, 0xe7, 0x75, 0xf1, 0xcc, 0x57, 0x4d,
	0xa0, 0xed, 0x2e, 0xf2, 0xac, 0xd2, 0x81, 0xcf, 0x18, 0xaa, 0xa2, 0x74, 0xe0, 0x43, 0xa6, 0x8a,
	0x1a, 0xfd, 0x9c, 0xb1, 0x71, 0x41, 0x16, 0x34, 0x08, 0xe9, 0x74, 0x38, 0xa6, 0x87, 0xe7, 0x51,
	0x85, 0x7b, 0x84, 0x25, 0x08, 0xf2, 0x90, 0xbe, 0x2a, 0x11, 0xe3, 0x09, 0x60, 0xcf, 0xab, 0x98,
	0xfd, 0x1e, 0x67, 0xa1, 0x46, 0x5e, 0x25, 0x62, 0x56, 0x5e, 0xc5, 0x60, 0x18, 0xb8, 0xe5, 0x6c,
	0x4c, 0x1a, 0xcd, 0xea, 0xe7, 0xd8, 0x5e, 0x85, 0xeb, 0x60, 0x75, 0x08, 0xed, 0x20, 0x87, 0x57,
	0x69, 0x6c, 0xb6, 0x78, 0x67, 0x3c, 0x7f, 0x69, 0x5c, 0x1d, 0x3f, 0x51, 0xbc, 0x7d, 0x46, 0x1d,
	0x5f, 0x22, 0x86, 0x13, 0x27, 0x78, 0x9d, 0x5b, 0x6b, 0x44, 0xe5, 0x6c, 0x0c, 0x5f, 0x81, 0x62,
	0xfa, 0x25, 0x8f, 0x34, 0xa2, 0x26, 0x8a, 0xe8, 0x4a, 0x21, 0x31, 0x72, 0x9b, 0xb0, 0x98, 0x20,
	0x0f, 0xbc, 0x29, 0x29, 0x35, 0x60, 0x8a, 0x22, 0x37, 0xb9, 0x0e, 0x85, 0x7b, 0x92, 0x75, 0x10,
	0x50, 0x5b, 0xe9, 0xe3, 0x8b, 0x35, 0x05, 0x3a, 0x58, 0xe1, 0x4f, 0x81, 0x27, 0x29, 0xc5, 0x0f,
	0x08, 0xd9, 0x83, 0x32, 0xdd, 0x18, 0xa8, 0x33, 0x6e, 0x86, 0x26, 0x88, 0x9e, 0xd2, 0x9b, 0xf3,
	0xb3, 0xe3, 0xb9, 0xe5, 0x6f, 0xf2, 0xa7, 0xc6, 0xd4, 0x0b, 0x73, 0x85, 0x8f, 0xe6, 0xd5, 0x95,
	0x19, 0xed, 0x96, 0xb8, 0x70, 0x53, 0x5d, 0x9a, 0x2e, 0x53, 0xc6, 0x9b, 0x73, 0xe1, 0x51, 0xd0,
	0x98, 0x94, 0xe2, 0x83, 0x42, 0x5c, 0xa6, 0x3d, 0x78, 0x6f, 0xee, 0x5b, 0x67, 0xf2, 0x69, 0x34,
	0x6d, 0x5a, 0x4f, 0x2a, 0x9b, 0x39, 0xaa, 0xa7, 0xbf, 0x2e, 0x09, 0xb5, 0xe5, 0x16, 0x27, 0xf2,
	0x13, 0xd7, 0x8a, 0xe3, 0x9f, 0x93, 0xee, 0xae, 0x74, 0xfe, 0x98, 0x3a, 0x71, 0x89, 0x34, 0x6d,
	0xbc, 0xc1, 0xa5, 0xf5, 0xc7, 0x87, 0xa5, 0xcc, 0xa1, 0xa4, 0x24, 0x90, 0x9e, 0xa6, 0xc9, 0xd6,
	0x1f, 0xdb, 0x09, 0xc8, 0x31, 0xe2, 0x1d, 0x23, 0xbb, 0x10, 0xbc, 0xb5, 0x41, 0x15, 0x21, 0xa4,
	0x1e, 0xdb, 0x47, 0xbc, 0x63, 0x04, 0x5f, 0x07, 0x8f, 0xd8, 0xc7, 0x64, 0x5f, 0x37, 0x5b, 0xe9,
	0x5f, 0x49, 0x45, 0x95, 0x10, 0x5f, 0x09, 0xc1, 0x34, 0x78, 0x38, 0x2a, 0xe9, 0x17, 0x56, 0x2d,
	0x74, 0x32, 0xed, 0xc5, 0x41, 0x7e, 0xcc, 0xd1, 0x35, 0xdb, 0x39, 0x82, 0x7b, 0x14, 0x8e, 0x65,
	0xcb, 0x66, 0x21, 0xda, 0x7e, 0x09, 0x23, 0xa9, 0xa2, 0xf7, 0xe6, 0x65, 0x9c, 0x5a, 0x97, 0x98,
	0x96, 0x62, 0x11, 0x61, 0x58, 0x4c, 0xca, 0xf4, 0x43, 0x78, 0x5b, 0x90, 0x2e, 0xd1, 0x44, 0x51,
	0x8b, 0xd1, 0xd6, 0x69, 0x6b, 0x94, 0x96, 0x62, 0x81, 0xa4, 0x86, 0xf3, 0x16, 0x07, 0x3c, 0x00,
	0x3c, 0xb2, 0xa8, 0xad, 0xba, 0x94, 0xa1, 0x1f, 0xc6, 0x25, 0xa9, 0xd5, 0x6e, 0xf0, 0x01, 0x29,
	0x36, 0xa0, 0x93, 0x83, 0x6d, 0x0a, 0x47, 0xb3, 0x26, 0x37, 0xf2, 0x6a, 0xf2, 0x8c, 0x11, 0x6f,
	0xe2, 0xfe, 0x2e, 0xe0, 0xb5, 0xe7, 0x0b, 0xf4, 0x81, 0xba, 0x43, 0xe2, 0x51, 0x52, 0x62, 0x78,
	0xed, 0x2b, 0x7c, 0x14, 0x34, 0xbc, 0x23, 0x24, 0x47, 0xf5, 0x7a, 0xca, 0x93, 0x41, 0x97, 0xeb,
	0x59, 0x8a, 0xf9, 0x43, 0x3d, 0x78, 0xc8, 0x11, 0x23, 0xd8, 0x0b, 0x1e, 0x32, 0xdd, 0xb6, 0x15,
	0xf4, 0x80, 0xc2, 0x6d, 0x61, 0x9d, 0x14, 0xe4, 0x25, 0x91, 0xd3, 0x4b, 0xb9, 0x93, 0x68, 0x2b,
	0x20, 0xae, 0xfb, 0x5a, 0x40, 0xea, 0xee, 0x5f, 0x01, 0xa9, 0xbf, 0xcf, 0x05, 0xa4, 0xe1, 0x7e,
	0x17, 0x90, 0x43, 0x56, 0x01, 0x71, 0xe3, 0xdc, 0xde, 0x55, 0x33, 0xb7, 0xbf, 0x73, 0xc9, 0xf8,
	0x4e, 0x69, 0xf4, 0x17, 0x17, 0x68, 0xb6, 0x65, 0x2e, 0xfc, 0x15, 0x68, 0x1e, 0x11, 0xb2, 0xd1,
	0x83, 0xfa, 0x5e, 0xa1, 0xb0, 0xf1, 0xed, 0x35, 0xf2, 0xbc, 0x63, 0xbf, 0xc5, 0x4a, 0xcc, 0xc7,
	0x2f, 0x26, 0x76, 0x09, 0x28, 0xf0, 0x8a, 0x78, 0x34, 0xf0, 0x63, 0x4d, 0x5f, 0x40, 0x5d, 0xb9,
	0xa2, 0xde, 0x3a, 0x5d, 0x98, 0x3d, 0x46, 0xf6, 0x56, 0x40, 0x9d, 0xbc, 0x59, 0x3a, 0x3e, 0xc5,
	0xdb, 0xd9, 0xe1, 0x18, 0x05, 0x7c, 0x78, 0xdc, 0x73, 0x24, 0x9d, 0x11, 0x65, 0xed, 0x4e, 0x65,
	0xf4, 0x47, 0x5b, 0xed, 0x56, 0x18, 0x26, 0x58, 0x6c, 0xc1, 0x7d, 0x0a, 0xb7, 0x97, 0xad, 0x98,
	0x8c, 0xb6, 0x14, 0x2f, 0xcf, 0x15, 0x6f, 0xdf, 0x56, 0x6f, 0x9d, 0x36, 0xf5, 0x63, 0xf5, 0xba,
	0xf6, 0x8a, 0x09, 0xfe, 0x1f, 0x02, 0x5f, 0xb9, 0x5f, 0xf7, 0x14, 0xd2, 0xcf, 0x29, 0x00, 0x2b,
	0xcd, 0x83, 0x3b, 0x6d, 0x22, 0xc8, 0x13, 0x95, 0x36, 0x46, 0x4d, 0x58, 0x8d, 0x16, 0x25, 0x22,
	0xf7, 0x79, 0xe0, 0x91, 0xd2, 0x62, 0x46, 0xd0, 0xaa, 0x0c, 0xe9, 0x12, 0xbe, 0xaf, 0x70, 0x5b,
	0x59, 0x13, 0x44, 0x90, 0x18, 0x9e, 0x3f, 0x33, 0x95, 0x5b, 0xb9, 0xa0, 0xf7, 0x18, 0x26, 0x15,
	0x76, 0x00, 0x37, 0xb6, 0x44, 0xa6, 0xeb, 0x70, 0x4e, 0x6f, 0x52, 0xb8, 0x8d, 0x44, 0x91, 0x97,
	0x28, 0xc2, 0x4b, 0x21, 0xf3, 0x3a, 0x17, 0xf3, 0x67, 0x17, 0xf0, 0x93, 0x57, 0x85, 0xff, 0xaf,
	0xfb, 0xda, 0xb0, 0xd9, 0xfd, 0xb9, 0x70, 0xa9, 0x5d, 0x57, 0x73, 0x4c, 0x5e, 0x55, 0xc8, 0xbc,
	0xb5, 0x1b, 0xbf, 0xae, 0x57, 0x15, 0xae, 0x0f, 0x44, 0xd8, 0xbb, 0xf8, 0x6f, 0xbe, 0xac, 0x54,
	0x88, 0x5a, 0xa5, 0x6c, 0xd6, 0xae, 0x52, 0x46, 0x2f, 0x39, 0x59, 0x07, 0xfc, 0x21, 0x31, 0x29,
	0xd6, 0x08, 0xe7, 0xdb, 0x55, 0xc2, 0xa9, 0x59, 0xe1, 0x08, 0xe7, 0x8b, 0xff, 0x65, 0x38, 0xf3,
	0xe7, 0x2e, 0xa9, 0x13, 0x73, 0xb9, 0x95, 0x0b, 0xff, 0xab, 0x8b, 0xaf, 0x5c, 0xeb, 0xe2, 0x1b,
	0x56, 0xb8, 0xde, 0xca, 0x8b, 0xef, 0xd3, 0xeb, 0xbf, 0xf8, 0x5a, 0xa6, 0x57, 0xdc, 0x7b, 0x9f,
	0x53, 0xb8, 0x67, 0xc1, 0x33, 0x77, 0x5f, 0x24, 0xf5, 0xe4, 0xa5, 0xd2, 0xf9, 0xab, 0x95, 0xea,
	0x98, 0x15, 0x17, 0xa0, 0xcb, 0x33, 0xe5, 0x41, 0x7e, 0x5c, 0x81, 0x23, 0xa0, 0x49, 0xcc, 0x64,
	0x78, 0xfc, 0x7a, 0xa9, 0xdf, 0x7b, 0x19, 0xe7, 0x5b, 0x23, 0x5e, 0x78, 0xf3, 0x3d, 0x4a, 0x48,
	0x6a, 0xae, 0x06, 0x9f, 0x54, 0xb8, 0x76, 0xd6, 0x9a, 0x89, 0xda, 0x48, 0x16, 0x91, 0x07, 0xac,
	0xc2, 0xec, 0x31, 0x87, 0x32, 0x8b, 0x8f, 0x39, 0xe6, 0x02, 0x9b, 0xaa, 0x8b, 0xbc, 0x87, 0x6b,
	0xaf, 0xfd, 0x7a, 0x12, 0xb2, 0x47, 0xdd, 0x75, 0xef, 0x51, 0xaf, 0xbb, 0x7f, 0x51, 0xaf, 0x5f,
	0x77, 0xd4, 0xd9, 0xbf, 0x53, 0xa0, 0x51, 0x57, 0x03, 0xbd, 0xc0, 0xd3, 0xc3, 0xf3, 0xfd, 0xfc,
	0x50, 0xff, 0x2b, 0xbe, 0xef, 0xc1, 0xad, 0x80, 0x26, 0xa3, 0x48, 0xff, 0x4b, 0x43, 0xfb, 0xb9,
	0x3e, 0xee, 0xa5, 0x1e, 0x7e, 0xa8, 0x97, 0x0b, 0x47, 0x7a, 0x42, 0xbe, 0x93, 0x33, 0x6e, 0xd8,
	0x0e, 0x98, 0x4a, 0xfa, 0x01, 0x8e, 0x1f, 0x0c, 0x73, 0x91, 0xc8, 0x4f, 0x0c, 0xce, 0x53, 0x33,
	0x6e, 0xd8, 0x06, 0x5a, 0x08, 0x67, 0x5f, 0xff, 0xd0, 0xc0, 0x6b, 0xdd, 0x3f, 0x1a, 0xea, 0x8e,
	0xbc, 0x36, 0x30, 0xd8, 0xc3, 0xfb, 0x26, 0x66, 0xdc, 0x70, 0x1b, 0x78, 0x8c, 0x10, 0x75, 0x70,
	0x28, 0x1c, 0x1a, 0xe2, 0x7b, 0x5e, 0x7d, 0x2d, 0xcc, 0xf7, 0x84, 0x7c, 0xef, 0xcf, 0xb8, 0xe1,
	0x76, 0xb0, 0xc5, 0xc9, 0xd0, 0x7f, 0xa0, 0x87, 0xe7, 0x06, 0xc3, 0xfd, 0x7d, 0x43, 0x18, 0xf7,
	0x4d, 0xce, 0xb8, 0xe1, 0x2e, 0x10, 0xa8, 0x34, 0x26, 0xdc, 0x37, 0xd8, 0xc3, 0xf7, 0x71, 0x11,
	0x9d, 0x6f, 0x6a, 0xc6, 0x8d, 0xbe, 0x69, 0x04, 0x20, 0x22, 0xc5, 0xf7, 0x93, 0x00, 0xc3, 0x09,
	0x0a, 0x78, 0xad, 0xdf, 0x89, 0xc2, 0x21, 0xd8, 0x66, 0x0f, 0x7f, 0xd9, 0xef, 0x66, 0xfe, 0xcd,
	0xb5, 0x89, 0x72, 0x9a, 0x79, 0x41, 0xe1, 0x36, 0x43, 0xc7, 0x4f, 0x6b, 0x7e, 0xc7, 0xe8, 0xbd,
	0xbf, 0xe5, 0xce, 0xb8, 0xfc, 0x4c, 0x4b, 0xa7, 0x25, 0xa4, 0xf3, 0x9d, 0xbd, 0x9d, 0xa4, 0x81,
	0xeb, 0xa2, 0x58, 0x78, 0x9d, 0x02, 0x1b, 0xab, 0xbc, 0x82, 0x43, 0xe7, 0x2e, 0xa8, 0xfa, 0x4c,
	0xee, 0xdf, 0xe4, 0xec, 0xc1, 0x8c, 0x42, 0xc0, 0xbc, 0xa1, 0x70, 0xfb, 0x20, 0xad, 0x5e, 0xb9,
	0x68, 0xf6, 0x56, 0xf6, 0x37, 0x74, 0x7f, 0x4d, 0x0a, 0x36, 0x76, 0x0b, 0x43, 0x57, 0x31, 0x36,
	0xaa, 0xe9, 0xd6, 0xec, 0xfd, 0x2b, 0x05, 0x5a, 0xaa, 0xbe, 0x1f, 0xc1, 0x1d, 0xeb, 0x78, 0xaf,
	0x7a, 0xdb, 0xbf, 0x73, 0x5d, 0xaf, 0x5a, 0xcc, 0x21, 0x85, 0x7b, 0x11, 0xae, 0xf1, 0x02, 0xe8,
	0x5f, 0x83, 0x8e, 0xdd, 0x61, 0x60, 0xa0, 0xcc, 0x9d, 0xa4, 0x14, 0x8f, 0x9a, 0x0a, 0xb3, 0x9a,
	0xe5, 0x7f, 0xa2, 0x40, 0x6b, 0x8d, 0x72, 0x0c, 0x77, 0x55, 0xae, 0x43, 0x55, 0xbf, 0x76, 0x38,
	0xd7, 0xa2, 0x7a, 0x89, 0x66, 0x86, 0xf1, 0xca, 0xd4, 0x3a, 0x83, 0xfd, 0x35, 0x29, 0xd8, 0x95,
	0x9d, 0xcc, 0x9a, 0xae, 0x68, 0x2b, 0xf4, 0x47, 0x0a, 0xb4, 0xd6, 0x38, 0xb2, 0x9d, 0xde, 0xd4,
	0x3e, 0xd7, 0xd7, 0xe9, 0xcd, 0x10, 0xc9, 0xb3, 0x1a, 0x87, 0x95, 0xbf, 0x26, 0x85, 0x2c, 0x0c,
	0xbb, 0xa6, 0x37, 0xc1, 0xb7, 0x14, 0x2e, 0x0c, 0x03, 0xa0, 0x35, 0xd8, 0x3d, 0x10, 0x88, 0x48,
	0xf1, 0x80, 0xbe, 0x83, 0x03, 0x5c, 0x3a, 0x11, 0x08, 0x49, 0x51, 0xd4, 0xf0, 0x54, 0xc7, 0x53,
	0x1d, 0x7b, 0x59, 0x8a, 0x42, 0x3e, 0x21, 0x9d, 0x4e, 0x26, 0xa2, 0xf8, 0xdf, 0x0c, 0x9d, 0x6f,
	0xc9, 0x52, 0xaa, 0xab, 0x02, 0x79, 0x63, 0x33, 0xfe, 0x93, 0x83, 0xa6, 0x66, 0x8f, 0xae, 0xf5,
	0x39, 0xcb, 0x80, 0x61, 0x37, 0xa6, 0x3e, 0xfd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xef, 0xbe,
	0x06, 0x6e, 0x6e, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogManagerClient is the client API for LogManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogManagerClient interface {
	ObtainDataID(ctx context.Context, in *ObtainDataidReq, opts ...grpc.CallOption) (*ObtainDataidResp, error)
	CreateCleanStrategy(ctx context.Context, in *CreateCleanStrategyReq, opts ...grpc.CallOption) (*CommonResp, error)
	ListLogCollectionTask(ctx context.Context, in *ListLogCollectionTaskReq, opts ...grpc.CallOption) (*ListLogCollectionTaskResp, error)
	CreateLogCollectionTask(ctx context.Context, in *CreateLogCollectionTaskReq, opts ...grpc.CallOption) (*CollectionTaskCommonResp, error)
	DeleteLogCollectionTask(ctx context.Context, in *DeleteLogCollectionTaskReq, opts ...grpc.CallOption) (*CollectionTaskCommonResp, error)
}

type logManagerClient struct {
	cc *grpc.ClientConn
}

func NewLogManagerClient(cc *grpc.ClientConn) LogManagerClient {
	return &logManagerClient{cc}
}

func (c *logManagerClient) ObtainDataID(ctx context.Context, in *ObtainDataidReq, opts ...grpc.CallOption) (*ObtainDataidResp, error) {
	out := new(ObtainDataidResp)
	err := c.cc.Invoke(ctx, "/logmanager.LogManager/ObtainDataID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logManagerClient) CreateCleanStrategy(ctx context.Context, in *CreateCleanStrategyReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, "/logmanager.LogManager/CreateCleanStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logManagerClient) ListLogCollectionTask(ctx context.Context, in *ListLogCollectionTaskReq, opts ...grpc.CallOption) (*ListLogCollectionTaskResp, error) {
	out := new(ListLogCollectionTaskResp)
	err := c.cc.Invoke(ctx, "/logmanager.LogManager/ListLogCollectionTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logManagerClient) CreateLogCollectionTask(ctx context.Context, in *CreateLogCollectionTaskReq, opts ...grpc.CallOption) (*CollectionTaskCommonResp, error) {
	out := new(CollectionTaskCommonResp)
	err := c.cc.Invoke(ctx, "/logmanager.LogManager/CreateLogCollectionTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logManagerClient) DeleteLogCollectionTask(ctx context.Context, in *DeleteLogCollectionTaskReq, opts ...grpc.CallOption) (*CollectionTaskCommonResp, error) {
	out := new(CollectionTaskCommonResp)
	err := c.cc.Invoke(ctx, "/logmanager.LogManager/DeleteLogCollectionTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogManagerServer is the server API for LogManager service.
type LogManagerServer interface {
	ObtainDataID(context.Context, *ObtainDataidReq) (*ObtainDataidResp, error)
	CreateCleanStrategy(context.Context, *CreateCleanStrategyReq) (*CommonResp, error)
	ListLogCollectionTask(context.Context, *ListLogCollectionTaskReq) (*ListLogCollectionTaskResp, error)
	CreateLogCollectionTask(context.Context, *CreateLogCollectionTaskReq) (*CollectionTaskCommonResp, error)
	DeleteLogCollectionTask(context.Context, *DeleteLogCollectionTaskReq) (*CollectionTaskCommonResp, error)
}

// UnimplementedLogManagerServer can be embedded to have forward compatible implementations.
type UnimplementedLogManagerServer struct {
}

func (*UnimplementedLogManagerServer) ObtainDataID(ctx context.Context, req *ObtainDataidReq) (*ObtainDataidResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObtainDataID not implemented")
}
func (*UnimplementedLogManagerServer) CreateCleanStrategy(ctx context.Context, req *CreateCleanStrategyReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCleanStrategy not implemented")
}
func (*UnimplementedLogManagerServer) ListLogCollectionTask(ctx context.Context, req *ListLogCollectionTaskReq) (*ListLogCollectionTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLogCollectionTask not implemented")
}
func (*UnimplementedLogManagerServer) CreateLogCollectionTask(ctx context.Context, req *CreateLogCollectionTaskReq) (*CollectionTaskCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLogCollectionTask not implemented")
}
func (*UnimplementedLogManagerServer) DeleteLogCollectionTask(ctx context.Context, req *DeleteLogCollectionTaskReq) (*CollectionTaskCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLogCollectionTask not implemented")
}

func RegisterLogManagerServer(s *grpc.Server, srv LogManagerServer) {
	s.RegisterService(&_LogManager_serviceDesc, srv)
}

func _LogManager_ObtainDataID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObtainDataidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogManagerServer).ObtainDataID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logmanager.LogManager/ObtainDataID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogManagerServer).ObtainDataID(ctx, req.(*ObtainDataidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogManager_CreateCleanStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCleanStrategyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogManagerServer).CreateCleanStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logmanager.LogManager/CreateCleanStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogManagerServer).CreateCleanStrategy(ctx, req.(*CreateCleanStrategyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogManager_ListLogCollectionTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLogCollectionTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogManagerServer).ListLogCollectionTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logmanager.LogManager/ListLogCollectionTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogManagerServer).ListLogCollectionTask(ctx, req.(*ListLogCollectionTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogManager_CreateLogCollectionTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLogCollectionTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogManagerServer).CreateLogCollectionTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logmanager.LogManager/CreateLogCollectionTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogManagerServer).CreateLogCollectionTask(ctx, req.(*CreateLogCollectionTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogManager_DeleteLogCollectionTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLogCollectionTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogManagerServer).DeleteLogCollectionTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logmanager.LogManager/DeleteLogCollectionTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogManagerServer).DeleteLogCollectionTask(ctx, req.(*DeleteLogCollectionTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logmanager.LogManager",
	HandlerType: (*LogManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ObtainDataID",
			Handler:    _LogManager_ObtainDataID_Handler,
		},
		{
			MethodName: "CreateCleanStrategy",
			Handler:    _LogManager_CreateCleanStrategy_Handler,
		},
		{
			MethodName: "ListLogCollectionTask",
			Handler:    _LogManager_ListLogCollectionTask_Handler,
		},
		{
			MethodName: "CreateLogCollectionTask",
			Handler:    _LogManager_CreateLogCollectionTask_Handler,
		},
		{
			MethodName: "DeleteLogCollectionTask",
			Handler:    _LogManager_DeleteLogCollectionTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logmanager.proto",
}
