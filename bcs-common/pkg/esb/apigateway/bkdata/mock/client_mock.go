// Tencent is pleased to support the open source community by making Blueking Container Service available.
// Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
// http://opensource.org/licenses/MIT
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go

// Package mock_bkdata is a generated GoMock package.
package mock_bkdata

import (
	bkdata "github.com/Tencent/bk-bcs/bcs-common/pkg/esb/apigateway/bkdata"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClientInterface is a mock of ClientInterface interface
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// ObtainDataID mocks base method
func (m *MockClientInterface) ObtainDataID(arg0 bkdata.CustomAccessDeployPlanConfig) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObtainDataID", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObtainDataID indicates an expected call of ObtainDataID
func (mr *MockClientInterfaceMockRecorder) ObtainDataID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObtainDataID", reflect.TypeOf((*MockClientInterface)(nil).ObtainDataID), arg0)
}

// SetCleanStrategy mocks base method
func (m *MockClientInterface) SetCleanStrategy(strategy bkdata.DataCleanStrategy) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCleanStrategy", strategy)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCleanStrategy indicates an expected call of SetCleanStrategy
func (mr *MockClientInterfaceMockRecorder) SetCleanStrategy(strategy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCleanStrategy", reflect.TypeOf((*MockClientInterface)(nil).SetCleanStrategy), strategy)
}

// MockClientCreatorInterface is a mock of ClientCreatorInterface interface
type MockClientCreatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientCreatorInterfaceMockRecorder
}

// MockClientCreatorInterfaceMockRecorder is the mock recorder for MockClientCreatorInterface
type MockClientCreatorInterfaceMockRecorder struct {
	mock *MockClientCreatorInterface
}

// NewMockClientCreatorInterface creates a new mock instance
func NewMockClientCreatorInterface(ctrl *gomock.Controller) *MockClientCreatorInterface {
	mock := &MockClientCreatorInterface{ctrl: ctrl}
	mock.recorder = &MockClientCreatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientCreatorInterface) EXPECT() *MockClientCreatorInterfaceMockRecorder {
	return m.recorder
}

// NewClientFromConfig mocks base method
func (m *MockClientCreatorInterface) NewClientFromConfig(arg0 bkdata.BKDataClientConfig) bkdata.ClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClientFromConfig", arg0)
	ret0, _ := ret[0].(bkdata.ClientInterface)
	return ret0
}

// NewClientFromConfig indicates an expected call of NewClientFromConfig
func (mr *MockClientCreatorInterfaceMockRecorder) NewClientFromConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClientFromConfig", reflect.TypeOf((*MockClientCreatorInterface)(nil).NewClientFromConfig), arg0)
}
