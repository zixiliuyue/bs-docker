

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/Tencent/bk-bcs/bcs-scenarios/kourse/pkg/apis/tkex/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HookTemplateLister helps list HookTemplates.
// All objects returned here must be treated as read-only.
type HookTemplateLister interface {
	// List lists all HookTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HookTemplate, err error)
	// HookTemplates returns an object that can list and get HookTemplates.
	HookTemplates(namespace string) HookTemplateNamespaceLister
	HookTemplateListerExpansion
}

// hookTemplateLister implements the HookTemplateLister interface.
type hookTemplateLister struct {
	indexer cache.Indexer
}

// NewHookTemplateLister returns a new HookTemplateLister.
func NewHookTemplateLister(indexer cache.Indexer) HookTemplateLister {
	return &hookTemplateLister{indexer: indexer}
}

// List lists all HookTemplates in the indexer.
func (s *hookTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.HookTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HookTemplate))
	})
	return ret, err
}

// HookTemplates returns an object that can list and get HookTemplates.
func (s *hookTemplateLister) HookTemplates(namespace string) HookTemplateNamespaceLister {
	return hookTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HookTemplateNamespaceLister helps list and get HookTemplates.
// All objects returned here must be treated as read-only.
type HookTemplateNamespaceLister interface {
	// List lists all HookTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HookTemplate, err error)
	// Get retrieves the HookTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HookTemplate, error)
	HookTemplateNamespaceListerExpansion
}

// hookTemplateNamespaceLister implements the HookTemplateNamespaceLister
// interface.
type hookTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HookTemplates in the indexer for a given namespace.
func (s hookTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HookTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HookTemplate))
	})
	return ret, err
}

// Get retrieves the HookTemplate from the indexer for a given namespace and name.
func (s hookTemplateNamespaceLister) Get(name string) (*v1alpha1.HookTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hooktemplate"), name)
	}
	return obj.(*v1alpha1.HookTemplate), nil
}
