

// Code generated by lister-gen. DO NOT EDIT.

package v2

import (
	v2 "github.com/Tencent/bk-bcs/bcs-runtime/bcs-mesos/kubebkbcsv2/apis/bkbcs/v2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BcsDaemonsetLister helps list BcsDaemonsets.
type BcsDaemonsetLister interface {
	// List lists all BcsDaemonsets in the indexer.
	List(selector labels.Selector) (ret []*v2.BcsDaemonset, err error)
	// BcsDaemonsets returns an object that can list and get BcsDaemonsets.
	BcsDaemonsets(namespace string) BcsDaemonsetNamespaceLister
	BcsDaemonsetListerExpansion
}

// bcsDaemonsetLister implements the BcsDaemonsetLister interface.
type bcsDaemonsetLister struct {
	indexer cache.Indexer
}

// NewBcsDaemonsetLister returns a new BcsDaemonsetLister.
func NewBcsDaemonsetLister(indexer cache.Indexer) BcsDaemonsetLister {
	return &bcsDaemonsetLister{indexer: indexer}
}

// List lists all BcsDaemonsets in the indexer.
func (s *bcsDaemonsetLister) List(selector labels.Selector) (ret []*v2.BcsDaemonset, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.BcsDaemonset))
	})
	return ret, err
}

// BcsDaemonsets returns an object that can list and get BcsDaemonsets.
func (s *bcsDaemonsetLister) BcsDaemonsets(namespace string) BcsDaemonsetNamespaceLister {
	return bcsDaemonsetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BcsDaemonsetNamespaceLister helps list and get BcsDaemonsets.
type BcsDaemonsetNamespaceLister interface {
	// List lists all BcsDaemonsets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2.BcsDaemonset, err error)
	// Get retrieves the BcsDaemonset from the indexer for a given namespace and name.
	Get(name string) (*v2.BcsDaemonset, error)
	BcsDaemonsetNamespaceListerExpansion
}

// bcsDaemonsetNamespaceLister implements the BcsDaemonsetNamespaceLister
// interface.
type bcsDaemonsetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BcsDaemonsets in the indexer for a given namespace.
func (s bcsDaemonsetNamespaceLister) List(selector labels.Selector) (ret []*v2.BcsDaemonset, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.BcsDaemonset))
	})
	return ret, err
}

// Get retrieves the BcsDaemonset from the indexer for a given namespace and name.
func (s bcsDaemonsetNamespaceLister) Get(name string) (*v2.BcsDaemonset, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2.Resource("bcsdaemonset"), name)
	}
	return obj.(*v2.BcsDaemonset), nil
}
