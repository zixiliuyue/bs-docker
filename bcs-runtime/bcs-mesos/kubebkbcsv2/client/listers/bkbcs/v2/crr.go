

// Code generated by lister-gen. DO NOT EDIT.

package v2

import (
	v2 "github.com/Tencent/bk-bcs/bcs-runtime/bcs-mesos/kubebkbcsv2/apis/bkbcs/v2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CrrLister helps list Crrs.
type CrrLister interface {
	// List lists all Crrs in the indexer.
	List(selector labels.Selector) (ret []*v2.Crr, err error)
	// Crrs returns an object that can list and get Crrs.
	Crrs(namespace string) CrrNamespaceLister
	CrrListerExpansion
}

// crrLister implements the CrrLister interface.
type crrLister struct {
	indexer cache.Indexer
}

// NewCrrLister returns a new CrrLister.
func NewCrrLister(indexer cache.Indexer) CrrLister {
	return &crrLister{indexer: indexer}
}

// List lists all Crrs in the indexer.
func (s *crrLister) List(selector labels.Selector) (ret []*v2.Crr, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.Crr))
	})
	return ret, err
}

// Crrs returns an object that can list and get Crrs.
func (s *crrLister) Crrs(namespace string) CrrNamespaceLister {
	return crrNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CrrNamespaceLister helps list and get Crrs.
type CrrNamespaceLister interface {
	// List lists all Crrs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2.Crr, err error)
	// Get retrieves the Crr from the indexer for a given namespace and name.
	Get(name string) (*v2.Crr, error)
	CrrNamespaceListerExpansion
}

// crrNamespaceLister implements the CrrNamespaceLister
// interface.
type crrNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Crrs in the indexer for a given namespace.
func (s crrNamespaceLister) List(selector labels.Selector) (ret []*v2.Crr, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.Crr))
	})
	return ret, err
}

// Get retrieves the Crr from the indexer for a given namespace and name.
func (s crrNamespaceLister) Get(name string) (*v2.Crr, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2.Resource("crr"), name)
	}
	return obj.(*v2.Crr), nil
}
