

// Code generated by lister-gen. DO NOT EDIT.

package v2

import (
	v2 "github.com/Tencent/bk-bcs/bcs-runtime/bcs-mesos/kubebkbcsv2/apis/bkbcs/v2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BcsClusterAgentSettingLister helps list BcsClusterAgentSettings.
type BcsClusterAgentSettingLister interface {
	// List lists all BcsClusterAgentSettings in the indexer.
	List(selector labels.Selector) (ret []*v2.BcsClusterAgentSetting, err error)
	// BcsClusterAgentSettings returns an object that can list and get BcsClusterAgentSettings.
	BcsClusterAgentSettings(namespace string) BcsClusterAgentSettingNamespaceLister
	BcsClusterAgentSettingListerExpansion
}

// bcsClusterAgentSettingLister implements the BcsClusterAgentSettingLister interface.
type bcsClusterAgentSettingLister struct {
	indexer cache.Indexer
}

// NewBcsClusterAgentSettingLister returns a new BcsClusterAgentSettingLister.
func NewBcsClusterAgentSettingLister(indexer cache.Indexer) BcsClusterAgentSettingLister {
	return &bcsClusterAgentSettingLister{indexer: indexer}
}

// List lists all BcsClusterAgentSettings in the indexer.
func (s *bcsClusterAgentSettingLister) List(selector labels.Selector) (ret []*v2.BcsClusterAgentSetting, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.BcsClusterAgentSetting))
	})
	return ret, err
}

// BcsClusterAgentSettings returns an object that can list and get BcsClusterAgentSettings.
func (s *bcsClusterAgentSettingLister) BcsClusterAgentSettings(namespace string) BcsClusterAgentSettingNamespaceLister {
	return bcsClusterAgentSettingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BcsClusterAgentSettingNamespaceLister helps list and get BcsClusterAgentSettings.
type BcsClusterAgentSettingNamespaceLister interface {
	// List lists all BcsClusterAgentSettings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2.BcsClusterAgentSetting, err error)
	// Get retrieves the BcsClusterAgentSetting from the indexer for a given namespace and name.
	Get(name string) (*v2.BcsClusterAgentSetting, error)
	BcsClusterAgentSettingNamespaceListerExpansion
}

// bcsClusterAgentSettingNamespaceLister implements the BcsClusterAgentSettingNamespaceLister
// interface.
type bcsClusterAgentSettingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BcsClusterAgentSettings in the indexer for a given namespace.
func (s bcsClusterAgentSettingNamespaceLister) List(selector labels.Selector) (ret []*v2.BcsClusterAgentSetting, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.BcsClusterAgentSetting))
	})
	return ret, err
}

// Get retrieves the BcsClusterAgentSetting from the indexer for a given namespace and name.
func (s bcsClusterAgentSettingNamespaceLister) Get(name string) (*v2.BcsClusterAgentSetting, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2.Resource("bcsclusteragentsetting"), name)
	}
	return obj.(*v2.BcsClusterAgentSetting), nil
}
