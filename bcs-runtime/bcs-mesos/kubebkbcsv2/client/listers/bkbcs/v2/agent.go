

// Code generated by lister-gen. DO NOT EDIT.

package v2

import (
	v2 "github.com/Tencent/bk-bcs/bcs-runtime/bcs-mesos/kubebkbcsv2/apis/bkbcs/v2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AgentLister helps list Agents.
type AgentLister interface {
	// List lists all Agents in the indexer.
	List(selector labels.Selector) (ret []*v2.Agent, err error)
	// Agents returns an object that can list and get Agents.
	Agents(namespace string) AgentNamespaceLister
	AgentListerExpansion
}

// agentLister implements the AgentLister interface.
type agentLister struct {
	indexer cache.Indexer
}

// NewAgentLister returns a new AgentLister.
func NewAgentLister(indexer cache.Indexer) AgentLister {
	return &agentLister{indexer: indexer}
}

// List lists all Agents in the indexer.
func (s *agentLister) List(selector labels.Selector) (ret []*v2.Agent, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.Agent))
	})
	return ret, err
}

// Agents returns an object that can list and get Agents.
func (s *agentLister) Agents(namespace string) AgentNamespaceLister {
	return agentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AgentNamespaceLister helps list and get Agents.
type AgentNamespaceLister interface {
	// List lists all Agents in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2.Agent, err error)
	// Get retrieves the Agent from the indexer for a given namespace and name.
	Get(name string) (*v2.Agent, error)
	AgentNamespaceListerExpansion
}

// agentNamespaceLister implements the AgentNamespaceLister
// interface.
type agentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Agents in the indexer for a given namespace.
func (s agentNamespaceLister) List(selector labels.Selector) (ret []*v2.Agent, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2.Agent))
	})
	return ret, err
}

// Get retrieves the Agent from the indexer for a given namespace and name.
func (s agentNamespaceLister) Get(name string) (*v2.Agent, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v2.Resource("agent"), name)
	}
	return obj.(*v2.Agent), nil
}
