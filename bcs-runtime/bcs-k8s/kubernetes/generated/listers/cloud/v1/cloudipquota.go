
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/Tencent/bk-bcs/bcs-runtime/bcs-k8s/kubernetes/apis/cloud/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudIPQuotaLister helps list CloudIPQuotas.
type CloudIPQuotaLister interface {
	// List lists all CloudIPQuotas in the indexer.
	List(selector labels.Selector) (ret []*v1.CloudIPQuota, err error)
	// CloudIPQuotas returns an object that can list and get CloudIPQuotas.
	CloudIPQuotas(namespace string) CloudIPQuotaNamespaceLister
	CloudIPQuotaListerExpansion
}

// cloudIPQuotaLister implements the CloudIPQuotaLister interface.
type cloudIPQuotaLister struct {
	indexer cache.Indexer
}

// NewCloudIPQuotaLister returns a new CloudIPQuotaLister.
func NewCloudIPQuotaLister(indexer cache.Indexer) CloudIPQuotaLister {
	return &cloudIPQuotaLister{indexer: indexer}
}

// List lists all CloudIPQuotas in the indexer.
func (s *cloudIPQuotaLister) List(selector labels.Selector) (ret []*v1.CloudIPQuota, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CloudIPQuota))
	})
	return ret, err
}

// CloudIPQuotas returns an object that can list and get CloudIPQuotas.
func (s *cloudIPQuotaLister) CloudIPQuotas(namespace string) CloudIPQuotaNamespaceLister {
	return cloudIPQuotaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudIPQuotaNamespaceLister helps list and get CloudIPQuotas.
type CloudIPQuotaNamespaceLister interface {
	// List lists all CloudIPQuotas in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.CloudIPQuota, err error)
	// Get retrieves the CloudIPQuota from the indexer for a given namespace and name.
	Get(name string) (*v1.CloudIPQuota, error)
	CloudIPQuotaNamespaceListerExpansion
}

// cloudIPQuotaNamespaceLister implements the CloudIPQuotaNamespaceLister
// interface.
type cloudIPQuotaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudIPQuotas in the indexer for a given namespace.
func (s cloudIPQuotaNamespaceLister) List(selector labels.Selector) (ret []*v1.CloudIPQuota, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CloudIPQuota))
	})
	return ret, err
}

// Get retrieves the CloudIPQuota from the indexer for a given namespace and name.
func (s cloudIPQuotaNamespaceLister) Get(name string) (*v1.CloudIPQuota, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("cloudipquota"), name)
	}
	return obj.(*v1.CloudIPQuota), nil
}
